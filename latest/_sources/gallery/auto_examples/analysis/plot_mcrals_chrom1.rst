
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/auto_examples/analysis/plot_mcrals_chrom1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_auto_examples_analysis_plot_mcrals_chrom1.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_auto_examples_analysis_plot_mcrals_chrom1.py:


MCR-ALS example (adapted from Jaumot et al. 2005)
=================================================

In this example, we perform the MCR ALS optimization of a dataset
corresponding to a HPLC-DAD run, from :cite:t:`jaumot:2005` and :cite:t:`jaumot:2015`\ .

This dataset (and others) can be downloaded from the
`Multivariate Curve Resolution Homepage
<https://mcrals.wordpress.com/download/example-data-sets>`_\ .

For the user convenience, this dataset is present in the test data directory
`scp.preferences.datadir` of SpectroChemPy as ``als2004dataset.MAT``\ .

.. GENERATED FROM PYTHON SOURCE LINES 23-24

Import the spectrochempy API package

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: default

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 27-33

Loading the example dataset
---------------------------

The file type (matlab) is inferred from the extension ``.mat``\ , so we
can use the generic API function `read`\ .  Alternatively, one can be more
specific by using the `read_matlab` function. Both have exactly the same behavior.

.. GENERATED FROM PYTHON SOURCE LINES 33-35

.. code-block:: default

    datasets = scp.read("matlabdata/als2004dataset.MAT")








.. GENERATED FROM PYTHON SOURCE LINES 36-37

As the ``.mat`` file contains 6 matrices, 6 `NDDataset` objects are returned.

.. GENERATED FROM PYTHON SOURCE LINES 37-41

.. code-block:: default

    print("NDDataset names:")
    for ds in datasets:
        print(f"{ds.name} : {ds.shape}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    NDDataset names:
    cpure : (204, 4)
    MATRIX : (204, 96)
    isp_matrix : (4, 4)
    spure : (4, 96)
    csel_matrix : (51, 4)
    m1 : (51, 96)




.. GENERATED FROM PYTHON SOURCE LINES 42-55

We are interested in the last dataset (``"m1"``\ ) that contains a single HPLS-DAD run
``(51x96)``  dataset.

As usual, the 51 rows correspond to the ``time axis`` of the HPLC run, and the 96
columns to the ``wavelength`` axis of the UV spectra. The original dataset does not
contain information as to the actual time and wavelength coordinates.

MCR-ALS needs also an initial guess for either concentration profiles or pure spectra
concentration profiles.
The 4th dataset in the example (``"spure"``) contains (4x96) guess of spectral
profiles.

The experimental data as :math:`X` (``X``) and the ``guess`` are thus:

.. GENERATED FROM PYTHON SOURCE LINES 55-58

.. code-block:: default

    X = datasets[-1]
    guess = datasets[3]








.. GENERATED FROM PYTHON SOURCE LINES 59-60

Plot of X and of the guess:

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: default

    _ = X.plot()
    _ = guess.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_001.png
         :alt: plot mcrals chrom1
         :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_002.png
         :alt: plot mcrals chrom1
         :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_002.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 64-71

Create a MCR-ALS object
-----------------------

We first create a MCR-ALS object named here ``mcr``\ .

The `log_level` option can be set to ``"INFO"`` to get verbose ouput of
the MCR-ALS optimization steps.

.. GENERATED FROM PYTHON SOURCE LINES 71-73

.. code-block:: default

    mcr = scp.MCRALS(log_level="INFO")








.. GENERATED FROM PYTHON SOURCE LINES 74-79

Fit the MCR-ALS model
-----------------------

Then we execute the optimization process using the `fit` method with
the ``X`` and ``guess`` dataset as input arguments.

.. GENERATED FROM PYTHON SOURCE LINES 79-81

.. code-block:: default

    _ = mcr.fit(X, guess)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     Spectra profile initialized with 4 components
     Initial concentration profile computed
     ***           ALS optimisation log            ***
     #iter     RSE / PCA        RSE / Exp      %change
     -------------------------------------------------
       1        0.000380        0.002798      -97.755251
       2        0.000380        0.002798       -0.000517
     converged !




.. GENERATED FROM PYTHON SOURCE LINES 82-87

Plotting the results
--------------------

The optimization has converged. We can get the concentration :math:`C` (C) and
pure spectra profiles :math:`S^T` (St) and plot them

.. GENERATED FROM PYTHON SOURCE LINES 87-91

.. code-block:: default


    _ = mcr.C.T.plot()
    _ = mcr.St.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_003.png
         :alt: plot mcrals chrom1
         :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_004.png
         :alt: plot mcrals chrom1
         :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_004.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 92-97

Finally, plots the reconstructed dataset (:math:`\hat{X} = C.S^T`\ )
*vs.* original dataset
(:math:`X`\ ) as well as the residuals (:math:`E`\ ) for few spectra.

The fit is good and comparable to the original paper (:cite:t:`jaumot:2005`).

.. GENERATED FROM PYTHON SOURCE LINES 97-99

.. code-block:: default

    _ = mcr.plotmerit(nb_traces=5)




.. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_005.png
   :alt: MCRALS plot of merit
   :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_mcrals_chrom1_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 100-102

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script

.. GENERATED FROM PYTHON SOURCE LINES 104-106

.. code-block:: default


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.234 seconds)


.. _sphx_glr_download_gallery_auto_examples_analysis_plot_mcrals_chrom1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_mcrals_chrom1.py <plot_mcrals_chrom1.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_mcrals_chrom1.ipynb <plot_mcrals_chrom1.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
