Search.setIndex({"alltitles": {"1) simulated chromatogram": [[18, "1)-simulated-chromatogram"]], "1. Add a test and sample files": [[5, "add-a-test-and-sample-files"]], "1D-Dataset (unidimensional dataset)": [[402, "1D-Dataset-(unidimensional-dataset)"]], "2) absorption spectra": [[18, "2)-absorption-spectra"]], "2. Complete FILETYPES and ALIAS": [[5, "complete-filetypes-and-alias"]], "2021": [[385, "id18"]], "2022": [[385, "id15"]], "2023": [[385, "id10"]], "2024": [[385, "id4"]], "2025": [[385, "id1"]], "2D-IRIS analysis example": [[20, null]], "3) simulated data matrix": [[18, "3)-simulated-data-matrix"]], "3. Create the reader_xxx.py file": [[5, "create-the-reader-xxx-py-file"]], "3. General Guidelines for data and metadata format": [[5, "general-guidelines-for-data-and-metadata-format"]], "4) evolving factor analysis (EFA)": [[18, "4)-evolving-factor-analysis-(EFA)"]], "4. Polish your code and make the Pull Requests": [[5, "polish-your-code-and-make-the-pull-requests"]], "A basic illustration of the rotational ambiguity": [[390, "A-basic-illustration-of-the-rotational-ambiguity"]], "A code snippet to display properties": [[392, "A-code-snippet-to-display-properties"]], "A good practice: use relative paths": [[396, "A-good-practice:-use-relative-paths"]], "ALS Optimization": [[390, "ALS-Optimization"]], "API Configuration": [[395, null]], "About docstrings and standards": [[9, "about-docstrings-and-standards"]], "About the dates and times": [[402, "About-the-dates-and-times"]], "About the history attribute": [[402, "About-the-history-attribute"]], "About the spectrochempy documentation": [[10, "about-the-spectrochempy-documentation"]], "About this user\u2019s guide": [[400, "About-this-user's-guide"]], "Acknowledgments": [[1, null]], "Acquisition dates and y axis": [[397, "Acquisition-dates-and-y-axis"]], "Adding a Reader": [[5, null]], "Adding several coordinates to a single dimension": [[402, "Adding-several-coordinates-to-a-single-dimension"]], "Adding titles and annotations": [[405, "Adding-titles-and-annotations"]], "Adding your examples to the gallery": [[12, null]], "Additional steps on windows": [[87, "additional-steps-on-windows"]], "Algebra": [[384, "algebra"]], "Alignment along several dimensions": [[406, "Alignment-along-several-dimensions"]], "Alignment of datasets": [[406, null]], "Alignment, interpolation": [[384, "alignment-interpolation"]], "Analysing the 2D NMD dataset": [[76, "Analysing-the-2D-NMD-dataset"]], "Analysing the data": [[77, "Analysing-the-data"]], "Analysis": [[91, "Analysis"], [384, "analysis"], [387, null]], "Analysis CP NMR spectra": [[75, null]], "Analysis NDDataset": [[38, null], [83, "analysis-nddataset"]], "Angle units conversion": [[411, "Angle-units-conversion"]], "Another default search directory: datadir": [[396, "Another-default-search-directory:-datadir"]], "Apodization": [[62, null], [73, "apodization"], [83, "apodization"], [384, "apodization"], [407, null]], "Apodization using sine window multiplication": [[407, "Apodization-using-sine-window-multiplication"]], "Arithmetic": [[411, "Arithmetic"]], "Asymmetric Least Squares smoothing": [[80, "Asymmetric-Least-Squares-smoothing"]], "Augmented datasets": [[390, "Augmented-datasets"]], "Automatic search": [[20, "Automatic-search"]], "Automatically fix formatting errors": [[6, "automatically-fix-formatting-errors"]], "Backwards compatibility": [[7, "backwards-compatibility"]], "Baseline": [[35, null], [38, "baseline"], [83, "baseline"]], "Baseline correction": [[80, "Baseline-correction"], [91, "Baseline-correction"], [384, "baseline-correction"], [389, "Baseline-correction"]], "Baseline correction 2D spectra (series of spectra)": [[80, "Baseline-correction-2D-spectra-(series-of-spectra)"]], "Baseline correction using NDDataset or API methods": [[388, "Baseline-correction-using-NDDataset-or-API-methods"]], "Baseline corrections": [[388, null]], "Basic creation methods": [[384, "basic-creation-methods"]], "Basic transformations": [[416, null]], "Be prepared to work on the code": [[6, "be-prepared-to-work-on-the-code"]], "Bibliography": [[95, null]], "Binary Ufuncs": [[411, "Binary-Ufuncs"]], "Binary functions": [[411, "Binary-functions"]], "Breaking changes": [[417, "breaking-changes"], [419, "breaking-changes"], [444, "breaking-changes"], [453, "breaking-changes"], [459, "breaking-changes"], [460, "breaking-changes"], [461, "breaking-changes"], [463, "breaking-changes"], [467, "breaking-changes"]], "Bug fixes": [[417, "bug-fixes"], [419, "bug-fixes"], [421, "bug-fixes"], [422, "bug-fixes"], [423, "bug-fixes"], [424, "bug-fixes"], [425, "bug-fixes"], [426, "bug-fixes"], [427, "bug-fixes"], [428, "bug-fixes"], [429, "bug-fixes"], [430, "bug-fixes"], [431, "bug-fixes"], [432, "bug-fixes"], [433, "bug-fixes"], [434, "bug-fixes"], [435, "bug-fixes"], [436, "bug-fixes"], [437, "bug-fixes"], [438, "bug-fixes"], [439, "bug-fixes"], [440, "bug-fixes"], [442, "bug-fixes"], [443, "bug-fixes"], [444, "bug-fixes"], [445, "bug-fixes"], [446, "bug-fixes"], [449, "bug-fixes"], [450, "bug-fixes"], [451, "bug-fixes"], [452, "bug-fixes"], [454, "bug-fixes"], [455, "bug-fixes"], [456, "bug-fixes"], [457, "bug-fixes"], [458, "bug-fixes"], [460, "bug-fixes"], [461, "bug-fixes"], [463, "bug-fixes"], [464, "bug-fixes"], [465, "bug-fixes"], [466, "bug-fixes"], [467, "bug-fixes"], [468, "bug-fixes"]], "Building Docker images": [[11, null]], "Building master branch documentation": [[10, "building-master-branch-documentation"]], "Building the documentation": [[10, "building-the-documentation"]], "Building the environment image locally": [[11, "building-the-environment-image-locally"]], "Bullets": [[401, "Bullets"]], "Cantera": [[85, "cantera"]], "Case of initial spectral profiles": [[390, "Case-of-initial-spectral-profiles"]], "Change the NDDataset.preferences": [[405, "Change-the-NDDataset.preferences"]], "Changing number of dimensions": [[384, "changing-number-of-dimensions"]], "Changing the aspect of the plot": [[405, "Changing-the-aspect-of-the-plot"]], "Changing the plot style using matplotlib style sheets": [[405, "Changing-the-plot-style-using-matplotlib-style-sheets"]], "Changing the type of plot": [[405, "Changing-the-type-of-plot"]], "Changing type": [[384, "changing-type"]], "Changing units": [[416, "Changing-units"]], "Check the Installation": [[88, "check-the-installation"], [90, "check-the-installation"]], "Citing  SpectroChemPy": [[0, null]], "Clipping and rounding": [[384, "clipping-and-rounding"]], "Cloning the repository locally": [[89, "cloning-the-repository-locally"]], "Code snippet for \u2018advanced\u2019 baseline correction": [[388, "Code-snippet-for-'advanced'-baseline-correction"]], "Code standards": [[7, "code-standards"]], "Code usage": [[96, "code-usage"]], "Colored note boxes": [[401, "Colored-note-boxes"]], "Commit your code": [[6, "commit-your-code"]], "Comparison with the OMNIC processing.": [[410, "Comparison-with-the-OMNIC-processing."]], "Complex": [[384, "complex"]], "Complex or hypercomplex NDDatasets": [[411, "Complex-or-hypercomplex-NDDatasets"]], "Computation times": [[27, null], [30, null], [34, null], [37, null], [39, null], [44, null], [52, null], [56, null], [59, null], [61, null], [65, null], [69, null], [72, null], [78, null], [81, null], [82, null], [386, null]], "Configuration": [[15, "configuration"]], "Constant trend": [[388, "Constant-trend"]], "Contribute": [[93, "contribute"]], "Contributing to SpectroChemPy": [[6, null]], "Contributing to specific parts of the code": [[8, null]], "Contributing to the code": [[7, null]], "Contributing to the documentation": [[10, null]], "Contributing your changes to SpectroChemPy": [[6, "contributing-your-changes-to-spectrochempy"]], "Controlling the environments": [[6, "controlling-the-environments"]], "Conventions for the examples": [[9, "conventions-for-the-examples"]], "Convert between units": [[43, "Convert-between-units"]], "Convolution with window filters": [[414, "Convolution-with-window-filters"]], "Convolution with windows": [[414, "Convolution-with-windows"]], "Coordinates": [[41, "Coordinates"], [402, "Coordinates"]], "Coordinates-related objects": [[384, "coordinates-related-objects"]], "Copying existing NDDataset": [[402, "Copying-existing-NDDataset"]], "Core functionalities": [[60, null], [83, "core-functionalities"]], "Core objects": [[403, null]], "Create a MCR-ALS object": [[21, "Create-a-MCR-ALS-object"]], "Create a NMF object": [[23, "Create-a-NMF-object"]], "Create a conda environment": [[89, "create-a-conda-environment"]], "Create a dataset from a function": [[402, "Create-a-dataset-from-a-function"]], "Create a new Jupyter notebook": [[399, "Create-a-new-Jupyter-notebook"]], "Create and fit a FastICA object": [[19, "Create-and-fit-a-FastICA-object"]], "Create quantities": [[43, "Create-quantities"]], "Create your own style": [[405, "Create-your-own-style"]], "Creating NDDataset": [[384, "creating-nddataset"]], "Creating a Python development environment": [[6, "creating-a-python-development-environment"]], "Creating a branch": [[6, "creating-a-branch"]], "Creating and executing a Docker container": [[11, "creating-and-executing-a-docker-container"]], "Creation": [[41, "Creation"]], "Creation from existing data": [[384, "creation-from-existing-data"]], "Creation from numerical ranges": [[384, "creation-from-numerical-ranges"]], "Credits": [[93, "credits"]], "Cross-decomposition": [[28, null], [38, "cross-decomposition"], [83, "cross-decomposition"]], "Curvefitting": [[31, null], [38, "curvefitting"], [83, "curvefitting"]], "Data": [[41, "Data"]], "Decomposition": [[16, null], [38, "decomposition"], [83, "decomposition"]], "Default behaviour": [[392, "Default-behaviour"]], "Default plotting": [[405, "Default-plotting"]], "Delete your merged branch (optional)": [[6, "delete-your-merged-branch-optional"]], "Denoising": [[66, null], [73, "denoising"], [80, "Denoising"], [83, "denoising"], [408, null]], "Denoising 2D spectra": [[408, "Denoising-2D-spectra"]], "Denoising a 2D Raman spectrum": [[67, null]], "Dependency updates": [[417, "dependency-updates"], [419, "dependency-updates"]], "Deprecations": [[417, "deprecations"], [419, "deprecations"], [446, "deprecations"], [450, "deprecations"], [459, "deprecations"], [460, "deprecations"], [461, "deprecations"], [463, "deprecations"], [465, "deprecations"]], "Designed for Open Science": [[92, "designed-for-open-science"]], "Determination of initial concentrations using EFA": [[390, "Determination-of-initial-concentrations-using-EFA"]], "Detrend independently on several data segment": [[388, "Detrend-independently-on-several-data-segment"]], "Detrending": [[80, "Detrending"], [388, "Detrending"]], "Developer\u2019s Guide": [[13, null]], "Dialog boxes": [[396, "Dialog-boxes"]], "Display dataset information": [[91, "Display-dataset-information"]], "Do not use pytest.xfail": [[4, "do-not-use-pytest-xfail"]], "Docker Installation": [[11, "docker-installation"]], "Documentation:": [[10, "documentation"]], "Documenting change log": [[7, "documenting-change-log"]], "EFA (Keller and Massart original example)": [[18, null]], "EFA example": [[17, null]], "Editors": [[15, null]], "Emphasis": [[401, "Emphasis"]], "Error handling": [[395, "Error-handling"]], "Evolving factor analysis": [[384, "evolving-factor-analysis"]], "Example": [[388, "Example"], [406, "Example"]], "Examples and test data": [[85, "examples-and-test-data"]], "Examples using spectrochempy.concatenate": [[153, "examples-using-spectrochempy-concatenate"]], "Examples using spectrochempy.denoise": [[163, "examples-using-spectrochempy-denoise"]], "Examples using spectrochempy.despike": [[164, "examples-using-spectrochempy-despike"]], "Examples using spectrochempy.detrend": [[165, "examples-using-spectrochempy-detrend"]], "Examples using spectrochempy.dot": [[168, "examples-using-spectrochempy-dot"]], "Examples using spectrochempy.em": [[170, "examples-using-spectrochempy-em"]], "Examples using spectrochempy.error_": [[173, "examples-using-spectrochempy-error"]], "Examples using spectrochempy.fft": [[175, "examples-using-spectrochempy-fft"]], "Examples using spectrochempy.info_": [[195, "examples-using-spectrochempy-info"]], "Examples using spectrochempy.load_iris": [[206, "examples-using-spectrochempy-load-iris"]], "Examples using spectrochempy.pk": [[225, "examples-using-spectrochempy-pk"]], "Examples using spectrochempy.plot": [[227, "examples-using-spectrochempy-plot"]], "Examples using spectrochempy.plot_multiple": [[234, "examples-using-spectrochempy-plot-multiple"]], "Examples using spectrochempy.plot_stack": [[238, "examples-using-spectrochempy-plot-stack"]], "Examples using spectrochempy.qsin": [[300, "examples-using-spectrochempy-qsin"]], "Examples using spectrochempy.read": [[302, "examples-using-spectrochempy-read"]], "Examples using spectrochempy.read_labspec": [[309, "examples-using-spectrochempy-read-labspec"]], "Examples using spectrochempy.read_matlab": [[311, "examples-using-spectrochempy-read-matlab"]], "Examples using spectrochempy.read_omnic": [[312, "examples-using-spectrochempy-read-omnic"]], "Examples using spectrochempy.read_opus": [[313, "examples-using-spectrochempy-read-opus"]], "Examples using spectrochempy.read_topspin": [[321, "examples-using-spectrochempy-read-topspin"]], "Examples using spectrochempy.read_wdf": [[322, "examples-using-spectrochempy-read-wdf"]], "Examples using spectrochempy.read_wire": [[323, "examples-using-spectrochempy-read-wire"]], "Examples using spectrochempy.run_script": [[332, "examples-using-spectrochempy-run-script"]], "Examples using spectrochempy.set_loglevel": [[337, "examples-using-spectrochempy-set-loglevel"]], "Examples using spectrochempy.sinm": [[346, "examples-using-spectrochempy-sinm"]], "Examples using spectrochempy.snip": [[348, "examples-using-spectrochempy-snip"]], "Examples using spectrochempy.sp": [[350, "examples-using-spectrochempy-sp"]], "Example\u2019s gallery": [[83, null]], "Executing a SpectroChemPy Docker container": [[87, "executing-a-spectrochempy-docker-container"]], "Exponential multiplication": [[407, "Exponential-multiplication"]], "Exponential window multiplication": [[63, null]], "Export a NDDataset": [[384, "export-a-nddataset"]], "External links": [[401, "External-links"]], "FFT of 1D NMR spectra": [[409, "FFT-of-1D-NMR-spectra"]], "FTIR interferogram processing": [[410, null]], "Failing tests": [[4, "failing-tests"]], "FastICA example": [[19, null]], "File": [[384, "file"]], "Filtering using API or NDDataset methods.": [[414, "Filtering-using-API-or-NDDataset-methods."]], "Filtering, Smoothing and Denoising": [[414, null]], "Find maxima by manual inspection of the plot": [[392, "Find-maxima-by-manual-inspection-of-the-plot"]], "Find maxima with an automated method: find_peaks()": [[392, "Find-maxima-with-an-automated-method:-find_peaks()"]], "Find peaks": [[384, "find-peaks"]], "Fit a model": [[77, "Fit-a-model"]], "Fit the MCR-ALS model": [[21, "Fit-the-MCR-ALS-model"]], "Fit the model": [[23, "Fit-the-model"]], "Fitting": [[389, null]], "Fitting 1D dataset": [[32, null]], "Fitting script": [[389, "Fitting-script"]], "Forking the spectrochempy repository": [[6, "forking-the-spectrochempy-repository"]], "Fourier transform": [[384, "fourier-transform"]], "Frequently asked questions (FAQ)": [[96, null]], "Functions affecting magnitudes of the number but also units": [[411, "Functions-affecting-magnitudes-of-the-number-but-also-units"], [411, "id2"]], "Functions affecting magnitudes of the number but keeping units": [[411, "Functions-affecting-magnitudes-of-the-number-but-keeping-units"], [411, "id1"]], "Functions that require no units or dimensionless units for inputs. Returns dimensionless objects.": [[411, "Functions-that-require-no-units-or-dimensionless-units-for-inputs.-Returns-dimensionless-objects."], [411, "id3"]], "Functions that return numpy arrays (Work only for NDDataset)": [[411, "Functions-that-return-numpy-arrays-(Work-only-for-NDDataset)"], [411, "id4"]], "Gaussian-Lorentzian apodization": [[407, "Gaussian-Lorentzian-apodization"]], "General": [[96, "general"]], "General Principles": [[6, "general-principles"]], "General information": [[395, "General-information"]], "General rules": [[9, "general-rules"]], "Generate a test dataset": [[18, "Generate-a-test-dataset"]], "Geometric shapes": [[401, "Geometric-shapes"]], "Get project\u2019s elements": [[404, "Get-project's-elements"]], "Get the mixing system and source spectral profiles": [[19, "Get-the-mixing-system-and-source-spectral-profiles"]], "Getting Started": [[93, "getting-started"]], "Glossary": [[383, null]], "Good practice: use os or pathlib modules": [[396, "Good-practice:-use-os-or-pathlib-modules"]], "Graphics": [[401, "Graphics"]], "Guessing the concentration profile with PCA + EFA": [[390, "Guessing-the-concentration-profile-with-PCA-+-EFA"]], "Headings": [[401, "Headings"]], "Horizontal lines": [[401, "Horizontal-lines"]], "How it works?": [[388, "How-it-works?"]], "How to build the spectrochempy documentation": [[10, "how-to-build-the-spectrochempy-documentation"]], "How to get started": [[400, "How-to-get-started"]], "How to get the index from a coordinate?": [[96, "how-to-get-the-index-from-a-coordinate"]], "How to specify a plot with abscissa in ascending or descending order?": [[96, "how-to-specify-a-plot-with-abscissa-in-ascending-or-descending-order"]], "How to use NDDataset": [[40, null], [60, "how-to-use-nddataset"], [83, "how-to-use-nddataset"]], "Hyperbolic functions": [[411, "Hyperbolic-functions"], [411, "id5"]], "IRIS analysis without regularization": [[20, "IRIS-analysis-without-regularization"]], "IRIS processing": [[91, "IRIS-processing"]], "Import & Export": [[398, null]], "Import / Export": [[45, null], [60, "import-export"], [83, "import-export"]], "Import API": [[75, "Import-API"], [76, null], [77, "Import-API"]], "Import Data": [[396, null]], "Import IR Data": [[397, null]], "Import NMR spectra": [[75, "Import-NMR-spectra"]], "Import a NDataset from external source": [[384, "import-a-ndataset-from-external-source"]], "Import dataset from local files": [[46, "Import-dataset-from-local-files"]], "Import dataset from remote files": [[46, "Import-dataset-from-remote-files"]], "Import of Bruker OPUS files": [[397, "Import-of-Bruker-OPUS-files"]], "Import of OMNIC files": [[397, "Import-of-OMNIC-files"]], "Import with explicit directory or file pathnames": [[396, "Import-with-explicit-directory-or-file-pathnames"]], "Import/Export of JCAMP-DX files": [[397, "Import/Export-of-JCAMP-DX-files"]], "Import/export": [[384, "import-export"]], "Importing a 1D spectra": [[80, "Importing-a-1D-spectra"]], "Importing a 2D NMR spectra": [[76, "Importing-a-2D-NMR-spectra"]], "Importing a pseudo 2D NMR spectra": [[77, "Importing-a-pseudo-2D-NMR-spectra"]], "Importing from external dataset": [[402, "Importing-from-external-dataset"]], "Indenting": [[401, "Indenting"]], "Independant Component Analysis": [[384, "independant-component-analysis"]], "Indexing": [[384, "indexing"]], "Initial guess and MCR ALS optimization": [[390, "Initial-guess-and-MCR-ALS-optimization"]], "Install SpectroChemPy in this environment": [[89, "install-spectrochempy-in-this-environment"]], "Install a Docker container": [[87, null]], "Install in Google Colaboratory (Colab)": [[86, null]], "Install optional dependencies": [[85, null]], "Installation": [[87, "installation"]], "Installation Guide for Mac OSX": [[88, null]], "Installation Guide for Windows": [[90, null]], "Installation from sources (master or develop versions)": [[89, null]], "Installation guide": [[84, null]], "Installation of SpectroChemPy": [[84, "installation-of-spectrochempy"]], "Installation using Conda": [[88, "installation-using-conda"], [90, "installation-using-conda"]], "Installation using pip": [[88, "installation-using-pip"], [90, "installation-using-pip"]], "Installing git": [[6, "installing-git"], [89, "installing-git"]], "Integral inversion solver for spectroscopic data": [[384, "integral-inversion-solver-for-spectroscopic-data"]], "Internal links": [[401, "Internal-links"]], "Introduction": [[390, "Introduction"], [391, "Introduction"], [394, "Introduction"], [400, null], [407, "Introduction"]], "Introduction to the plotting librairie": [[55, null]], "Joining or splitting datasets": [[384, "joining-or-splitting-datasets"]], "Kinetic": [[384, "kinetic"]], "Labels": [[402, "Labels"]], "Least square with non-negativity constraint (NNLS)": [[389, "Least-square-with-non-negativity-constraint-(NNLS)"]], "Line breaks": [[401, "Line-breaks"]], "Line broadening": [[409, "Line-broadening"]], "Linear regression": [[384, "linear-regression"]], "Linear trend": [[388, "Linear-trend"]], "Lineshape models": [[384, "lineshape-models"]], "List of UFuncs working on NDDataset:": [[411, "List-of-UFuncs-working-on-NDDataset:"]], "Load and install SpectroChemPy with pip": [[86, "load-and-install-spectrochempy-with-pip"]], "Load data files": [[86, "load-data-files"]], "Load the API": [[405, "Load-the-API"]], "Load, prepare and plot the dataset": [[19, "Load,-prepare-and-plot-the-dataset"]], "Loading": [[404, "Loading"]], "Loading Bruker OPUS files": [[48, null]], "Loading RAMAN experimental file": [[50, null]], "Loading a NDDataset": [[22, "Loading-a-NDDataset"]], "Loading an IR (omnic SPG) experimental file": [[47, null]], "Loading an experimental dataset": [[392, "Loading-an-experimental-dataset"]], "Loading of experimental 1D NMR data": [[49, null]], "Loading of the dataset": [[391, "Loading-of-the-dataset"], [394, "Loading-of-the-dataset"]], "Loading the API": [[384, "loading-the-api"], [400, "Loading-the-API"]], "Loading the data": [[405, "Loading-the-data"]], "Loading the example dataset": [[21, "Loading-the-example-dataset"]], "Logging": [[384, "logging"]], "Logic functions": [[384, "logic-functions"]], "Loglevel": [[395, "Loglevel"]], "MCR ALS": [[390, null]], "MCR-ALS example (adapted from Jaumot et al. 2005)": [[21, null]], "MCR-ALS with kinetic constraints": [[22, null]], "Magnitude calculation": [[409, "Magnitude-calculation"]], "Make the pull request (PR)": [[6, "make-the-pull-request-pr"]], "Markdown Cheat Sheet": [[401, null]], "Markdown cheat sheet": [[399, "Markdown-cheat-sheet"]], "Masking data": [[416, "Masking-data"]], "Masks": [[384, "masks"]], "Mathematical operations": [[384, "mathematical-operations"], [411, null]], "Mathematical symbols": [[401, "Mathematical-symbols"]], "Maths on datasets": [[91, "Maths-on-datasets"]], "Median filter": [[408, "Median-filter"]], "Methods for alignments": [[406, "Methods-for-alignments"]], "Methods to create NDDataset": [[402, "Methods-to-create-NDDataset"]], "Minimum and maximum": [[384, "minimum-and-maximum"]], "Misc": [[384, "misc"]], "Miscellaneous": [[384, "miscellaneous"]], "Monospace font": [[401, "Monospace-font"]], "More information about the MCRALS estimator": [[390, "More-information-about-the-MCRALS-estimator"]], "More insight on coordinates": [[402, "More-insight-on-coordinates"]], "More on peak properties": [[392, "More-on-peak-properties"]], "Moving average": [[414, "Moving-average"]], "Multivariate Curve Resolution - Alternating Least Squares": [[384, "multivariate-curve-resolution-alternating-least-squares"]], "Multivariate approach": [[388, "Multivariate-approach"]], "NDDataset": [[403, "nddataset"]], "NDDataset baseline correction": [[36, null]], "NDDataset coordinates example": [[42, null]], "NDDataset creation and plotting example": [[41, null]], "NDDataset modelling using non-linear optimisation method": [[389, "NDDataset-modelling-using-non-linear-optimisation-method"]], "NDDataset, the main object": [[91, "NDDataset,-the-main-object"]], "NMF analysis example": [[23, null]], "New features": [[417, "new-features"], [419, "new-features"], [421, "new-features"], [422, "new-features"], [426, "new-features"], [427, "new-features"], [428, "new-features"], [429, "new-features"], [430, "new-features"], [431, "new-features"], [434, "new-features"], [435, "new-features"], [436, "new-features"], [437, "new-features"], [438, "new-features"], [440, "new-features"], [441, "new-features"], [442, "new-features"], [443, "new-features"], [444, "new-features"], [445, "new-features"], [446, "new-features"], [447, "new-features"], [448, "new-features"], [449, "new-features"], [450, "new-features"], [452, "new-features"], [453, "new-features"], [454, "new-features"], [455, "new-features"], [456, "new-features"], [458, "new-features"], [460, "new-features"], [461, "new-features"], [462, "new-features"], [463, "new-features"], [465, "new-features"], [466, "new-features"], [467, "new-features"]], "Non-Negative Matrix Factorization": [[384, "non-negative-matrix-factorization"]], "Non-linear optimization and curve fit": [[384, "non-linear-optimization-and-curve-fit"]], "Numbered lists": [[401, "Numbered-lists"]], "Offset correction": [[384, "offset-correction"]], "One-dimensional (1D) Fourier transformation": [[409, null]], "Open Source Software on an Open-Source Platform": [[92, "open-source-software-on-an-open-source-platform"]], "Optional dependencies": [[7, "optional-dependencies"]], "Optional: installing a GUI git client": [[6, "optional-installing-a-gui-git-client"]], "Options of find_peaks()": [[392, "Options-of-find_peaks()"]], "Other Licenses": [[2, "other-licenses"]], "Other apodization functions": [[407, "Other-apodization-functions"]], "Overview": [[91, null]], "Overview of the main configuration parameters": [[405, "Overview-of-the-main-configuration-parameters"]], "Overview of the other model": [[388, "Overview-of-the-other-model"]], "PCA analysis example": [[25, null]], "PCA example (iris dataset)": [[24, null]], "PLS regression example": [[29, null]], "Papers citing SpectroChemPy": [[385, null]], "Parameter types": [[9, "parameter-types"]], "Partial Least Square regression": [[384, "partial-least-square-regression"]], "Partial Least Squares Regression (PLSRegression)": [[394, null]], "Peak Maxima Finding": [[392, null]], "Peak finding": [[389, "Peak-finding"]], "Peak fitting": [[76, "Peak-fitting"]], "Peak integration": [[393, null]], "Peak picking": [[76, "Peak-picking"]], "Phasing": [[384, "phasing"]], "Plot of the Real and Imaginary original data": [[407, "Plot-of-the-Real-and-Imaginary-original-data"]], "Plot results": [[23, "Plot-results"]], "Plots in examples": [[9, "plots-in-examples"]], "Plotting": [[384, "plotting"], [405, null]], "Plotting 1D datasets": [[405, "Plotting-1D-datasets"]], "Plotting a dataset": [[91, "Plotting-a-dataset"]], "Plotting datasets": [[53, null], [60, "plotting-datasets"], [83, "plotting-datasets"]], "Plotting several dataset on the same figure": [[405, "Plotting-several-dataset-on-the-same-figure"]], "Plotting the results": [[21, "Plotting-the-results"]], "Polynomial": [[388, "Polynomial"]], "Polynomial trend": [[388, "Polynomial-trend"]], "Power spectrum": [[409, "Power-spectrum"]], "Powered by Python": [[92, "powered-by-python"]], "Pre-commit": [[7, "pre-commit"]], "Prepare the dataset to NMF factorize": [[23, "Prepare-the-dataset-to-NMF-factorize"]], "Preparing the data": [[405, "Preparing-the-data"]], "Preprocessing": [[409, "Preprocessing"]], "Prerequisites": [[84, "prerequisites"]], "Principal Component Analysis": [[391, null]], "Processing": [[384, "processing"], [412, null]], "Processing NDDataset": [[73, null], [83, "processing-nddataset"]], "Processing NMR datasets": [[73, "processing-nmr-datasets"], [74, null], [83, "processing-nmr-datasets"]], "Processing RAMAN spectra": [[80, null]], "Processing Raman datasets": [[73, "processing-raman-datasets"], [79, null], [83, "processing-raman-datasets"]], "Processing Relaxation measurement": [[77, null]], "Processing a dataset": [[91, "Processing-a-dataset"]], "Processing, analyzing and modeling spectroscopic data": [[93, null]], "Project": [[403, "project"]], "Project Management": [[57, null], [60, "project-management"], [83, "project-management"]], "Project creation": [[58, null], [404, "Project-creation"]], "Project management": [[384, "project-management"], [404, null]], "Prominence": [[392, "Prominence"]], "Public API reference": [[384, null]], "Push your changes": [[6, "push-your-changes"]], "Python (PEP8 / black)": [[7, "python-pep8-black"]], "QT": [[85, "qt"]], "Reading Renishaw WiRE files": [[51, null]], "Reading datasets": [[46, null]], "Real Fourier transform": [[409, "Real-Fourier-transform"]], "Reconstruct the dataset": [[19, "Reconstruct-the-dataset"]], "Reference": [[93, "reference"]], "Release notes": [[418, null]], "Remove an element from a project": [[404, "Remove-an-element-from-a-project"]], "Removing cosmic ray spikes from a Raman spectrum": [[68, null]], "Removing cosmic rays spike from Raman spectra": [[408, "Removing-cosmic-rays-spike-from-Raman-spectra"]], "Reporting Issues": [[14, null]], "Requirements": [[10, "requirements"]], "Review Your Code": [[6, "review-your-code"]], "Revisions 0.1.0 to 0.1.19": [[420, null]], "Rolling": [[384, "rolling"]], "Rubberband": [[388, "Rubberband"]], "Running PLSRegression": [[394, "Running-PLSRegression"]], "Running a PCA": [[391, "Running-a-PCA"]], "Running the test suite": [[7, "running-the-test-suite"]], "SIMPLISMA example": [[26, null]], "SIMPLe to use Interactive Self-modeling Mixture Analysis": [[384, "simple-to-use-interactive-self-modeling-mixture-analysis"]], "Saving": [[404, "Saving"]], "Saving and loading projects": [[404, "Saving-and-loading-projects"]], "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum": [[71, null]], "Savitzky-Golay filter": [[414, "Savitzky-Golay-filter"]], "Savitzky-Golay filter:savgol": [[414, "Savitzky-Golay-filter:savgol"]], "Script": [[403, "script"]], "Scripting": [[384, "scripting"]], "Section 1: short summary": [[9, "section-1-short-summary"]], "Section 2: extended summary": [[9, "section-2-extended-summary"]], "Section 3: parameters": [[9, "section-3-parameters"]], "Section 4: returns or yields": [[9, "section-4-returns-or-yields"]], "Section 5: see also": [[9, "section-5-see-also"]], "Section 6: notes": [[9, "section-6-notes"]], "Section 7: examples": [[9, "section-7-examples"]], "See also": [[3, null]], "Select data in a NDDataset": [[384, "select-data-in-a-nddataset"]], "Selecting the output window": [[405, "Selecting-the-output-window"]], "Setting coordinates using set_coordset": [[402, "Setting-coordinates-using-set_coordset"]], "Setting new coordinates": [[20, "Setting-new-coordinates"], [42, "Setting-new-coordinates"]], "Sharing coordinates between dimensions": [[402, "Sharing-coordinates-between-dimensions"]], "Shifted Gaussian-Lorentzian apodization": [[407, "Shifted-Gaussian-Lorentzian-apodization"]], "Shifted apodization": [[407, "Shifted-apodization"]], "Sine bell and squared Sine bell window multiplication": [[64, null]], "Singular value decomposition and Principal component analysis": [[384, "singular-value-decomposition-and-principal-component-analysis"]], "Slicing NDDatasets": [[413, null]], "Slicing a dataset": [[91, "Slicing-a-dataset"]], "Slicing of NDDatasets": [[413, "Slicing-of-NDDatasets"]], "Slicing with coordinates": [[413, "Slicing-with-coordinates"]], "Slicing with indexes": [[413, "Slicing-with-indexes"]], "Smoothing": [[91, "Smoothing"]], "Smoothing, filtering, denoising": [[384, "smoothing-filtering-denoising"]], "Solutions": [[390, "Solutions"]], "Solve a linear equation using LSTSQ": [[33, null]], "Solving a linear equation using the least square method (LSTSQ)": [[389, "Solving-a-linear-equation-using-the-least-square-method-(LSTSQ)"]], "Sorting": [[384, "sorting"]], "Source control": [[15, "source-control"]], "SpectroChemPy Docstring Guide": [[9, null]], "SpectroChemPy code style guide": [[4, null]], "SpectroChempy License": [[2, null]], "Start editing": [[15, "start-editing"]], "Starting Jupyter lab": [[399, null]], "Statistical operations": [[384, "statistical-operations"]], "Summary of the coordinate setting syntax": [[402, "Summary-of-the-coordinate-setting-syntax"]], "Sums, integal, difference": [[384, "sums-integal-difference"]], "Supported file formats": [[397, "Supported-file-formats"]], "Syntax 1": [[402, "Syntax-1"]], "Syntax 2": [[402, "Syntax-2"]], "Syntax for parameters definition": [[389, "Syntax-for-parameters-definition"]], "Table of Contents": [[83, "table-of-contents"], [96, "table-of-contents"], [384, "table-of-contents"]], "Table of Contents:": [[5, "table-of-contents"], [7, "table-of-contents"]], "Table of contents:": [[4, "table-of-contents"], [6, "table-of-contents"]], "Test-driven development/code writing": [[7, "test-driven-development-code-writing"]], "Testing": [[4, "testing"]], "Testing with continuous integration": [[7, "testing-with-continuous-integration"]], "The (minimal) dataset": [[390, "The-(minimal)-dataset"]], "The Baseline processor": [[388, "The-Baseline-processor"]], "The Filter processor": [[414, "The-Filter-processor"]], "The NDDataset Object": [[384, "the-nddataset-object"]], "The NDDataset object": [[402, null]], "The order of spectra": [[397, "The-order-of-spectra"]], "The smooth method": [[414, "The-smooth-method"]], "Third-party Licences": [[1, "third-party-licences"]], "Time domain baseline correction": [[409, "Time-domain-baseline-correction"]], "Time domain baseline correction (NMR)": [[415, null]], "Time-domain processing": [[384, "time-domain-processing"]], "Tips for a successful pull request": [[6, "tips-for-a-successful-pull-request"]], "Tips for getting your examples pass the doctests": [[9, "tips-for-getting-your-examples-pass-the-doctests"]], "To get help about the different configuration parameters": [[390, "To-get-help-about-the-different-configuration-parameters"]], "Todo": [[403, "id1"]], "Transpose-like operations": [[384, "transpose-like-operations"]], "Transposition": [[416, "Transposition"]], "Trigonometric functions. Require dimensionless/unitless dataset or radians.": [[411, "Trigonometric-functions.-Require-dimensionless/unitless-dataset-or-radians."]], "Trigonometric functions. Require unitless data or radian units.": [[411, "Trigonometric-functions.-Require-unitless-data-or-radian-units."]], "Ufuncs (Universal Numpy\u2019s functions)": [[411, "Ufuncs-(Universal-Numpy's-functions)"]], "Unary functions": [[411, "Unary-functions"]], "Unit conversions": [[411, "Unit-conversions"]], "Units": [[402, "Units"]], "Units for dataset": [[43, "Units-for-dataset"]], "Units manipulation": [[384, "units-manipulation"]], "Units manipulation examples": [[43, null]], "Update your pull request": [[6, "update-your-pull-request"]], "Updating SpectroChemPy": [[89, "updating-spectrochempy"]], "Updating a spectrochempy docstring": [[10, "updating-a-spectrochempy-docstring"]], "Uploading a dataset": [[42, "Uploading-a-dataset"]], "Uploading dataset": [[20, "Uploading-dataset"]], "Usage": [[411, "Usage"]], "Use of PCA to assess the number of pure species": [[390, "Use-of-PCA-to-assess-the-number-of-pure-species"]], "User\u2019s Guide & Tutorials": [[93, "user-s-guide-tutorials"]], "Using numpy-like constructors of NDDatasets": [[402, "Using-numpy-like-constructors-of-NDDatasets"]], "Using plot_multiple to plot several datasets on the same figure": [[54, null]], "Using pytest": [[7, "using-pytest"]], "Using pytest.mark.xfail": [[4, "using-pytest-mark-xfail"]], "Using the application in a web browser": [[399, "Using-the-application-in-a-web-browser"]], "Utilities": [[384, "utilities"], [384, "id1"]], "Version 0.1": [[418, "version-0-1"]], "Version 0.2": [[418, "version-0-2"]], "Version 0.3": [[418, "version-0-3"]], "Version 0.4": [[418, "version-0-4"]], "Version 0.5": [[418, "version-0-5"]], "Version 0.6": [[418, "version-0-6"]], "Version control, Git, and GitHub": [[6, "version-control-git-and-github"]], "Visual Studio Installation": [[15, "visual-studio-installation"]], "What is the slicing ?": [[413, "What-is-the-slicing-?"]], "What to do if questions arise": [[400, "What-to-do-if-questions-arise"]], "What\u2019s new in revision": [[417, null]], "What\u2019s new in revision 0.2.0": [[421, null]], "What\u2019s new in revision 0.2.10 [2021-02-14]": [[422, null]], "What\u2019s new in revision 0.2.11 [2021-02-17]": [[423, null]], "What\u2019s new in revision 0.2.12 [2021-02-23]": [[424, null]], "What\u2019s new in revision 0.2.13 [2021-02-23]": [[425, null]], "What\u2019s new in revision 0.2.14 [2021-02-25]": [[426, null]], "What\u2019s new in revision 0.2.15 [2021-03-29]": [[427, null]], "What\u2019s new in revision 0.2.16 [2021-11-11]": [[428, null]], "What\u2019s new in revision 0.2.17 [2021-11-29]": [[429, null]], "What\u2019s new in revision 0.2.18 [2022-01-05]": [[430, null]], "What\u2019s new in revision 0.2.21 [2022-01-09]": [[431, null]], "What\u2019s new in revision 0.2.22 [2022-01-10]": [[432, null]], "What\u2019s new in revision 0.2.23 [2022-01-16]": [[433, null]], "What\u2019s new in revision 0.2.4": [[434, null]], "What\u2019s new in revision 0.2.5": [[435, null]], "What\u2019s new in revision 0.2.6": [[436, null]], "What\u2019s new in revision 0.2.7": [[437, null]], "What\u2019s new in revision 0.2.8": [[438, null]], "What\u2019s new in revision 0.2.9 [2021-11-29]": [[439, null]], "What\u2019s new in revision 0.3.0 [2022-01-20]": [[440, null]], "What\u2019s new in revision 0.3.1 [2022-01-21]": [[441, null]], "What\u2019s new in revision 0.3.2 [2022-01-31]": [[442, null]], "What\u2019s new in revision 0.3.3 [2022-03-9]": [[443, null]], "What\u2019s new in revision 0.4.1 [2022-03-14]": [[444, null]], "What\u2019s new in revision 0.4.10 [2023-01-07]": [[445, null]], "What\u2019s new in revision 0.4.2 [2022-03-16]": [[446, null]], "What\u2019s new in revision 0.4.3 [2022-03-20]": [[447, null]], "What\u2019s new in revision 0.4.4 [2022-03-22]": [[448, null]], "What\u2019s new in revision 0.4.5 [2022-04-09]": [[449, null]], "What\u2019s new in revision 0.4.6 [2022-05-16]": [[450, null]], "What\u2019s new in revision 0.4.7 [2022-05-16]": [[451, null]], "What\u2019s new in revision 0.4.9 [2023-01-05]": [[452, null]], "What\u2019s new in revision 0.5.0 [2023-01-11]": [[453, null]], "What\u2019s new in revision 0.5.1": [[454, null]], "What\u2019s new in revision 0.5.2": [[455, null]], "What\u2019s new in revision 0.5.3": [[456, null]], "What\u2019s new in revision 0.5.4": [[457, null]], "What\u2019s new in revision 0.5.5": [[458, null]], "What\u2019s new in revision 0.6.1": [[459, null]], "What\u2019s new in revision 0.6.10": [[460, null]], "What\u2019s new in revision 0.6.11.dev": [[419, null]], "What\u2019s new in revision 0.6.2": [[461, null]], "What\u2019s new in revision 0.6.3": [[462, null]], "What\u2019s new in revision 0.6.4": [[463, null]], "What\u2019s new in revision 0.6.5": [[464, null]], "What\u2019s new in revision 0.6.6": [[465, null]], "What\u2019s new in revision 0.6.7": [[466, null]], "What\u2019s new in revision 0.6.8": [[467, null]], "What\u2019s new in revision 0.6.9": [[468, null]], "Where are the preference\u2019s files saved?": [[96, "where-are-the-preference-s-files-saved"]], "Where to go next?": [[400, "Where-to-go-next?"]], "Whittaker-Eilers filter": [[414, "Whittaker-Eilers-filter"]], "Whittaker-eilers filter : whittaker": [[414, "Whittaker-eilers-filter-:-whittaker"]], "Why NOT SpectroChemPy ?": [[92, "why-not-spectrochempy"]], "Why SpectroChemPy  ?": [[92, null]], "Width": [[392, "Width"]], "Window size influence": [[414, "Window-size-influence"]], "With regularization and a manual search": [[20, "With-regularization-and-a-manual-search"]], "Writing a docstring": [[9, "writing-a-docstring"]], "Writing and executing SpectroChemPy scripts": [[400, "Writing-and-executing-SpectroChemPy-scripts"]], "Writing tests": [[7, "writing-tests"]], "Zero-filling": [[384, "zero-filling"], [409, "Zero-filling"]], "a) import spg file": [[397, "a)-import-spg-file"]], "abs": [[411, "abs"]], "absolute (alias of abs)": [[411, "absolute-(alias-of-abs)"]], "add": [[411, "add"]], "arccos": [[411, "arccos"]], "arccosh": [[411, "arccosh"]], "arcsin": [[411, "arcsin"]], "arcsinh": [[411, "arcsinh"]], "arctan": [[411, "arctan"]], "arctanh": [[411, "arctanh"]], "b) Import of .spa files": [[397, "b)-Import-of-.spa-files"]], "basc": [[388, "basc"]], "cbrt": [[411, "cbrt"]], "ceil": [[411, "ceil"]], "cos": [[411, "cos"]], "cosh": [[411, "cosh"]], "deg2rad": [[411, "deg2rad"]], "despike method": [[408, "despike-method"]], "divide": [[411, "divide"]], "exp": [[411, "exp"]], "exp2": [[411, "exp2"]], "expm1": [[411, "expm1"]], "fabs (absolute for float arrays)": [[411, "fabs-(absolute-for-float-arrays)"]], "filtering": [[70, null], [73, "filtering"], [83, "filtering"]], "first method": [[406, "first-method"]], "floor": [[411, "floor"]], "floor_divide": [[411, "floor_divide"]], "inner method": [[406, "inner-method"]], "isfinite": [[411, "isfinite"]], "isinf": [[411, "isinf"]], "isnan": [[411, "isnan"]], "last method": [[406, "last-method"]], "log": [[411, "log"]], "log10": [[411, "log10"]], "log1p": [[411, "log1p"]], "log2": [[411, "log2"]], "multiply": [[411, "multiply"]], "nD-Dataset (multidimensional dataset)": [[402, "nD-Dataset-(multidimensional-dataset)"]], "nd-Dataset": [[41, "nd-Dataset"]], "negative": [[411, "negative"]], "rad2deg": [[411, "rad2deg"]], "reciprocal": [[411, "reciprocal"]], "rint": [[411, "rint"]], "sign": [[411, "sign"]], "signbit": [[411, "signbit"]], "sin": [[411, "sin"]], "sinh": [[411, "sinh"]], "spectrochempy.ActionMassKinetics": [[97, null]], "spectrochempy.Baseline": [[98, null]], "spectrochempy.BaselineCorrection": [[99, null]], "spectrochempy.BaselineCorrector": [[100, null]], "spectrochempy.Coord": [[101, null]], "spectrochempy.CoordSet": [[102, null]], "spectrochempy.DimensionalityError": [[103, null]], "spectrochempy.EFA": [[104, null]], "spectrochempy.FastICA": [[105, null]], "spectrochempy.FileSelector": [[106, null]], "spectrochempy.Filter": [[107, null]], "spectrochempy.II": [[108, null]], "spectrochempy.IR": [[109, null]], "spectrochempy.IRIS": [[110, null]], "spectrochempy.IrisKernel": [[111, null]], "spectrochempy.LSTSQ": [[112, null]], "spectrochempy.MCRALS": [[113, null]], "spectrochempy.NDDataset": [[114, null]], "spectrochempy.NDDataset.save": [[115, null]], "spectrochempy.NDDataset.save_as": [[116, null]], "spectrochempy.NMF": [[117, null]], "spectrochempy.NNLS": [[118, null]], "spectrochempy.Optimize": [[119, null]], "spectrochempy.PCA": [[120, null]], "spectrochempy.PFR": [[121, null]], "spectrochempy.PLSRegression": [[122, null]], "spectrochempy.Project": [[123, null]], "spectrochempy.Quantity": [[124, null]], "spectrochempy.RI": [[125, null]], "spectrochempy.RR": [[126, null]], "spectrochempy.SIMPLISMA": [[127, null]], "spectrochempy.SVD": [[128, null]], "spectrochempy.Script": [[129, null]], "spectrochempy.Unit": [[130, null]], "spectrochempy.ab": [[131, null]], "spectrochempy.abc": [[132, null]], "spectrochempy.abs": [[133, null]], "spectrochempy.absolute": [[134, null]], "spectrochempy.align": [[135, null]], "spectrochempy.all": [[136, null]], "spectrochempy.amax": [[137, null]], "spectrochempy.amin": [[138, null]], "spectrochempy.any": [[139, null]], "spectrochempy.arange": [[140, null]], "spectrochempy.argmax": [[141, null]], "spectrochempy.argmin": [[142, null]], "spectrochempy.around": [[143, null]], "spectrochempy.asls": [[144, null]], "spectrochempy.asymmetricvoigtmodel": [[145, null]], "spectrochempy.autosub": [[146, null]], "spectrochempy.average": [[147, null]], "spectrochempy.bartlett": [[148, null]], "spectrochempy.basc": [[149, null]], "spectrochempy.blackmanharris": [[150, null]], "spectrochempy.clip": [[151, null]], "spectrochempy.component": [[152, null]], "spectrochempy.concatenate": [[153, null]], "spectrochempy.conj": [[154, null]], "spectrochempy.conjugate": [[155, null]], "spectrochempy.coordmax": [[156, null]], "spectrochempy.coordmin": [[157, null]], "spectrochempy.copy": [[158, null]], "spectrochempy.cs": [[159, null]], "spectrochempy.cumsum": [[160, null]], "spectrochempy.dc": [[161, null]], "spectrochempy.debug_": [[162, null]], "spectrochempy.denoise": [[163, null]], "spectrochempy.despike": [[164, null]], "spectrochempy.detrend": [[165, null]], "spectrochempy.diag": [[166, null]], "spectrochempy.diagonal": [[167, null]], "spectrochempy.dot": [[168, null]], "spectrochempy.download_nist_ir": [[169, null]], "spectrochempy.em": [[170, null]], "spectrochempy.empty": [[171, null]], "spectrochempy.empty_like": [[172, null]], "spectrochempy.error_": [[173, null]], "spectrochempy.eye": [[174, null]], "spectrochempy.fft": [[175, null]], "spectrochempy.find_peaks": [[176, null]], "spectrochempy.fromfunction": [[177, null]], "spectrochempy.fromiter": [[178, null]], "spectrochempy.fsh": [[179, null]], "spectrochempy.fsh2": [[180, null]], "spectrochempy.full": [[181, null]], "spectrochempy.full_like": [[182, null]], "spectrochempy.gaussianmodel": [[183, null]], "spectrochempy.general_hamming": [[184, null]], "spectrochempy.geomspace": [[185, null]], "spectrochempy.get_baseline": [[186, null]], "spectrochempy.get_loglevel": [[187, null]], "spectrochempy.gm": [[188, null]], "spectrochempy.hamming": [[189, null]], "spectrochempy.hann": [[190, null]], "spectrochempy.ht": [[191, null]], "spectrochempy.identity": [[192, null]], "spectrochempy.ifft": [[193, null]], "spectrochempy.imag": [[194, null]], "spectrochempy.info_": [[195, null]], "spectrochempy.interpolate": [[196, null]], "spectrochempy.ipython.magics.SpectroChemPyMagics": [[197, null]], "spectrochempy.is_units_compatible": [[198, null]], "spectrochempy.ito": [[199, null]], "spectrochempy.ito_base_units": [[200, null]], "spectrochempy.ito_reduced_units": [[201, null]], "spectrochempy.linspace": [[202, null]], "spectrochempy.lls": [[203, null]], "spectrochempy.lls_inv": [[204, null]], "spectrochempy.load": [[205, null]], "spectrochempy.load_iris": [[206, null]], "spectrochempy.logspace": [[207, null]], "spectrochempy.lorentzianmodel": [[208, null]], "spectrochempy.ls": [[209, null]], "spectrochempy.max": [[210, null]], "spectrochempy.mc": [[211, null]], "spectrochempy.mean": [[212, null]], "spectrochempy.min": [[213, null]], "spectrochempy.multiplot": [[214, null]], "spectrochempy.multiplot_image": [[215, null]], "spectrochempy.multiplot_lines": [[216, null]], "spectrochempy.multiplot_map": [[217, null]], "spectrochempy.multiplot_scatter": [[218, null]], "spectrochempy.multiplot_stack": [[219, null]], "spectrochempy.multiplot_with_transposed": [[220, null]], "spectrochempy.ones": [[221, null]], "spectrochempy.ones_like": [[222, null]], "spectrochempy.pathclean": [[223, null]], "spectrochempy.pipe": [[224, null]], "spectrochempy.pk": [[225, null]], "spectrochempy.pk_exp": [[226, null]], "spectrochempy.plot": [[227, null]], "spectrochempy.plot_1D": [[228, null]], "spectrochempy.plot_2D": [[229, null]], "spectrochempy.plot_3D": [[230, null]], "spectrochempy.plot_bar": [[231, null]], "spectrochempy.plot_image": [[232, null]], "spectrochempy.plot_map": [[233, null]], "spectrochempy.plot_multiple": [[234, null]], "spectrochempy.plot_pen": [[235, null]], "spectrochempy.plot_scatter": [[236, null]], "spectrochempy.plot_scatter_pen": [[237, null]], "spectrochempy.plot_stack": [[238, null]], "spectrochempy.plot_surface": [[239, null]], "spectrochempy.plot_waterfall": [[240, null]], "spectrochempy.plot_with_transposed": [[241, null]], "spectrochempy.polynomialbaseline": [[242, null]], "spectrochempy.processing.alignement.align.align": [[243, null]], "spectrochempy.processing.baselineprocessing.baseline.Baseline": [[244, null]], "spectrochempy.processing.baselineprocessing.baseline.asls": [[245, null]], "spectrochempy.processing.baselineprocessing.baseline.basc": [[246, null]], "spectrochempy.processing.baselineprocessing.baseline.detrend": [[247, null]], "spectrochempy.processing.baselineprocessing.baseline.get_baseline": [[248, null]], "spectrochempy.processing.baselineprocessing.baseline.lls": [[249, null]], "spectrochempy.processing.baselineprocessing.baseline.lls_inv": [[250, null]], "spectrochempy.processing.baselineprocessing.baseline.rubberband": [[251, null]], "spectrochempy.processing.baselineprocessing.baseline.snip": [[252, null]], "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection": [[253, null]], "spectrochempy.processing.baselineprocessing.baseline_deprecated.ab": [[254, null]], "spectrochempy.processing.baselineprocessing.baseline_deprecated.abc": [[255, null]], "spectrochempy.processing.fft.apodization.bartlett": [[256, null]], "spectrochempy.processing.fft.apodization.blackmanharris": [[257, null]], "spectrochempy.processing.fft.apodization.em": [[258, null]], "spectrochempy.processing.fft.apodization.general_hamming": [[259, null]], "spectrochempy.processing.fft.apodization.gm": [[260, null]], "spectrochempy.processing.fft.apodization.hamming": [[261, null]], "spectrochempy.processing.fft.apodization.hann": [[262, null]], "spectrochempy.processing.fft.apodization.qsin": [[263, null]], "spectrochempy.processing.fft.apodization.sine": [[264, null]], "spectrochempy.processing.fft.apodization.sinm": [[265, null]], "spectrochempy.processing.fft.apodization.sp": [[266, null]], "spectrochempy.processing.fft.apodization.triang": [[267, null]], "spectrochempy.processing.fft.fft.fft": [[268, null]], "spectrochempy.processing.fft.fft.ht": [[269, null]], "spectrochempy.processing.fft.fft.ifft": [[270, null]], "spectrochempy.processing.fft.fft.mc": [[271, null]], "spectrochempy.processing.fft.fft.ps": [[272, null]], "spectrochempy.processing.fft.phasing.pk": [[273, null]], "spectrochempy.processing.fft.phasing.pk_exp": [[274, null]], "spectrochempy.processing.fft.shift.cs": [[275, null]], "spectrochempy.processing.fft.shift.dc": [[276, null]], "spectrochempy.processing.fft.shift.fsh": [[277, null]], "spectrochempy.processing.fft.shift.fsh2": [[278, null]], "spectrochempy.processing.fft.shift.ls": [[279, null]], "spectrochempy.processing.fft.shift.roll": [[280, null]], "spectrochempy.processing.fft.shift.rs": [[281, null]], "spectrochempy.processing.fft.zero_filling.zf": [[282, null]], "spectrochempy.processing.fft.zero_filling.zf_auto": [[283, null]], "spectrochempy.processing.fft.zero_filling.zf_double": [[284, null]], "spectrochempy.processing.fft.zero_filling.zf_size": [[285, null]], "spectrochempy.processing.filter.denoise.denoise": [[286, null]], "spectrochempy.processing.filter.denoise.despike": [[287, null]], "spectrochempy.processing.filter.filter.Filter": [[288, null]], "spectrochempy.processing.filter.filter.savgol": [[289, null]], "spectrochempy.processing.filter.filter.savgol_filter": [[290, null]], "spectrochempy.processing.filter.filter.smooth": [[291, null]], "spectrochempy.processing.filter.filter.whittaker": [[292, null]], "spectrochempy.processing.interpolation.interpolate.interpolate": [[293, null]], "spectrochempy.processing.transformation.autosub.autosub": [[294, null]], "spectrochempy.processing.transformation.concatenate.concatenate": [[295, null]], "spectrochempy.processing.transformation.concatenate.stack": [[296, null]], "spectrochempy.processing.transformation.npy.dot": [[297, null]], "spectrochempy.ps": [[298, null]], "spectrochempy.ptp": [[299, null]], "spectrochempy.qsin": [[300, null]], "spectrochempy.random": [[301, null]], "spectrochempy.read": [[302, null]], "spectrochempy.read_carroucell": [[303, null]], "spectrochempy.read_csv": [[304, null]], "spectrochempy.read_ddr": [[305, null]], "spectrochempy.read_dir": [[306, null]], "spectrochempy.read_hdr": [[307, null]], "spectrochempy.read_jcamp": [[308, null]], "spectrochempy.read_labspec": [[309, null]], "spectrochempy.read_mat": [[310, null]], "spectrochempy.read_matlab": [[311, null]], "spectrochempy.read_omnic": [[312, null]], "spectrochempy.read_opus": [[313, null]], "spectrochempy.read_quadera": [[314, null]], "spectrochempy.read_sdr": [[315, null]], "spectrochempy.read_soc": [[316, null]], "spectrochempy.read_spa": [[317, null]], "spectrochempy.read_spc": [[318, null]], "spectrochempy.read_spg": [[319, null]], "spectrochempy.read_srs": [[320, null]], "spectrochempy.read_topspin": [[321, null]], "spectrochempy.read_wdf": [[322, null]], "spectrochempy.read_wire": [[323, null]], "spectrochempy.read_zip": [[324, null]], "spectrochempy.real": [[325, null]], "spectrochempy.remove_masks": [[326, null]], "spectrochempy.roll": [[327, null]], "spectrochempy.round": [[328, null]], "spectrochempy.rs": [[329, null]], "spectrochempy.rubberband": [[330, null]], "spectrochempy.run_all_scripts": [[331, null]], "spectrochempy.run_script": [[332, null]], "spectrochempy.savgol": [[333, null]], "spectrochempy.savgol_filter": [[334, null]], "spectrochempy.set_complex": [[335, null]], "spectrochempy.set_hypercomplex": [[336, null]], "spectrochempy.set_loglevel": [[337, null]], "spectrochempy.set_nmr_context": [[338, null]], "spectrochempy.set_quaternion": [[339, null]], "spectrochempy.show": [[340, null]], "spectrochempy.show_versions": [[341, null]], "spectrochempy.sigmoidmodel": [[342, null]], "spectrochempy.simps": [[343, null]], "spectrochempy.simpson": [[344, null]], "spectrochempy.sine": [[345, null]], "spectrochempy.sinm": [[346, null]], "spectrochempy.smooth": [[347, null]], "spectrochempy.snip": [[348, null]], "spectrochempy.sort": [[349, null]], "spectrochempy.sp": [[350, null]], "spectrochempy.squeeze": [[351, null]], "spectrochempy.stack": [[352, null]], "spectrochempy.std": [[353, null]], "spectrochempy.sum": [[354, null]], "spectrochempy.swapdims": [[355, null]], "spectrochempy.take": [[356, null]], "spectrochempy.to": [[357, null]], "spectrochempy.to_array": [[358, null]], "spectrochempy.to_base_units": [[359, null]], "spectrochempy.to_reduced_units": [[360, null]], "spectrochempy.to_xarray": [[361, null]], "spectrochempy.transpose": [[362, null]], "spectrochempy.trapezoid": [[363, null]], "spectrochempy.trapz": [[364, null]], "spectrochempy.triang": [[365, null]], "spectrochempy.var": [[366, null]], "spectrochempy.voigtmodel": [[367, null]], "spectrochempy.warning_": [[368, null]], "spectrochempy.whittaker": [[369, null]], "spectrochempy.write": [[370, null]], "spectrochempy.write_csv": [[371, null]], "spectrochempy.write_excel": [[372, null]], "spectrochempy.write_jcamp": [[373, null]], "spectrochempy.write_mat": [[374, null]], "spectrochempy.write_matlab": [[375, null]], "spectrochempy.write_xls": [[376, null]], "spectrochempy.zeros": [[377, null]], "spectrochempy.zeros_like": [[378, null]], "spectrochempy.zf": [[379, null]], "spectrochempy.zf_auto": [[380, null]], "spectrochempy.zf_double": [[381, null]], "spectrochempy.zf_size": [[382, null]], "sqrt": [[411, "sqrt"]], "square": [[411, "square"]], "subtract": [[411, "subtract"]], "tan": [[411, "tan"]], "tanh": [[411, "tanh"]], "trunc": [[411, "trunc"]]}, "docnames": ["credits/citing", "credits/credits", "credits/license", "credits/seealso", "devguide/code_style", "devguide/codespec_adding_reader", "devguide/contributing", "devguide/contributing_codebase", "devguide/contributing_codespecifics", "devguide/contributing_docstring", "devguide/contributing_documentation", "devguide/docker", "devguide/examples", "devguide/index", "devguide/issues", "devguide/visualcode", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/index", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/plot_baseline_correction", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/index", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/e_project/index", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/index", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/raman/index", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times", "gettingstarted/examples/index", "gettingstarted/install/index", "gettingstarted/install/install_adds", "gettingstarted/install/install_colab", "gettingstarted/install/install_docker", "gettingstarted/install/install_mac", "gettingstarted/install/install_sources", "gettingstarted/install/install_win", "gettingstarted/overview", "gettingstarted/whyscpy", "index", "reference/api", "reference/bibliography", "reference/faq", "reference/generated/spectrochempy.ActionMassKinetics", "reference/generated/spectrochempy.Baseline", "reference/generated/spectrochempy.BaselineCorrection", "reference/generated/spectrochempy.BaselineCorrector", "reference/generated/spectrochempy.Coord", "reference/generated/spectrochempy.CoordSet", "reference/generated/spectrochempy.DimensionalityError", "reference/generated/spectrochempy.EFA", "reference/generated/spectrochempy.FastICA", "reference/generated/spectrochempy.FileSelector", "reference/generated/spectrochempy.Filter", "reference/generated/spectrochempy.II", "reference/generated/spectrochempy.IR", "reference/generated/spectrochempy.IRIS", "reference/generated/spectrochempy.IrisKernel", "reference/generated/spectrochempy.LSTSQ", "reference/generated/spectrochempy.MCRALS", "reference/generated/spectrochempy.NDDataset", "reference/generated/spectrochempy.NDDataset.save", "reference/generated/spectrochempy.NDDataset.save_as", "reference/generated/spectrochempy.NMF", "reference/generated/spectrochempy.NNLS", "reference/generated/spectrochempy.Optimize", "reference/generated/spectrochempy.PCA", "reference/generated/spectrochempy.PFR", "reference/generated/spectrochempy.PLSRegression", "reference/generated/spectrochempy.Project", "reference/generated/spectrochempy.Quantity", "reference/generated/spectrochempy.RI", "reference/generated/spectrochempy.RR", "reference/generated/spectrochempy.SIMPLISMA", "reference/generated/spectrochempy.SVD", "reference/generated/spectrochempy.Script", "reference/generated/spectrochempy.Unit", "reference/generated/spectrochempy.ab", "reference/generated/spectrochempy.abc", "reference/generated/spectrochempy.abs", "reference/generated/spectrochempy.absolute", "reference/generated/spectrochempy.align", "reference/generated/spectrochempy.all", "reference/generated/spectrochempy.amax", "reference/generated/spectrochempy.amin", "reference/generated/spectrochempy.any", "reference/generated/spectrochempy.arange", "reference/generated/spectrochempy.argmax", "reference/generated/spectrochempy.argmin", "reference/generated/spectrochempy.around", "reference/generated/spectrochempy.asls", "reference/generated/spectrochempy.asymmetricvoigtmodel", "reference/generated/spectrochempy.autosub", "reference/generated/spectrochempy.average", "reference/generated/spectrochempy.bartlett", "reference/generated/spectrochempy.basc", "reference/generated/spectrochempy.blackmanharris", "reference/generated/spectrochempy.clip", "reference/generated/spectrochempy.component", "reference/generated/spectrochempy.concatenate", "reference/generated/spectrochempy.conj", "reference/generated/spectrochempy.conjugate", "reference/generated/spectrochempy.coordmax", "reference/generated/spectrochempy.coordmin", "reference/generated/spectrochempy.copy", "reference/generated/spectrochempy.cs", "reference/generated/spectrochempy.cumsum", "reference/generated/spectrochempy.dc", "reference/generated/spectrochempy.debug_", "reference/generated/spectrochempy.denoise", "reference/generated/spectrochempy.despike", "reference/generated/spectrochempy.detrend", "reference/generated/spectrochempy.diag", "reference/generated/spectrochempy.diagonal", "reference/generated/spectrochempy.dot", "reference/generated/spectrochempy.download_nist_ir", "reference/generated/spectrochempy.em", "reference/generated/spectrochempy.empty", "reference/generated/spectrochempy.empty_like", "reference/generated/spectrochempy.error_", "reference/generated/spectrochempy.eye", "reference/generated/spectrochempy.fft", "reference/generated/spectrochempy.find_peaks", "reference/generated/spectrochempy.fromfunction", "reference/generated/spectrochempy.fromiter", "reference/generated/spectrochempy.fsh", "reference/generated/spectrochempy.fsh2", "reference/generated/spectrochempy.full", "reference/generated/spectrochempy.full_like", "reference/generated/spectrochempy.gaussianmodel", "reference/generated/spectrochempy.general_hamming", "reference/generated/spectrochempy.geomspace", "reference/generated/spectrochempy.get_baseline", "reference/generated/spectrochempy.get_loglevel", "reference/generated/spectrochempy.gm", "reference/generated/spectrochempy.hamming", "reference/generated/spectrochempy.hann", "reference/generated/spectrochempy.ht", "reference/generated/spectrochempy.identity", "reference/generated/spectrochempy.ifft", "reference/generated/spectrochempy.imag", "reference/generated/spectrochempy.info_", "reference/generated/spectrochempy.interpolate", "reference/generated/spectrochempy.ipython.magics.SpectroChemPyMagics", "reference/generated/spectrochempy.is_units_compatible", "reference/generated/spectrochempy.ito", "reference/generated/spectrochempy.ito_base_units", "reference/generated/spectrochempy.ito_reduced_units", "reference/generated/spectrochempy.linspace", "reference/generated/spectrochempy.lls", "reference/generated/spectrochempy.lls_inv", "reference/generated/spectrochempy.load", "reference/generated/spectrochempy.load_iris", "reference/generated/spectrochempy.logspace", "reference/generated/spectrochempy.lorentzianmodel", "reference/generated/spectrochempy.ls", "reference/generated/spectrochempy.max", "reference/generated/spectrochempy.mc", "reference/generated/spectrochempy.mean", "reference/generated/spectrochempy.min", "reference/generated/spectrochempy.multiplot", "reference/generated/spectrochempy.multiplot_image", "reference/generated/spectrochempy.multiplot_lines", "reference/generated/spectrochempy.multiplot_map", "reference/generated/spectrochempy.multiplot_scatter", "reference/generated/spectrochempy.multiplot_stack", "reference/generated/spectrochempy.multiplot_with_transposed", "reference/generated/spectrochempy.ones", "reference/generated/spectrochempy.ones_like", "reference/generated/spectrochempy.pathclean", "reference/generated/spectrochempy.pipe", "reference/generated/spectrochempy.pk", "reference/generated/spectrochempy.pk_exp", "reference/generated/spectrochempy.plot", "reference/generated/spectrochempy.plot_1D", "reference/generated/spectrochempy.plot_2D", "reference/generated/spectrochempy.plot_3D", "reference/generated/spectrochempy.plot_bar", "reference/generated/spectrochempy.plot_image", "reference/generated/spectrochempy.plot_map", "reference/generated/spectrochempy.plot_multiple", "reference/generated/spectrochempy.plot_pen", "reference/generated/spectrochempy.plot_scatter", "reference/generated/spectrochempy.plot_scatter_pen", "reference/generated/spectrochempy.plot_stack", "reference/generated/spectrochempy.plot_surface", "reference/generated/spectrochempy.plot_waterfall", "reference/generated/spectrochempy.plot_with_transposed", "reference/generated/spectrochempy.polynomialbaseline", "reference/generated/spectrochempy.processing.alignement.align.align", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.Baseline", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.asls", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.basc", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.detrend", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.get_baseline", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.lls", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.lls_inv", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.rubberband", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.snip", "reference/generated/spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection", "reference/generated/spectrochempy.processing.baselineprocessing.baseline_deprecated.ab", "reference/generated/spectrochempy.processing.baselineprocessing.baseline_deprecated.abc", "reference/generated/spectrochempy.processing.fft.apodization.bartlett", "reference/generated/spectrochempy.processing.fft.apodization.blackmanharris", "reference/generated/spectrochempy.processing.fft.apodization.em", "reference/generated/spectrochempy.processing.fft.apodization.general_hamming", "reference/generated/spectrochempy.processing.fft.apodization.gm", "reference/generated/spectrochempy.processing.fft.apodization.hamming", "reference/generated/spectrochempy.processing.fft.apodization.hann", "reference/generated/spectrochempy.processing.fft.apodization.qsin", "reference/generated/spectrochempy.processing.fft.apodization.sine", "reference/generated/spectrochempy.processing.fft.apodization.sinm", "reference/generated/spectrochempy.processing.fft.apodization.sp", "reference/generated/spectrochempy.processing.fft.apodization.triang", "reference/generated/spectrochempy.processing.fft.fft.fft", "reference/generated/spectrochempy.processing.fft.fft.ht", "reference/generated/spectrochempy.processing.fft.fft.ifft", "reference/generated/spectrochempy.processing.fft.fft.mc", "reference/generated/spectrochempy.processing.fft.fft.ps", "reference/generated/spectrochempy.processing.fft.phasing.pk", "reference/generated/spectrochempy.processing.fft.phasing.pk_exp", "reference/generated/spectrochempy.processing.fft.shift.cs", "reference/generated/spectrochempy.processing.fft.shift.dc", "reference/generated/spectrochempy.processing.fft.shift.fsh", "reference/generated/spectrochempy.processing.fft.shift.fsh2", "reference/generated/spectrochempy.processing.fft.shift.ls", "reference/generated/spectrochempy.processing.fft.shift.roll", "reference/generated/spectrochempy.processing.fft.shift.rs", "reference/generated/spectrochempy.processing.fft.zero_filling.zf", "reference/generated/spectrochempy.processing.fft.zero_filling.zf_auto", "reference/generated/spectrochempy.processing.fft.zero_filling.zf_double", "reference/generated/spectrochempy.processing.fft.zero_filling.zf_size", "reference/generated/spectrochempy.processing.filter.denoise.denoise", "reference/generated/spectrochempy.processing.filter.denoise.despike", "reference/generated/spectrochempy.processing.filter.filter.Filter", "reference/generated/spectrochempy.processing.filter.filter.savgol", "reference/generated/spectrochempy.processing.filter.filter.savgol_filter", "reference/generated/spectrochempy.processing.filter.filter.smooth", "reference/generated/spectrochempy.processing.filter.filter.whittaker", "reference/generated/spectrochempy.processing.interpolation.interpolate.interpolate", "reference/generated/spectrochempy.processing.transformation.autosub.autosub", "reference/generated/spectrochempy.processing.transformation.concatenate.concatenate", "reference/generated/spectrochempy.processing.transformation.concatenate.stack", "reference/generated/spectrochempy.processing.transformation.npy.dot", "reference/generated/spectrochempy.ps", "reference/generated/spectrochempy.ptp", "reference/generated/spectrochempy.qsin", "reference/generated/spectrochempy.random", "reference/generated/spectrochempy.read", "reference/generated/spectrochempy.read_carroucell", "reference/generated/spectrochempy.read_csv", "reference/generated/spectrochempy.read_ddr", "reference/generated/spectrochempy.read_dir", "reference/generated/spectrochempy.read_hdr", "reference/generated/spectrochempy.read_jcamp", "reference/generated/spectrochempy.read_labspec", "reference/generated/spectrochempy.read_mat", "reference/generated/spectrochempy.read_matlab", "reference/generated/spectrochempy.read_omnic", "reference/generated/spectrochempy.read_opus", "reference/generated/spectrochempy.read_quadera", "reference/generated/spectrochempy.read_sdr", "reference/generated/spectrochempy.read_soc", "reference/generated/spectrochempy.read_spa", "reference/generated/spectrochempy.read_spc", "reference/generated/spectrochempy.read_spg", "reference/generated/spectrochempy.read_srs", "reference/generated/spectrochempy.read_topspin", "reference/generated/spectrochempy.read_wdf", "reference/generated/spectrochempy.read_wire", "reference/generated/spectrochempy.read_zip", "reference/generated/spectrochempy.real", "reference/generated/spectrochempy.remove_masks", "reference/generated/spectrochempy.roll", "reference/generated/spectrochempy.round", "reference/generated/spectrochempy.rs", "reference/generated/spectrochempy.rubberband", "reference/generated/spectrochempy.run_all_scripts", "reference/generated/spectrochempy.run_script", "reference/generated/spectrochempy.savgol", "reference/generated/spectrochempy.savgol_filter", "reference/generated/spectrochempy.set_complex", "reference/generated/spectrochempy.set_hypercomplex", "reference/generated/spectrochempy.set_loglevel", "reference/generated/spectrochempy.set_nmr_context", "reference/generated/spectrochempy.set_quaternion", "reference/generated/spectrochempy.show", "reference/generated/spectrochempy.show_versions", "reference/generated/spectrochempy.sigmoidmodel", "reference/generated/spectrochempy.simps", "reference/generated/spectrochempy.simpson", "reference/generated/spectrochempy.sine", "reference/generated/spectrochempy.sinm", "reference/generated/spectrochempy.smooth", "reference/generated/spectrochempy.snip", "reference/generated/spectrochempy.sort", "reference/generated/spectrochempy.sp", "reference/generated/spectrochempy.squeeze", "reference/generated/spectrochempy.stack", "reference/generated/spectrochempy.std", "reference/generated/spectrochempy.sum", "reference/generated/spectrochempy.swapdims", "reference/generated/spectrochempy.take", "reference/generated/spectrochempy.to", "reference/generated/spectrochempy.to_array", "reference/generated/spectrochempy.to_base_units", "reference/generated/spectrochempy.to_reduced_units", "reference/generated/spectrochempy.to_xarray", "reference/generated/spectrochempy.transpose", "reference/generated/spectrochempy.trapezoid", "reference/generated/spectrochempy.trapz", "reference/generated/spectrochempy.triang", "reference/generated/spectrochempy.var", "reference/generated/spectrochempy.voigtmodel", "reference/generated/spectrochempy.warning_", "reference/generated/spectrochempy.whittaker", "reference/generated/spectrochempy.write", "reference/generated/spectrochempy.write_csv", "reference/generated/spectrochempy.write_excel", "reference/generated/spectrochempy.write_jcamp", "reference/generated/spectrochempy.write_mat", "reference/generated/spectrochempy.write_matlab", "reference/generated/spectrochempy.write_xls", "reference/generated/spectrochempy.zeros", "reference/generated/spectrochempy.zeros_like", "reference/generated/spectrochempy.zf", "reference/generated/spectrochempy.zf_auto", "reference/generated/spectrochempy.zf_double", "reference/generated/spectrochempy.zf_size", "reference/glossary", "reference/index", "reference/papers", "sg_execution_times", "userguide/analysis/analysis", "userguide/analysis/baseline", "userguide/analysis/fitting", "userguide/analysis/mcr_als", "userguide/analysis/pca", "userguide/analysis/peak_finding", "userguide/analysis/peak_integration", "userguide/analysis/pls", "userguide/api/api", "userguide/importexport/import", "userguide/importexport/importIR", "userguide/importexport/importexport", "userguide/introduction/interface", "userguide/introduction/introduction", "userguide/introduction/mdcheatsheet", "userguide/objects/dataset/dataset", "userguide/objects/index", "userguide/objects/project/project", "userguide/plotting/plotting", "userguide/processing/alignment", "userguide/processing/apodization", "userguide/processing/denoising", "userguide/processing/fourier", "userguide/processing/interferogram", "userguide/processing/math_operations", "userguide/processing/processing", "userguide/processing/slicing", "userguide/processing/smoothing", "userguide/processing/td_baseline", "userguide/processing/transformations", "whatsnew/changelog", "whatsnew/index", "whatsnew/latest", "whatsnew/v0.1.0", "whatsnew/v0.2.0", "whatsnew/v0.2.10", "whatsnew/v0.2.11", "whatsnew/v0.2.12", "whatsnew/v0.2.13", "whatsnew/v0.2.14", "whatsnew/v0.2.15", "whatsnew/v0.2.16", "whatsnew/v0.2.17", "whatsnew/v0.2.18", "whatsnew/v0.2.21", "whatsnew/v0.2.22", "whatsnew/v0.2.23", "whatsnew/v0.2.4", "whatsnew/v0.2.5", "whatsnew/v0.2.6", "whatsnew/v0.2.7", "whatsnew/v0.2.8", "whatsnew/v0.2.9", "whatsnew/v0.3.0", "whatsnew/v0.3.1", "whatsnew/v0.3.2", "whatsnew/v0.3.3", "whatsnew/v0.4.1", "whatsnew/v0.4.10", "whatsnew/v0.4.2", "whatsnew/v0.4.3", "whatsnew/v0.4.4", "whatsnew/v0.4.5", "whatsnew/v0.4.6", "whatsnew/v0.4.7", "whatsnew/v0.4.9", "whatsnew/v0.5.0", "whatsnew/v0.5.1", "whatsnew/v0.5.2", "whatsnew/v0.5.3", "whatsnew/v0.5.4", "whatsnew/v0.5.5", "whatsnew/v0.6.1", "whatsnew/v0.6.10", "whatsnew/v0.6.2", "whatsnew/v0.6.3", "whatsnew/v0.6.4", "whatsnew/v0.6.5", "whatsnew/v0.6.6", "whatsnew/v0.6.7", "whatsnew/v0.6.8", "whatsnew/v0.6.9"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["credits/citing.rst", "credits/credits.rst", "credits/license.rst", "credits/seealso.rst", "devguide/code_style.rst", "devguide/codespec_adding_reader.rst", "devguide/contributing.rst", "devguide/contributing_codebase.rst", "devguide/contributing_codespecifics.rst", "devguide/contributing_docstring.rst", "devguide/contributing_documentation.rst", "devguide/docker.rst", "devguide/examples.rst", "devguide/index.rst", "devguide/issues.rst", "devguide/visualcode.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/plot_baseline_correction.ipynb", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset.ipynb", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates.ipynb", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units.ipynb", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read.ipynb", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic.ipynb", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus.ipynb", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker.ipynb", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec.ipynb", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw.ipynb", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple.ipynb", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting.ipynb", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/index.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project.ipynb", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/index.rst", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman.ipynb", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times.rst", "gettingstarted/examples/index.rst", "gettingstarted/install/index.rst", "gettingstarted/install/install_adds.rst", "gettingstarted/install/install_colab.rst", "gettingstarted/install/install_docker.rst", "gettingstarted/install/install_mac.rst", "gettingstarted/install/install_sources.rst", "gettingstarted/install/install_win.rst", "gettingstarted/overview.ipynb", "gettingstarted/whyscpy.rst", "index.rst", "reference/api.rst", "reference/bibliography.rst", "reference/faq.rst", "reference/generated/spectrochempy.ActionMassKinetics.rst", "reference/generated/spectrochempy.Baseline.rst", "reference/generated/spectrochempy.BaselineCorrection.rst", "reference/generated/spectrochempy.BaselineCorrector.rst", "reference/generated/spectrochempy.Coord.rst", "reference/generated/spectrochempy.CoordSet.rst", "reference/generated/spectrochempy.DimensionalityError.rst", "reference/generated/spectrochempy.EFA.rst", "reference/generated/spectrochempy.FastICA.rst", "reference/generated/spectrochempy.FileSelector.rst", "reference/generated/spectrochempy.Filter.rst", "reference/generated/spectrochempy.II.rst", "reference/generated/spectrochempy.IR.rst", "reference/generated/spectrochempy.IRIS.rst", "reference/generated/spectrochempy.IrisKernel.rst", "reference/generated/spectrochempy.LSTSQ.rst", "reference/generated/spectrochempy.MCRALS.rst", "reference/generated/spectrochempy.NDDataset.rst", "reference/generated/spectrochempy.NDDataset.save.rst", "reference/generated/spectrochempy.NDDataset.save_as.rst", "reference/generated/spectrochempy.NMF.rst", "reference/generated/spectrochempy.NNLS.rst", "reference/generated/spectrochempy.Optimize.rst", "reference/generated/spectrochempy.PCA.rst", "reference/generated/spectrochempy.PFR.rst", "reference/generated/spectrochempy.PLSRegression.rst", "reference/generated/spectrochempy.Project.rst", "reference/generated/spectrochempy.Quantity.rst", "reference/generated/spectrochempy.RI.rst", "reference/generated/spectrochempy.RR.rst", "reference/generated/spectrochempy.SIMPLISMA.rst", "reference/generated/spectrochempy.SVD.rst", "reference/generated/spectrochempy.Script.rst", "reference/generated/spectrochempy.Unit.rst", "reference/generated/spectrochempy.ab.rst", "reference/generated/spectrochempy.abc.rst", "reference/generated/spectrochempy.abs.rst", "reference/generated/spectrochempy.absolute.rst", "reference/generated/spectrochempy.align.rst", "reference/generated/spectrochempy.all.rst", "reference/generated/spectrochempy.amax.rst", "reference/generated/spectrochempy.amin.rst", "reference/generated/spectrochempy.any.rst", "reference/generated/spectrochempy.arange.rst", "reference/generated/spectrochempy.argmax.rst", "reference/generated/spectrochempy.argmin.rst", "reference/generated/spectrochempy.around.rst", "reference/generated/spectrochempy.asls.rst", "reference/generated/spectrochempy.asymmetricvoigtmodel.rst", "reference/generated/spectrochempy.autosub.rst", "reference/generated/spectrochempy.average.rst", "reference/generated/spectrochempy.bartlett.rst", "reference/generated/spectrochempy.basc.rst", "reference/generated/spectrochempy.blackmanharris.rst", "reference/generated/spectrochempy.clip.rst", "reference/generated/spectrochempy.component.rst", "reference/generated/spectrochempy.concatenate.rst", "reference/generated/spectrochempy.conj.rst", "reference/generated/spectrochempy.conjugate.rst", "reference/generated/spectrochempy.coordmax.rst", "reference/generated/spectrochempy.coordmin.rst", "reference/generated/spectrochempy.copy.rst", "reference/generated/spectrochempy.cs.rst", "reference/generated/spectrochempy.cumsum.rst", "reference/generated/spectrochempy.dc.rst", "reference/generated/spectrochempy.debug_.rst", "reference/generated/spectrochempy.denoise.rst", "reference/generated/spectrochempy.despike.rst", "reference/generated/spectrochempy.detrend.rst", "reference/generated/spectrochempy.diag.rst", "reference/generated/spectrochempy.diagonal.rst", "reference/generated/spectrochempy.dot.rst", "reference/generated/spectrochempy.download_nist_ir.rst", "reference/generated/spectrochempy.em.rst", "reference/generated/spectrochempy.empty.rst", "reference/generated/spectrochempy.empty_like.rst", "reference/generated/spectrochempy.error_.rst", "reference/generated/spectrochempy.eye.rst", "reference/generated/spectrochempy.fft.rst", "reference/generated/spectrochempy.find_peaks.rst", "reference/generated/spectrochempy.fromfunction.rst", "reference/generated/spectrochempy.fromiter.rst", "reference/generated/spectrochempy.fsh.rst", "reference/generated/spectrochempy.fsh2.rst", "reference/generated/spectrochempy.full.rst", "reference/generated/spectrochempy.full_like.rst", "reference/generated/spectrochempy.gaussianmodel.rst", "reference/generated/spectrochempy.general_hamming.rst", "reference/generated/spectrochempy.geomspace.rst", "reference/generated/spectrochempy.get_baseline.rst", "reference/generated/spectrochempy.get_loglevel.rst", "reference/generated/spectrochempy.gm.rst", "reference/generated/spectrochempy.hamming.rst", "reference/generated/spectrochempy.hann.rst", "reference/generated/spectrochempy.ht.rst", "reference/generated/spectrochempy.identity.rst", "reference/generated/spectrochempy.ifft.rst", "reference/generated/spectrochempy.imag.rst", "reference/generated/spectrochempy.info_.rst", "reference/generated/spectrochempy.interpolate.rst", "reference/generated/spectrochempy.ipython.magics.SpectroChemPyMagics.rst", "reference/generated/spectrochempy.is_units_compatible.rst", "reference/generated/spectrochempy.ito.rst", "reference/generated/spectrochempy.ito_base_units.rst", "reference/generated/spectrochempy.ito_reduced_units.rst", "reference/generated/spectrochempy.linspace.rst", "reference/generated/spectrochempy.lls.rst", "reference/generated/spectrochempy.lls_inv.rst", "reference/generated/spectrochempy.load.rst", "reference/generated/spectrochempy.load_iris.rst", "reference/generated/spectrochempy.logspace.rst", "reference/generated/spectrochempy.lorentzianmodel.rst", "reference/generated/spectrochempy.ls.rst", "reference/generated/spectrochempy.max.rst", "reference/generated/spectrochempy.mc.rst", "reference/generated/spectrochempy.mean.rst", "reference/generated/spectrochempy.min.rst", "reference/generated/spectrochempy.multiplot.rst", "reference/generated/spectrochempy.multiplot_image.rst", "reference/generated/spectrochempy.multiplot_lines.rst", "reference/generated/spectrochempy.multiplot_map.rst", "reference/generated/spectrochempy.multiplot_scatter.rst", "reference/generated/spectrochempy.multiplot_stack.rst", "reference/generated/spectrochempy.multiplot_with_transposed.rst", "reference/generated/spectrochempy.ones.rst", "reference/generated/spectrochempy.ones_like.rst", "reference/generated/spectrochempy.pathclean.rst", "reference/generated/spectrochempy.pipe.rst", "reference/generated/spectrochempy.pk.rst", "reference/generated/spectrochempy.pk_exp.rst", "reference/generated/spectrochempy.plot.rst", "reference/generated/spectrochempy.plot_1D.rst", "reference/generated/spectrochempy.plot_2D.rst", "reference/generated/spectrochempy.plot_3D.rst", "reference/generated/spectrochempy.plot_bar.rst", "reference/generated/spectrochempy.plot_image.rst", "reference/generated/spectrochempy.plot_map.rst", "reference/generated/spectrochempy.plot_multiple.rst", "reference/generated/spectrochempy.plot_pen.rst", "reference/generated/spectrochempy.plot_scatter.rst", "reference/generated/spectrochempy.plot_scatter_pen.rst", "reference/generated/spectrochempy.plot_stack.rst", "reference/generated/spectrochempy.plot_surface.rst", "reference/generated/spectrochempy.plot_waterfall.rst", "reference/generated/spectrochempy.plot_with_transposed.rst", "reference/generated/spectrochempy.polynomialbaseline.rst", "reference/generated/spectrochempy.processing.alignement.align.align.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.Baseline.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.asls.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.basc.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.detrend.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.get_baseline.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.lls.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.lls_inv.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.rubberband.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline.snip.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline_deprecated.ab.rst", "reference/generated/spectrochempy.processing.baselineprocessing.baseline_deprecated.abc.rst", "reference/generated/spectrochempy.processing.fft.apodization.bartlett.rst", "reference/generated/spectrochempy.processing.fft.apodization.blackmanharris.rst", "reference/generated/spectrochempy.processing.fft.apodization.em.rst", "reference/generated/spectrochempy.processing.fft.apodization.general_hamming.rst", "reference/generated/spectrochempy.processing.fft.apodization.gm.rst", "reference/generated/spectrochempy.processing.fft.apodization.hamming.rst", "reference/generated/spectrochempy.processing.fft.apodization.hann.rst", "reference/generated/spectrochempy.processing.fft.apodization.qsin.rst", "reference/generated/spectrochempy.processing.fft.apodization.sine.rst", "reference/generated/spectrochempy.processing.fft.apodization.sinm.rst", "reference/generated/spectrochempy.processing.fft.apodization.sp.rst", "reference/generated/spectrochempy.processing.fft.apodization.triang.rst", "reference/generated/spectrochempy.processing.fft.fft.fft.rst", "reference/generated/spectrochempy.processing.fft.fft.ht.rst", "reference/generated/spectrochempy.processing.fft.fft.ifft.rst", "reference/generated/spectrochempy.processing.fft.fft.mc.rst", "reference/generated/spectrochempy.processing.fft.fft.ps.rst", "reference/generated/spectrochempy.processing.fft.phasing.pk.rst", "reference/generated/spectrochempy.processing.fft.phasing.pk_exp.rst", "reference/generated/spectrochempy.processing.fft.shift.cs.rst", "reference/generated/spectrochempy.processing.fft.shift.dc.rst", "reference/generated/spectrochempy.processing.fft.shift.fsh.rst", "reference/generated/spectrochempy.processing.fft.shift.fsh2.rst", "reference/generated/spectrochempy.processing.fft.shift.ls.rst", "reference/generated/spectrochempy.processing.fft.shift.roll.rst", "reference/generated/spectrochempy.processing.fft.shift.rs.rst", "reference/generated/spectrochempy.processing.fft.zero_filling.zf.rst", "reference/generated/spectrochempy.processing.fft.zero_filling.zf_auto.rst", "reference/generated/spectrochempy.processing.fft.zero_filling.zf_double.rst", "reference/generated/spectrochempy.processing.fft.zero_filling.zf_size.rst", "reference/generated/spectrochempy.processing.filter.denoise.denoise.rst", "reference/generated/spectrochempy.processing.filter.denoise.despike.rst", "reference/generated/spectrochempy.processing.filter.filter.Filter.rst", "reference/generated/spectrochempy.processing.filter.filter.savgol.rst", "reference/generated/spectrochempy.processing.filter.filter.savgol_filter.rst", "reference/generated/spectrochempy.processing.filter.filter.smooth.rst", "reference/generated/spectrochempy.processing.filter.filter.whittaker.rst", "reference/generated/spectrochempy.processing.interpolation.interpolate.interpolate.rst", "reference/generated/spectrochempy.processing.transformation.autosub.autosub.rst", "reference/generated/spectrochempy.processing.transformation.concatenate.concatenate.rst", "reference/generated/spectrochempy.processing.transformation.concatenate.stack.rst", "reference/generated/spectrochempy.processing.transformation.npy.dot.rst", "reference/generated/spectrochempy.ps.rst", "reference/generated/spectrochempy.ptp.rst", "reference/generated/spectrochempy.qsin.rst", "reference/generated/spectrochempy.random.rst", "reference/generated/spectrochempy.read.rst", "reference/generated/spectrochempy.read_carroucell.rst", "reference/generated/spectrochempy.read_csv.rst", "reference/generated/spectrochempy.read_ddr.rst", "reference/generated/spectrochempy.read_dir.rst", "reference/generated/spectrochempy.read_hdr.rst", "reference/generated/spectrochempy.read_jcamp.rst", "reference/generated/spectrochempy.read_labspec.rst", "reference/generated/spectrochempy.read_mat.rst", "reference/generated/spectrochempy.read_matlab.rst", "reference/generated/spectrochempy.read_omnic.rst", "reference/generated/spectrochempy.read_opus.rst", "reference/generated/spectrochempy.read_quadera.rst", "reference/generated/spectrochempy.read_sdr.rst", "reference/generated/spectrochempy.read_soc.rst", "reference/generated/spectrochempy.read_spa.rst", "reference/generated/spectrochempy.read_spc.rst", "reference/generated/spectrochempy.read_spg.rst", "reference/generated/spectrochempy.read_srs.rst", "reference/generated/spectrochempy.read_topspin.rst", "reference/generated/spectrochempy.read_wdf.rst", "reference/generated/spectrochempy.read_wire.rst", "reference/generated/spectrochempy.read_zip.rst", "reference/generated/spectrochempy.real.rst", "reference/generated/spectrochempy.remove_masks.rst", "reference/generated/spectrochempy.roll.rst", "reference/generated/spectrochempy.round.rst", "reference/generated/spectrochempy.rs.rst", "reference/generated/spectrochempy.rubberband.rst", "reference/generated/spectrochempy.run_all_scripts.rst", "reference/generated/spectrochempy.run_script.rst", "reference/generated/spectrochempy.savgol.rst", "reference/generated/spectrochempy.savgol_filter.rst", "reference/generated/spectrochempy.set_complex.rst", "reference/generated/spectrochempy.set_hypercomplex.rst", "reference/generated/spectrochempy.set_loglevel.rst", "reference/generated/spectrochempy.set_nmr_context.rst", "reference/generated/spectrochempy.set_quaternion.rst", "reference/generated/spectrochempy.show.rst", "reference/generated/spectrochempy.show_versions.rst", "reference/generated/spectrochempy.sigmoidmodel.rst", "reference/generated/spectrochempy.simps.rst", "reference/generated/spectrochempy.simpson.rst", "reference/generated/spectrochempy.sine.rst", "reference/generated/spectrochempy.sinm.rst", "reference/generated/spectrochempy.smooth.rst", "reference/generated/spectrochempy.snip.rst", "reference/generated/spectrochempy.sort.rst", "reference/generated/spectrochempy.sp.rst", "reference/generated/spectrochempy.squeeze.rst", "reference/generated/spectrochempy.stack.rst", "reference/generated/spectrochempy.std.rst", "reference/generated/spectrochempy.sum.rst", "reference/generated/spectrochempy.swapdims.rst", "reference/generated/spectrochempy.take.rst", "reference/generated/spectrochempy.to.rst", "reference/generated/spectrochempy.to_array.rst", "reference/generated/spectrochempy.to_base_units.rst", "reference/generated/spectrochempy.to_reduced_units.rst", "reference/generated/spectrochempy.to_xarray.rst", "reference/generated/spectrochempy.transpose.rst", "reference/generated/spectrochempy.trapezoid.rst", "reference/generated/spectrochempy.trapz.rst", "reference/generated/spectrochempy.triang.rst", "reference/generated/spectrochempy.var.rst", "reference/generated/spectrochempy.voigtmodel.rst", "reference/generated/spectrochempy.warning_.rst", "reference/generated/spectrochempy.whittaker.rst", "reference/generated/spectrochempy.write.rst", "reference/generated/spectrochempy.write_csv.rst", "reference/generated/spectrochempy.write_excel.rst", "reference/generated/spectrochempy.write_jcamp.rst", "reference/generated/spectrochempy.write_mat.rst", "reference/generated/spectrochempy.write_matlab.rst", "reference/generated/spectrochempy.write_xls.rst", "reference/generated/spectrochempy.zeros.rst", "reference/generated/spectrochempy.zeros_like.rst", "reference/generated/spectrochempy.zf.rst", "reference/generated/spectrochempy.zf_auto.rst", "reference/generated/spectrochempy.zf_double.rst", "reference/generated/spectrochempy.zf_size.rst", "reference/glossary.rst", "reference/index.rst", "reference/papers.rst", "sg_execution_times.rst", "userguide/analysis/analysis.rst", "userguide/analysis/baseline.ipynb", "userguide/analysis/fitting.ipynb", "userguide/analysis/mcr_als.ipynb", "userguide/analysis/pca.ipynb", "userguide/analysis/peak_finding.ipynb", "userguide/analysis/peak_integration.ipynb", "userguide/analysis/pls.ipynb", "userguide/api/api.ipynb", "userguide/importexport/import.ipynb", "userguide/importexport/importIR.ipynb", "userguide/importexport/importexport.rst", "userguide/introduction/interface.ipynb", "userguide/introduction/introduction.ipynb", "userguide/introduction/mdcheatsheet.ipynb", "userguide/objects/dataset/dataset.ipynb", "userguide/objects/index.rst", "userguide/objects/project/project.ipynb", "userguide/plotting/plotting.ipynb", "userguide/processing/alignment.ipynb", "userguide/processing/apodization.ipynb", "userguide/processing/denoising.ipynb", "userguide/processing/fourier.ipynb", "userguide/processing/interferogram.ipynb", "userguide/processing/math_operations.ipynb", "userguide/processing/processing.rst", "userguide/processing/slicing.ipynb", "userguide/processing/smoothing.ipynb", "userguide/processing/td_baseline.ipynb", "userguide/processing/transformations.ipynb", "whatsnew/changelog.rst", "whatsnew/index.rst", "whatsnew/latest.rst", "whatsnew/v0.1.0.rst", "whatsnew/v0.2.0.rst", "whatsnew/v0.2.10.rst", "whatsnew/v0.2.11.rst", "whatsnew/v0.2.12.rst", "whatsnew/v0.2.13.rst", "whatsnew/v0.2.14.rst", "whatsnew/v0.2.15.rst", "whatsnew/v0.2.16.rst", "whatsnew/v0.2.17.rst", "whatsnew/v0.2.18.rst", "whatsnew/v0.2.21.rst", "whatsnew/v0.2.22.rst", "whatsnew/v0.2.23.rst", "whatsnew/v0.2.4.rst", "whatsnew/v0.2.5.rst", "whatsnew/v0.2.6.rst", "whatsnew/v0.2.7.rst", "whatsnew/v0.2.8.rst", "whatsnew/v0.2.9.rst", "whatsnew/v0.3.0.rst", "whatsnew/v0.3.1.rst", "whatsnew/v0.3.2.rst", "whatsnew/v0.3.3.rst", "whatsnew/v0.4.1.rst", "whatsnew/v0.4.10.rst", "whatsnew/v0.4.2.rst", "whatsnew/v0.4.3.rst", "whatsnew/v0.4.4.rst", "whatsnew/v0.4.5.rst", "whatsnew/v0.4.6.rst", "whatsnew/v0.4.7.rst", "whatsnew/v0.4.9.rst", "whatsnew/v0.5.0.rst", "whatsnew/v0.5.1.rst", "whatsnew/v0.5.2.rst", "whatsnew/v0.5.3.rst", "whatsnew/v0.5.4.rst", "whatsnew/v0.5.5.rst", "whatsnew/v0.6.1.rst", "whatsnew/v0.6.10.rst", "whatsnew/v0.6.2.rst", "whatsnew/v0.6.3.rst", "whatsnew/v0.6.4.rst", "whatsnew/v0.6.5.rst", "whatsnew/v0.6.6.rst", "whatsnew/v0.6.7.rst", "whatsnew/v0.6.8.rst", "whatsnew/v0.6.9.rst"], "indexentries": {"a (actionmasskinetics attribute)": [[97, "spectrochempy.ActionMassKinetics.A", false]], "a (fastica attribute)": [[105, "spectrochempy.FastICA.A", false]], "ab() (in module spectrochempy)": [[131, "spectrochempy.ab", false]], "ab() (in module spectrochempy.processing.baselineprocessing.baseline_deprecated)": [[254, "spectrochempy.processing.baselineprocessing.baseline_deprecated.ab", false]], "abc() (in module spectrochempy)": [[132, "spectrochempy.abc", false]], "abc() (in module spectrochempy.processing.baselineprocessing.baseline_deprecated)": [[255, "spectrochempy.processing.baselineprocessing.baseline_deprecated.abc", false]], "abs() (in module spectrochempy)": [[133, "spectrochempy.abs", false]], "abs() (nddataset method)": [[114, "spectrochempy.NDDataset.abs", false]], "absolute() (in module spectrochempy)": [[134, "spectrochempy.absolute", false]], "absolute() (nddataset method)": [[114, "spectrochempy.NDDataset.absolute", false]], "acquisition_date (nddataset attribute)": [[114, "spectrochempy.NDDataset.acquisition_date", false]], "actionmasskinetics (class in spectrochempy)": [[97, "spectrochempy.ActionMassKinetics", false]], "add_coordset() (nddataset method)": [[114, "spectrochempy.NDDataset.add_coordset", false]], "add_dataset() (project method)": [[123, "spectrochempy.Project.add_dataset", false]], "add_datasets() (project method)": [[123, "spectrochempy.Project.add_datasets", false]], "add_project() (project method)": [[123, "spectrochempy.Project.add_project", false]], "add_projects() (project method)": [[123, "spectrochempy.Project.add_projects", false]], "add_script() (project method)": [[123, "spectrochempy.Project.add_script", false]], "add_scripts() (project method)": [[123, "spectrochempy.Project.add_scripts", false]], "addscript() (spectrochempymagics method)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.addscript", false]], "algorithm (fastica attribute)": [[105, "spectrochempy.FastICA.algorithm", false]], "align() (in module spectrochempy)": [[135, "spectrochempy.align", false]], "align() (in module spectrochempy.processing.alignement.align)": [[243, "spectrochempy.processing.alignement.align.align", false]], "align() (nddataset method)": [[114, "spectrochempy.NDDataset.align", false]], "all() (in module spectrochempy)": [[136, "spectrochempy.all", false]], "all() (nddataset method)": [[114, "spectrochempy.NDDataset.all", false]], "allitems (project attribute)": [[123, "spectrochempy.Project.allitems", false]], "allnames (project attribute)": [[123, "spectrochempy.Project.allnames", false]], "alpha_h (nmf attribute)": [[117, "spectrochempy.NMF.alpha_H", false]], "alpha_w (nmf attribute)": [[117, "spectrochempy.NMF.alpha_W", false]], "als": [[383, "term-ALS", true]], "amax() (coord method)": [[101, "spectrochempy.Coord.amax", false]], "amax() (in module spectrochempy)": [[137, "spectrochempy.amax", false]], "amax() (nddataset method)": [[114, "spectrochempy.NDDataset.amax", false]], "amin() (coord method)": [[101, "spectrochempy.Coord.amin", false]], "amin() (in module spectrochempy)": [[138, "spectrochempy.amin", false]], "amin() (nddataset method)": [[114, "spectrochempy.NDDataset.amin", false]], "amplitude_mode (optimize attribute)": [[119, "spectrochempy.Optimize.amplitude_mode", false]], "any() (in module spectrochempy)": [[139, "spectrochempy.any", false]], "any() (nddataset method)": [[114, "spectrochempy.NDDataset.any", false]], "api": [[383, "term-API", true]], "arange() (coord method)": [[101, "spectrochempy.Coord.arange", false]], "arange() (in module spectrochempy)": [[140, "spectrochempy.arange", false]], "arange() (nddataset method)": [[114, "spectrochempy.NDDataset.arange", false]], "arg_err() (spectrochempymagics method)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.arg_err", false]], "argmax() (in module spectrochempy)": [[141, "spectrochempy.argmax", false]], "argmax() (nddataset method)": [[114, "spectrochempy.NDDataset.argmax", false]], "argmin() (in module spectrochempy)": [[142, "spectrochempy.argmin", false]], "argmin() (nddataset method)": [[114, "spectrochempy.NDDataset.argmin", false]], "args (asymmetricvoigtmodel attribute)": [[145, "spectrochempy.asymmetricvoigtmodel.args", false]], "args (gaussianmodel attribute)": [[183, "spectrochempy.gaussianmodel.args", false]], "args (lorentzianmodel attribute)": [[208, "spectrochempy.lorentzianmodel.args", false]], "args (polynomialbaseline attribute)": [[242, "spectrochempy.polynomialbaseline.args", false]], "args (sigmoidmodel attribute)": [[342, "spectrochempy.sigmoidmodel.args", false]], "args (voigtmodel attribute)": [[367, "spectrochempy.voigtmodel.args", false]], "argsgetconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.argsGetConc", false]], "argsgetspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.argsGetSpec", false]], "around() (coord method)": [[101, "spectrochempy.Coord.around", false]], "around() (in module spectrochempy)": [[143, "spectrochempy.around", false]], "around() (nddataset method)": [[114, "spectrochempy.NDDataset.around", false]], "array-like": [[383, "term-array-like", true]], "asfortranarray() (nddataset method)": [[114, "spectrochempy.NDDataset.asfortranarray", false]], "asls": [[383, "term-AsLS", true]], "asls() (in module spectrochempy)": [[144, "spectrochempy.asls", false]], "asls() (in module spectrochempy.processing.baselineprocessing.baseline)": [[245, "spectrochempy.processing.baselineprocessing.baseline.asls", false]], "asls() (nddataset method)": [[114, "spectrochempy.NDDataset.asls", false]], "astype() (coord method)": [[101, "spectrochempy.Coord.astype", false]], "astype() (nddataset method)": [[114, "spectrochempy.NDDataset.astype", false]], "asymmetricvoigtmodel (class in spectrochempy)": [[145, "spectrochempy.asymmetricvoigtmodel", false]], "asymmetry (baseline attribute)": [[98, "spectrochempy.Baseline.asymmetry", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.asymmetry", false]], "asymmetry (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.asymmetry", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.asymmetry", false]], "atleast_2d() (nddataset method)": [[114, "spectrochempy.NDDataset.atleast_2d", false]], "author (nddataset attribute)": [[114, "spectrochempy.NDDataset.author", false]], "autoampl (optimize attribute)": [[119, "spectrochempy.Optimize.autoampl", false]], "autobase (optimize attribute)": [[119, "spectrochempy.Optimize.autobase", false]], "autosub() (in module spectrochempy)": [[146, "spectrochempy.autosub", false]], "autosub() (in module spectrochempy.processing.transformation.autosub)": [[294, "spectrochempy.processing.transformation.autosub.autosub", false]], "autosub() (nddataset method)": [[114, "spectrochempy.NDDataset.autosub", false]], "available_names (coordset attribute)": [[102, "spectrochempy.CoordSet.available_names", false]], "average() (in module spectrochempy)": [[147, "spectrochempy.average", false]], "average() (nddataset method)": [[114, "spectrochempy.NDDataset.average", false]], "ax (nddataset attribute)": [[114, "spectrochempy.NDDataset.ax", false]], "axec (nddataset attribute)": [[114, "spectrochempy.NDDataset.axec", false]], "axect (nddataset attribute)": [[114, "spectrochempy.NDDataset.axecT", false]], "axex (nddataset attribute)": [[114, "spectrochempy.NDDataset.axex", false]], "axey (nddataset attribute)": [[114, "spectrochempy.NDDataset.axey", false]], "axt (nddataset attribute)": [[114, "spectrochempy.NDDataset.axT", false]], "b (actionmasskinetics attribute)": [[97, "spectrochempy.ActionMassKinetics.B", false]], "b_ev (efa attribute)": [[104, "spectrochempy.EFA.b_ev", false]], "bartlett() (in module spectrochempy)": [[148, "spectrochempy.bartlett", false]], "bartlett() (in module spectrochempy.processing.fft.apodization)": [[256, "spectrochempy.processing.fft.apodization.bartlett", false]], "bartlett() (nddataset method)": [[114, "spectrochempy.NDDataset.bartlett", false]], "basc() (in module spectrochempy)": [[149, "spectrochempy.basc", false]], "basc() (in module spectrochempy.processing.baselineprocessing.baseline)": [[246, "spectrochempy.processing.baselineprocessing.baseline.basc", false]], "basc() (nddataset method)": [[114, "spectrochempy.NDDataset.basc", false]], "baseline (baseline attribute)": [[98, "spectrochempy.Baseline.baseline", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.baseline", false]], "baseline (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.baseline", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.baseline", false]], "baseline (baselinecorrector attribute)": [[100, "spectrochempy.BaselineCorrector.baseline", false]], "baseline (class in spectrochempy)": [[98, "spectrochempy.Baseline", false]], "baseline (class in spectrochempy.processing.baselineprocessing.baseline)": [[244, "spectrochempy.processing.baselineprocessing.baseline.Baseline", false]], "baselinecorrection (class in spectrochempy)": [[99, "spectrochempy.BaselineCorrection", false]], "baselinecorrection (class in spectrochempy.processing.baselineprocessing.baseline_deprecated)": [[253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection", false]], "baselinecorrector (class in spectrochempy)": [[100, "spectrochempy.BaselineCorrector", false]], "beta_loss (nmf attribute)": [[117, "spectrochempy.NMF.beta_loss", false]], "blackmanharris() (in module spectrochempy)": [[150, "spectrochempy.blackmanharris", false]], "blackmanharris() (in module spectrochempy.processing.fft.apodization)": [[257, "spectrochempy.processing.fft.apodization.blackmanharris", false]], "blackmanharris() (nddataset method)": [[114, "spectrochempy.NDDataset.blackmanharris", false]], "breakpoints (baseline attribute)": [[98, "spectrochempy.Baseline.breakpoints", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.breakpoints", false]], "breakpoints (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.breakpoints", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.breakpoints", false]], "c (mcrals attribute)": [[113, "spectrochempy.MCRALS.C", false]], "c (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.C", false]], "c_constrained (mcrals attribute)": [[113, "spectrochempy.MCRALS.C_constrained", false]], "c_constrained_list (mcrals attribute)": [[113, "spectrochempy.MCRALS.C_constrained_list", false]], "c_ls_list (mcrals attribute)": [[113, "spectrochempy.MCRALS.C_ls_list", false]], "callback_every (optimize attribute)": [[119, "spectrochempy.Optimize.callback_every", false]], "carroucell": [[383, "term-Carroucell", true]], "check() (quantity method)": [[124, "spectrochempy.Quantity.check", false]], "clip() (in module spectrochempy)": [[151, "spectrochempy.clip", false]], "clip() (nddataset method)": [[114, "spectrochempy.NDDataset.clip", false]], "close_figure() (nddataset method)": [[114, "spectrochempy.NDDataset.close_figure", false]], "closure": [[383, "term-closure", true]], "closureconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.closureConc", false]], "closuremethod (mcrals attribute)": [[113, "spectrochempy.MCRALS.closureMethod", false]], "closures": [[383, "term-closures", true]], "closuretarget (mcrals attribute)": [[113, "spectrochempy.MCRALS.closureTarget", false]], "coef (lstsq attribute)": [[112, "spectrochempy.LSTSQ.coef", false]], "coef (nnls attribute)": [[118, "spectrochempy.NNLS.coef", false]], "comment (nddataset attribute)": [[114, "spectrochempy.NDDataset.comment", false]], "component() (in module spectrochempy)": [[152, "spectrochempy.component", false]], "component() (nddataset method)": [[114, "spectrochempy.NDDataset.component", false]], "components (efa attribute)": [[104, "spectrochempy.EFA.components", false]], "components (fastica attribute)": [[105, "spectrochempy.FastICA.components", false]], "components (iris attribute)": [[110, "spectrochempy.IRIS.components", false]], "components (mcrals attribute)": [[113, "spectrochempy.MCRALS.components", false]], "components (nmf attribute)": [[117, "spectrochempy.NMF.components", false]], "components (optimize attribute)": [[119, "spectrochempy.Optimize.components", false]], "components (pca attribute)": [[120, "spectrochempy.PCA.components", false]], "components (plsregression attribute)": [[122, "spectrochempy.PLSRegression.components", false]], "components (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.components", false]], "components (svd attribute)": [[128, "spectrochempy.SVD.components", false]], "compute() (quantity method)": [[124, "spectrochempy.Quantity.compute", false]], "compute_uv (svd attribute)": [[128, "spectrochempy.SVD.compute_uv", false]], "concatenate() (in module spectrochempy)": [[153, "spectrochempy.concatenate", false]], "concatenate() (in module spectrochempy.processing.transformation.concatenate)": [[295, "spectrochempy.processing.transformation.concatenate.concatenate", false]], "concatenate() (nddataset method)": [[114, "spectrochempy.NDDataset.concatenate", false]], "config (baseline attribute)": [[98, "spectrochempy.Baseline.config", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.config", false]], "config (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.config", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.config", false]], "config (efa attribute)": [[104, "spectrochempy.EFA.config", false]], "config (fastica attribute)": [[105, "spectrochempy.FastICA.config", false]], "config (filter attribute)": [[107, "spectrochempy.Filter.config", false], [288, "spectrochempy.processing.filter.filter.Filter.config", false]], "config (iris attribute)": [[110, "spectrochempy.IRIS.config", false]], "config (lstsq attribute)": [[112, "spectrochempy.LSTSQ.config", false]], "config (mcrals attribute)": [[113, "spectrochempy.MCRALS.config", false]], "config (nmf attribute)": [[117, "spectrochempy.NMF.config", false]], "config (nnls attribute)": [[118, "spectrochempy.NNLS.config", false]], "config (optimize attribute)": [[119, "spectrochempy.Optimize.config", false]], "config (pca attribute)": [[120, "spectrochempy.PCA.config", false]], "config (plsregression attribute)": [[122, "spectrochempy.PLSRegression.config", false]], "config (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.config", false]], "config (spectrochempymagics attribute)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.config", false]], "config (svd attribute)": [[128, "spectrochempy.SVD.config", false]], "conj() (in module spectrochempy)": [[154, "spectrochempy.conj", false]], "conj() (nddataset method)": [[114, "spectrochempy.NDDataset.conj", false]], "conjugate() (in module spectrochempy)": [[155, "spectrochempy.conjugate", false]], "conjugate() (nddataset method)": [[114, "spectrochempy.NDDataset.conjugate", false]], "constraints (optimize attribute)": [[119, "spectrochempy.Optimize.constraints", false]], "coord (class in spectrochempy)": [[101, "spectrochempy.Coord", false]], "coord() (nddataset method)": [[114, "spectrochempy.NDDataset.coord", false]], "coordmax() (in module spectrochempy)": [[156, "spectrochempy.coordmax", false]], "coordmax() (nddataset method)": [[114, "spectrochempy.NDDataset.coordmax", false]], "coordmin() (in module spectrochempy)": [[157, "spectrochempy.coordmin", false]], "coordmin() (nddataset method)": [[114, "spectrochempy.NDDataset.coordmin", false]], "coordnames (nddataset attribute)": [[114, "spectrochempy.NDDataset.coordnames", false]], "coords (coordset attribute)": [[102, "spectrochempy.CoordSet.coords", false]], "coordset (class in spectrochempy)": [[102, "spectrochempy.CoordSet", false]], "coordset (nddataset attribute)": [[114, "spectrochempy.NDDataset.coordset", false]], "coordtitles (nddataset attribute)": [[114, "spectrochempy.NDDataset.coordtitles", false]], "coordunits (nddataset attribute)": [[114, "spectrochempy.NDDataset.coordunits", false]], "copy() (coord method)": [[101, "spectrochempy.Coord.copy", false]], "copy() (coordset method)": [[102, "spectrochempy.CoordSet.copy", false]], "copy() (in module spectrochempy)": [[158, "spectrochempy.copy", false]], "copy() (nddataset method)": [[114, "spectrochempy.NDDataset.copy", false]], "copy() (project method)": [[123, "spectrochempy.Project.copy", false]], "corrected (baseline attribute)": [[98, "spectrochempy.Baseline.corrected", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.corrected", false]], "corrected (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.corrected", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.corrected", false]], "corrected (baselinecorrector attribute)": [[100, "spectrochempy.BaselineCorrector.corrected", false]], "created (nddataset attribute)": [[114, "spectrochempy.NDDataset.created", false]], "cs() (in module spectrochempy)": [[159, "spectrochempy.cs", false]], "cs() (in module spectrochempy.processing.fft.shift)": [[275, "spectrochempy.processing.fft.shift.cs", false]], "cs() (nddataset method)": [[114, "spectrochempy.NDDataset.cs", false]], "cumsum() (in module spectrochempy)": [[160, "spectrochempy.cumsum", false]], "cumsum() (nddataset method)": [[114, "spectrochempy.NDDataset.cumsum", false]], "cumulative_explained_variance (svd attribute)": [[128, "spectrochempy.SVD.cumulative_explained_variance", false]], "cutoff (efa attribute)": [[104, "spectrochempy.EFA.cutoff", false]], "cval (filter attribute)": [[107, "spectrochempy.Filter.cval", false], [288, "spectrochempy.processing.filter.filter.Filter.cval", false]], "data (coord attribute)": [[101, "spectrochempy.Coord.data", false]], "data (nddataset attribute)": [[114, "spectrochempy.NDDataset.data", false]], "datasets (project attribute)": [[123, "spectrochempy.Project.datasets", false]], "datasets_names (project attribute)": [[123, "spectrochempy.Project.datasets_names", false]], "dc() (in module spectrochempy)": [[161, "spectrochempy.dc", false]], "dc() (in module spectrochempy.processing.fft.shift)": [[276, "spectrochempy.processing.fft.shift.dc", false]], "dc() (nddataset method)": [[114, "spectrochempy.NDDataset.dc", false]], "debug_() (in module spectrochempy)": [[162, "spectrochempy.debug_", false]], "default (coordset attribute)": [[102, "spectrochempy.CoordSet.default", false]], "default_format (quantity attribute)": [[124, "spectrochempy.Quantity.default_format", false]], "default_format (unit attribute)": [[130, "spectrochempy.Unit.default_format", false]], "default_option() (spectrochempymagics method)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.default_option", false]], "delete_coordset() (nddataset method)": [[114, "spectrochempy.NDDataset.delete_coordset", false]], "delta (filter attribute)": [[107, "spectrochempy.Filter.delta", false], [288, "spectrochempy.processing.filter.filter.Filter.delta", false]], "denoise() (in module spectrochempy)": [[163, "spectrochempy.denoise", false]], "denoise() (in module spectrochempy.processing.filter.denoise)": [[286, "spectrochempy.processing.filter.denoise.denoise", false]], "denoise() (nddataset method)": [[114, "spectrochempy.NDDataset.denoise", false]], "deriv (filter attribute)": [[107, "spectrochempy.Filter.deriv", false], [288, "spectrochempy.processing.filter.filter.Filter.deriv", false]], "description (lstsq attribute)": [[112, "spectrochempy.LSTSQ.description", false]], "description (nddataset attribute)": [[114, "spectrochempy.NDDataset.description", false]], "description (nnls attribute)": [[118, "spectrochempy.NNLS.description", false]], "despike() (in module spectrochempy)": [[164, "spectrochempy.despike", false]], "despike() (in module spectrochempy.processing.filter.denoise)": [[287, "spectrochempy.processing.filter.denoise.despike", false]], "despike() (nddataset method)": [[114, "spectrochempy.NDDataset.despike", false]], "detrend() (in module spectrochempy)": [[165, "spectrochempy.detrend", false]], "detrend() (in module spectrochempy.processing.baselineprocessing.baseline)": [[247, "spectrochempy.processing.baselineprocessing.baseline.detrend", false]], "detrend() (nddataset method)": [[114, "spectrochempy.NDDataset.detrend", false]], "diag() (in module spectrochempy)": [[166, "spectrochempy.diag", false]], "diag() (nddataset method)": [[114, "spectrochempy.NDDataset.diag", false]], "diagonal() (in module spectrochempy)": [[167, "spectrochempy.diagonal", false]], "diagonal() (nddataset method)": [[114, "spectrochempy.NDDataset.diagonal", false]], "dimensionality (quantity attribute)": [[124, "spectrochempy.Quantity.dimensionality", false]], "dimensionality (unit attribute)": [[130, "spectrochempy.Unit.dimensionality", false]], "dimensionalityerror": [[103, "spectrochempy.DimensionalityError", false]], "dimensionless (coord attribute)": [[101, "spectrochempy.Coord.dimensionless", false]], "dimensionless (nddataset attribute)": [[114, "spectrochempy.NDDataset.dimensionless", false]], "dimensionless (quantity attribute)": [[124, "spectrochempy.Quantity.dimensionless", false]], "dimensionless (unit attribute)": [[130, "spectrochempy.Unit.dimensionless", false]], "dims (nddataset attribute)": [[114, "spectrochempy.NDDataset.dims", false]], "directory (nddataset attribute)": [[114, "spectrochempy.NDDataset.directory", false]], "divider (nddataset attribute)": [[114, "spectrochempy.NDDataset.divider", false]], "dot() (in module spectrochempy)": [[168, "spectrochempy.dot", false]], "dot() (in module spectrochempy.processing.transformation.npy)": [[297, "spectrochempy.processing.transformation.npy.dot", false]], "dot() (nddataset method)": [[114, "spectrochempy.NDDataset.dot", false]], "dot() (quantity method)": [[124, "spectrochempy.Quantity.dot", false]], "download_nist_ir() (in module spectrochempy)": [[169, "spectrochempy.download_nist_ir", false]], "download_nist_ir() (nddataset method)": [[114, "spectrochempy.NDDataset.download_nist_ir", false]], "dry (optimize attribute)": [[119, "spectrochempy.Optimize.dry", false]], "dtype (coord attribute)": [[101, "spectrochempy.Coord.dtype", false]], "dtype (nddataset attribute)": [[114, "spectrochempy.NDDataset.dtype", false]], "dump() (nddataset method)": [[114, "spectrochempy.NDDataset.dump", false]], "dump() (project method)": [[123, "spectrochempy.Project.dump", false]], "efa": [[383, "term-EFA", true]], "efa (class in spectrochempy)": [[104, "spectrochempy.EFA", false]], "em() (in module spectrochempy)": [[170, "spectrochempy.em", false]], "em() (in module spectrochempy.processing.fft.apodization)": [[258, "spectrochempy.processing.fft.apodization.em", false]], "em() (nddataset method)": [[114, "spectrochempy.NDDataset.em", false]], "empty() (in module spectrochempy)": [[171, "spectrochempy.empty", false]], "empty() (nddataset method)": [[114, "spectrochempy.NDDataset.empty", false]], "empty_like() (in module spectrochempy)": [[172, "spectrochempy.empty_like", false]], "empty_like() (nddataset method)": [[114, "spectrochempy.NDDataset.empty_like", false]], "error_() (in module spectrochempy)": [[173, "spectrochempy.error_", false]], "ev (svd attribute)": [[128, "spectrochempy.SVD.ev", false]], "ev_cum (svd attribute)": [[128, "spectrochempy.SVD.ev_cum", false]], "ev_ratio (svd attribute)": [[128, "spectrochempy.SVD.ev_ratio", false]], "explained_variance (svd attribute)": [[128, "spectrochempy.SVD.explained_variance", false]], "explained_variance_ratio (svd attribute)": [[128, "spectrochempy.SVD.explained_variance_ratio", false]], "extraoutputgetconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.extraOutputGetConc", false]], "extraoutputgetspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.extraOutputGetSpec", false]], "eye() (in module spectrochempy)": [[174, "spectrochempy.eye", false]], "eye() (nddataset method)": [[114, "spectrochempy.NDDataset.eye", false]], "f_ev (efa attribute)": [[104, "spectrochempy.EFA.f_ev", false]], "fastica (class in spectrochempy)": [[105, "spectrochempy.FastICA", false]], "fft() (in module spectrochempy)": [[175, "spectrochempy.fft", false]], "fft() (in module spectrochempy.processing.fft.fft)": [[268, "spectrochempy.processing.fft.fft.fft", false]], "fft() (nddataset method)": [[114, "spectrochempy.NDDataset.fft", false]], "fig (nddataset attribute)": [[114, "spectrochempy.NDDataset.fig", false]], "fignum (nddataset attribute)": [[114, "spectrochempy.NDDataset.fignum", false]], "filename (coord attribute)": [[101, "spectrochempy.Coord.filename", false]], "filename (nddataset attribute)": [[114, "spectrochempy.NDDataset.filename", false]], "filename (project attribute)": [[123, "spectrochempy.Project.filename", false]], "fileselector (class in spectrochempy)": [[106, "spectrochempy.FileSelector", false]], "filetype (nddataset attribute)": [[114, "spectrochempy.NDDataset.filetype", false]], "filetype (project attribute)": [[123, "spectrochempy.Project.filetype", false]], "filter (class in spectrochempy)": [[107, "spectrochempy.Filter", false]], "filter (class in spectrochempy.processing.filter.filter)": [[288, "spectrochempy.processing.filter.filter.Filter", false]], "find_peaks() (in module spectrochempy)": [[176, "spectrochempy.find_peaks", false]], "find_peaks() (nddataset method)": [[114, "spectrochempy.NDDataset.find_peaks", false]], "fit() (baseline method)": [[98, "spectrochempy.Baseline.fit", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.fit", false]], "fit() (baselinecorrection method)": [[99, "spectrochempy.BaselineCorrection.fit", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.fit", false]], "fit() (efa method)": [[104, "spectrochempy.EFA.fit", false]], "fit() (fastica method)": [[105, "spectrochempy.FastICA.fit", false]], "fit() (iris method)": [[110, "spectrochempy.IRIS.fit", false]], "fit() (lstsq method)": [[112, "spectrochempy.LSTSQ.fit", false]], "fit() (mcrals method)": [[113, "spectrochempy.MCRALS.fit", false]], "fit() (nmf method)": [[117, "spectrochempy.NMF.fit", false]], "fit() (nnls method)": [[118, "spectrochempy.NNLS.fit", false]], "fit() (optimize method)": [[119, "spectrochempy.Optimize.fit", false]], "fit() (pca method)": [[120, "spectrochempy.PCA.fit", false]], "fit() (plsregression method)": [[122, "spectrochempy.PLSRegression.fit", false]], "fit() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.fit", false]], "fit() (svd method)": [[128, "spectrochempy.SVD.fit", false]], "fit_intercept (lstsq attribute)": [[112, "spectrochempy.LSTSQ.fit_intercept", false]], "fit_intercept (nnls attribute)": [[118, "spectrochempy.NNLS.fit_intercept", false]], "fit_to_concentrations() (actionmasskinetics method)": [[97, "spectrochempy.ActionMassKinetics.fit_to_concentrations", false]], "fit_to_gas_concentrations() (pfr method)": [[121, "spectrochempy.PFR.fit_to_gas_concentrations", false]], "fit_transform() (efa method)": [[104, "spectrochempy.EFA.fit_transform", false]], "fit_transform() (fastica method)": [[105, "spectrochempy.FastICA.fit_transform", false]], "fit_transform() (iris method)": [[110, "spectrochempy.IRIS.fit_transform", false]], "fit_transform() (mcrals method)": [[113, "spectrochempy.MCRALS.fit_transform", false]], "fit_transform() (nmf method)": [[117, "spectrochempy.NMF.fit_transform", false]], "fit_transform() (optimize method)": [[119, "spectrochempy.Optimize.fit_transform", false]], "fit_transform() (pca method)": [[120, "spectrochempy.PCA.fit_transform", false]], "fit_transform() (plsregression method)": [[122, "spectrochempy.PLSRegression.fit_transform", false]], "fit_transform() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.fit_transform", false]], "fit_transform() (svd method)": [[128, "spectrochempy.SVD.fit_transform", false]], "format_latex() (spectrochempymagics method)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.format_latex", false]], "fp (optimize attribute)": [[119, "spectrochempy.Optimize.fp", false]], "from_() (unit method)": [[130, "spectrochempy.Unit.from_", false]], "from_list() (quantity class method)": [[124, "spectrochempy.Quantity.from_list", false]], "from_sequence() (quantity class method)": [[124, "spectrochempy.Quantity.from_sequence", false]], "fromfunction() (coord method)": [[101, "spectrochempy.Coord.fromfunction", false]], "fromfunction() (in module spectrochempy)": [[177, "spectrochempy.fromfunction", false]], "fromfunction() (nddataset method)": [[114, "spectrochempy.NDDataset.fromfunction", false]], "fromiter() (coord method)": [[101, "spectrochempy.Coord.fromiter", false]], "fromiter() (in module spectrochempy)": [[178, "spectrochempy.fromiter", false]], "fromiter() (nddataset method)": [[114, "spectrochempy.NDDataset.fromiter", false]], "fsh() (in module spectrochempy)": [[179, "spectrochempy.fsh", false]], "fsh() (in module spectrochempy.processing.fft.shift)": [[277, "spectrochempy.processing.fft.shift.fsh", false]], "fsh() (nddataset method)": [[114, "spectrochempy.NDDataset.fsh", false]], "fsh2() (in module spectrochempy)": [[180, "spectrochempy.fsh2", false]], "fsh2() (in module spectrochempy.processing.fft.shift)": [[278, "spectrochempy.processing.fft.shift.fsh2", false]], "fsh2() (nddataset method)": [[114, "spectrochempy.NDDataset.fsh2", false]], "full() (in module spectrochempy)": [[181, "spectrochempy.full", false]], "full() (nddataset method)": [[114, "spectrochempy.NDDataset.full", false]], "full_like() (in module spectrochempy)": [[182, "spectrochempy.full_like", false]], "full_like() (nddataset method)": [[114, "spectrochempy.NDDataset.full_like", false]], "full_matrices (svd attribute)": [[128, "spectrochempy.SVD.full_matrices", false]], "fun (fastica attribute)": [[105, "spectrochempy.FastICA.fun", false]], "fun_args (fastica attribute)": [[105, "spectrochempy.FastICA.fun_args", false]], "gaussianmodel (class in spectrochempy)": [[183, "spectrochempy.gaussianmodel", false]], "general_hamming() (in module spectrochempy)": [[184, "spectrochempy.general_hamming", false]], "general_hamming() (in module spectrochempy.processing.fft.apodization)": [[259, "spectrochempy.processing.fft.apodization.general_hamming", false]], "general_hamming() (nddataset method)": [[114, "spectrochempy.NDDataset.general_hamming", false]], "geomspace() (coord method)": [[101, "spectrochempy.Coord.geomspace", false]], "geomspace() (in module spectrochempy)": [[185, "spectrochempy.geomspace", false]], "geomspace() (nddataset method)": [[114, "spectrochempy.NDDataset.geomspace", false]], "get_axis() (nddataset method)": [[114, "spectrochempy.NDDataset.get_axis", false]], "get_baseline() (in module spectrochempy)": [[186, "spectrochempy.get_baseline", false]], "get_baseline() (in module spectrochempy.processing.baselineprocessing.baseline)": [[248, "spectrochempy.processing.baselineprocessing.baseline.get_baseline", false]], "get_baseline() (nddataset method)": [[114, "spectrochempy.NDDataset.get_baseline", false]], "get_components() (efa method)": [[104, "spectrochempy.EFA.get_components", false]], "get_components() (fastica method)": [[105, "spectrochempy.FastICA.get_components", false]], "get_components() (iris method)": [[110, "spectrochempy.IRIS.get_components", false]], "get_components() (mcrals method)": [[113, "spectrochempy.MCRALS.get_components", false]], "get_components() (nmf method)": [[117, "spectrochempy.NMF.get_components", false]], "get_components() (optimize method)": [[119, "spectrochempy.Optimize.get_components", false]], "get_components() (pca method)": [[120, "spectrochempy.PCA.get_components", false]], "get_components() (plsregression method)": [[122, "spectrochempy.PLSRegression.get_components", false]], "get_components() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.get_components", false]], "get_components() (svd method)": [[128, "spectrochempy.SVD.get_components", false]], "get_labels() (coord method)": [[101, "spectrochempy.Coord.get_labels", false]], "get_labels() (nddataset method)": [[114, "spectrochempy.NDDataset.get_labels", false]], "get_loglevel() (in module spectrochempy)": [[187, "spectrochempy.get_loglevel", false]], "getc_to_c_idx (mcrals attribute)": [[113, "spectrochempy.MCRALS.getC_to_C_idx", false]], "getconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.getConc", false]], "getspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.getSpec", false]], "getst_to_st_idx (mcrals attribute)": [[113, "spectrochempy.MCRALS.getSt_to_St_idx", false]], "gm() (in module spectrochempy)": [[188, "spectrochempy.gm", false]], "gm() (in module spectrochempy.processing.fft.apodization)": [[260, "spectrochempy.processing.fft.apodization.gm", false]], "gm() (nddataset method)": [[114, "spectrochempy.NDDataset.gm", false]], "hamming() (in module spectrochempy)": [[189, "spectrochempy.hamming", false]], "hamming() (in module spectrochempy.processing.fft.apodization)": [[261, "spectrochempy.processing.fft.apodization.hamming", false]], "hamming() (nddataset method)": [[114, "spectrochempy.NDDataset.hamming", false]], "hann() (in module spectrochempy)": [[190, "spectrochempy.hann", false]], "hann() (in module spectrochempy.processing.fft.apodization)": [[262, "spectrochempy.processing.fft.apodization.hann", false]], "hann() (nddataset method)": [[114, "spectrochempy.NDDataset.hann", false]], "hardconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.hardConc", false]], "hardspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.hardSpec", false]], "has_complex_dims (nddataset attribute)": [[114, "spectrochempy.NDDataset.has_complex_dims", false]], "has_data (coord attribute)": [[101, "spectrochempy.Coord.has_data", false]], "has_data (nddataset attribute)": [[114, "spectrochempy.NDDataset.has_data", false]], "has_defined_name (coord attribute)": [[101, "spectrochempy.Coord.has_defined_name", false]], "has_defined_name (coordset attribute)": [[102, "spectrochempy.CoordSet.has_defined_name", false]], "has_defined_name (nddataset attribute)": [[114, "spectrochempy.NDDataset.has_defined_name", false]], "has_units (coord attribute)": [[101, "spectrochempy.Coord.has_units", false]], "has_units (nddataset attribute)": [[114, "spectrochempy.NDDataset.has_units", false]], "history (nddataset attribute)": [[114, "spectrochempy.NDDataset.history", false]], "ht() (in module spectrochempy)": [[191, "spectrochempy.ht", false]], "ht() (in module spectrochempy.processing.fft.fft)": [[269, "spectrochempy.processing.fft.fft.ht", false]], "ht() (nddataset method)": [[114, "spectrochempy.NDDataset.ht", false]], "ica": [[383, "term-ICA", true]], "id (coord attribute)": [[101, "spectrochempy.Coord.id", false]], "id (coordset attribute)": [[102, "spectrochempy.CoordSet.id", false]], "id (nddataset attribute)": [[114, "spectrochempy.NDDataset.id", false]], "id (project attribute)": [[123, "spectrochempy.Project.id", false]], "identity() (in module spectrochempy)": [[192, "spectrochempy.identity", false]], "identity() (nddataset method)": [[114, "spectrochempy.NDDataset.identity", false]], "ifft() (in module spectrochempy)": [[193, "spectrochempy.ifft", false]], "ifft() (in module spectrochempy.processing.fft.fft)": [[270, "spectrochempy.processing.fft.fft.ifft", false]], "ifft() (nddataset method)": [[114, "spectrochempy.NDDataset.ifft", false]], "ii (in module spectrochempy)": [[108, "spectrochempy.II", false]], "ii (nddataset attribute)": [[114, "spectrochempy.NDDataset.II", false]], "imag (in module spectrochempy)": [[194, "spectrochempy.imag", false]], "imag (nddataset attribute)": [[114, "spectrochempy.NDDataset.imag", false]], "include_limits (baseline attribute)": [[98, "spectrochempy.Baseline.include_limits", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.include_limits", false]], "include_limits (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.include_limits", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.include_limits", false]], "info_() (in module spectrochempy)": [[195, "spectrochempy.info_", false]], "init (nmf attribute)": [[117, "spectrochempy.NMF.init", false]], "init_concentrations (actionmasskinetics attribute)": [[97, "spectrochempy.ActionMassKinetics.init_concentrations", false]], "integrate() (actionmasskinetics method)": [[97, "spectrochempy.ActionMassKinetics.integrate", false]], "interactive (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.interactive", false]], "intercept (lstsq attribute)": [[112, "spectrochempy.LSTSQ.intercept", false]], "intercept (nnls attribute)": [[118, "spectrochempy.NNLS.intercept", false]], "interpolate() (in module spectrochempy)": [[196, "spectrochempy.interpolate", false]], "interpolate() (in module spectrochempy.processing.interpolation.interpolate)": [[293, "spectrochempy.processing.interpolation.interpolate.interpolate", false]], "inverse_transform() (efa method)": [[104, "spectrochempy.EFA.inverse_transform", false]], "inverse_transform() (fastica method)": [[105, "spectrochempy.FastICA.inverse_transform", false]], "inverse_transform() (iris method)": [[110, "spectrochempy.IRIS.inverse_transform", false]], "inverse_transform() (mcrals method)": [[113, "spectrochempy.MCRALS.inverse_transform", false]], "inverse_transform() (nmf method)": [[117, "spectrochempy.NMF.inverse_transform", false]], "inverse_transform() (optimize method)": [[119, "spectrochempy.Optimize.inverse_transform", false]], "inverse_transform() (pca method)": [[120, "spectrochempy.PCA.inverse_transform", false]], "inverse_transform() (plsregression method)": [[122, "spectrochempy.PLSRegression.inverse_transform", false]], "inverse_transform() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.inverse_transform", false]], "inverse_transform() (svd method)": [[128, "spectrochempy.SVD.inverse_transform", false]], "ir (in module spectrochempy)": [[109, "spectrochempy.IR", false]], "ir (nddataset attribute)": [[114, "spectrochempy.NDDataset.IR", false]], "iris (class in spectrochempy)": [[110, "spectrochempy.IRIS", false]], "iriskernel (class in spectrochempy)": [[111, "spectrochempy.IrisKernel", false]], "is_1d (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_1d", false]], "is_compatible_with() (quantity method)": [[124, "spectrochempy.Quantity.is_compatible_with", false]], "is_compatible_with() (unit method)": [[130, "spectrochempy.Unit.is_compatible_with", false]], "is_complex (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_complex", false]], "is_empty (coord attribute)": [[101, "spectrochempy.Coord.is_empty", false]], "is_empty (coordset attribute)": [[102, "spectrochempy.CoordSet.is_empty", false]], "is_empty (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_empty", false]], "is_float (coord attribute)": [[101, "spectrochempy.Coord.is_float", false]], "is_float (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_float", false]], "is_integer (coord attribute)": [[101, "spectrochempy.Coord.is_integer", false]], "is_integer (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_integer", false]], "is_interleaved (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_interleaved", false]], "is_labeled (coord attribute)": [[101, "spectrochempy.Coord.is_labeled", false]], "is_labeled (coordset attribute)": [[102, "spectrochempy.CoordSet.is_labeled", false]], "is_labeled (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_labeled", false]], "is_masked (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_masked", false]], "is_quaternion (nddataset attribute)": [[114, "spectrochempy.NDDataset.is_quaternion", false]], "is_same_dim (coordset attribute)": [[102, "spectrochempy.CoordSet.is_same_dim", false]], "is_units_compatible() (coord method)": [[101, "spectrochempy.Coord.is_units_compatible", false]], "is_units_compatible() (in module spectrochempy)": [[198, "spectrochempy.is_units_compatible", false]], "is_units_compatible() (nddataset method)": [[114, "spectrochempy.NDDataset.is_units_compatible", false]], "iterated_power (pca attribute)": [[120, "spectrochempy.PCA.iterated_power", false]], "ito() (coord method)": [[101, "spectrochempy.Coord.ito", false]], "ito() (in module spectrochempy)": [[199, "spectrochempy.ito", false]], "ito() (nddataset method)": [[114, "spectrochempy.NDDataset.ito", false]], "ito() (quantity method)": [[124, "spectrochempy.Quantity.ito", false]], "ito_base_units() (coord method)": [[101, "spectrochempy.Coord.ito_base_units", false]], "ito_base_units() (in module spectrochempy)": [[200, "spectrochempy.ito_base_units", false]], "ito_base_units() (nddataset method)": [[114, "spectrochempy.NDDataset.ito_base_units", false]], "ito_base_units() (quantity method)": [[124, "spectrochempy.Quantity.ito_base_units", false]], "ito_preferred() (quantity method)": [[124, "spectrochempy.Quantity.ito_preferred", false]], "ito_reduced_units() (coord method)": [[101, "spectrochempy.Coord.ito_reduced_units", false]], "ito_reduced_units() (in module spectrochempy)": [[201, "spectrochempy.ito_reduced_units", false]], "ito_reduced_units() (nddataset method)": [[114, "spectrochempy.NDDataset.ito_reduced_units", false]], "ito_reduced_units() (quantity method)": [[124, "spectrochempy.Quantity.ito_reduced_units", false]], "ito_root_units() (quantity method)": [[124, "spectrochempy.Quantity.ito_root_units", false]], "keys() (coordset method)": [[102, "spectrochempy.CoordSet.keys", false]], "kwargsgetconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.kwargsGetConc", false]], "kwargsgetspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.kwargsGetSpec", false]], "l1_ratio (nmf attribute)": [[117, "spectrochempy.NMF.l1_ratio", false]], "labels (coord attribute)": [[101, "spectrochempy.Coord.labels", false]], "labels (coordset attribute)": [[102, "spectrochempy.CoordSet.labels", false]], "labels (nddataset attribute)": [[114, "spectrochempy.NDDataset.labels", false]], "lamb (baseline attribute)": [[98, "spectrochempy.Baseline.lamb", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.lamb", false]], "lamb (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.lamb", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.lamb", false]], "lamb (filter attribute)": [[107, "spectrochempy.Filter.lamb", false], [288, "spectrochempy.processing.filter.filter.Filter.lamb", false]], "larmor (coord attribute)": [[101, "spectrochempy.Coord.larmor", false]], "laser_frequency (coord attribute)": [[101, "spectrochempy.Coord.laser_frequency", false]], "limits (coord attribute)": [[101, "spectrochempy.Coord.limits", false]], "limits (nddataset attribute)": [[114, "spectrochempy.NDDataset.limits", false]], "linear (coord attribute)": [[101, "spectrochempy.Coord.linear", false]], "linearize() (coord method)": [[101, "spectrochempy.Coord.linearize", false]], "linspace() (coord method)": [[101, "spectrochempy.Coord.linspace", false]], "linspace() (in module spectrochempy)": [[202, "spectrochempy.linspace", false]], "linspace() (nddataset method)": [[114, "spectrochempy.NDDataset.linspace", false]], "lls (baseline attribute)": [[98, "spectrochempy.Baseline.lls", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.lls", false]], "lls (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.lls", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.lls", false]], "lls() (in module spectrochempy)": [[203, "spectrochempy.lls", false]], "lls() (in module spectrochempy.processing.baselineprocessing.baseline)": [[249, "spectrochempy.processing.baselineprocessing.baseline.lls", false]], "lls_inv() (in module spectrochempy)": [[204, "spectrochempy.lls_inv", false]], "lls_inv() (in module spectrochempy.processing.baselineprocessing.baseline)": [[250, "spectrochempy.processing.baselineprocessing.baseline.lls_inv", false]], "load() (in module spectrochempy)": [[205, "spectrochempy.load", false]], "load() (nddataset class method)": [[114, "spectrochempy.NDDataset.load", false]], "load() (project class method)": [[123, "spectrochempy.Project.load", false]], "load_iris() (in module spectrochempy)": [[206, "spectrochempy.load_iris", false]], "load_iris() (nddataset method)": [[114, "spectrochempy.NDDataset.load_iris", false]], "loading": [[383, "term-loading", true]], "loadings": [[383, "term-loadings", true]], "loadings (pca attribute)": [[120, "spectrochempy.PCA.loadings", false]], "loc2index() (coord method)": [[101, "spectrochempy.Coord.loc2index", false]], "local_timezone (nddataset attribute)": [[114, "spectrochempy.NDDataset.local_timezone", false]], "log (baseline attribute)": [[98, "spectrochempy.Baseline.log", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.log", false]], "log (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.log", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.log", false]], "log (efa attribute)": [[104, "spectrochempy.EFA.log", false]], "log (fastica attribute)": [[105, "spectrochempy.FastICA.log", false]], "log (filter attribute)": [[107, "spectrochempy.Filter.log", false], [288, "spectrochempy.processing.filter.filter.Filter.log", false]], "log (iris attribute)": [[110, "spectrochempy.IRIS.log", false]], "log (lstsq attribute)": [[112, "spectrochempy.LSTSQ.log", false]], "log (mcrals attribute)": [[113, "spectrochempy.MCRALS.log", false]], "log (nmf attribute)": [[117, "spectrochempy.NMF.log", false]], "log (nnls attribute)": [[118, "spectrochempy.NNLS.log", false]], "log (optimize attribute)": [[119, "spectrochempy.Optimize.log", false]], "log (pca attribute)": [[120, "spectrochempy.PCA.log", false]], "log (plsregression attribute)": [[122, "spectrochempy.PLSRegression.log", false]], "log (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.log", false]], "log (svd attribute)": [[128, "spectrochempy.SVD.log", false]], "logspace() (coord method)": [[101, "spectrochempy.Coord.logspace", false]], "logspace() (in module spectrochempy)": [[207, "spectrochempy.logspace", false]], "logspace() (nddataset method)": [[114, "spectrochempy.NDDataset.logspace", false]], "lorentzianmodel (class in spectrochempy)": [[208, "spectrochempy.lorentzianmodel", false]], "ls() (in module spectrochempy)": [[209, "spectrochempy.ls", false]], "ls() (in module spectrochempy.processing.fft.shift)": [[279, "spectrochempy.processing.fft.shift.ls", false]], "ls() (nddataset method)": [[114, "spectrochempy.NDDataset.ls", false]], "lstsq (class in spectrochempy)": [[112, "spectrochempy.LSTSQ", false]], "m (coord attribute)": [[101, "spectrochempy.Coord.m", false]], "m (nddataset attribute)": [[114, "spectrochempy.NDDataset.m", false]], "m (quantity attribute)": [[124, "spectrochempy.Quantity.m", false]], "m_as() (quantity method)": [[124, "spectrochempy.Quantity.m_as", false]], "m_from() (unit method)": [[130, "spectrochempy.Unit.m_from", false]], "magics (spectrochempymagics attribute)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.magics", false]], "magnitude (coord attribute)": [[101, "spectrochempy.Coord.magnitude", false]], "magnitude (nddataset attribute)": [[114, "spectrochempy.NDDataset.magnitude", false]], "magnitude (quantity attribute)": [[124, "spectrochempy.Quantity.magnitude", false]], "mask (nddataset attribute)": [[114, "spectrochempy.NDDataset.mask", false]], "masked_data (nddataset attribute)": [[114, "spectrochempy.NDDataset.masked_data", false]], "max() (coord method)": [[101, "spectrochempy.Coord.max", false]], "max() (in module spectrochempy)": [[210, "spectrochempy.max", false]], "max() (nddataset method)": [[114, "spectrochempy.NDDataset.max", false]], "max_fun_calls (optimize attribute)": [[119, "spectrochempy.Optimize.max_fun_calls", false]], "max_iter (baseline attribute)": [[98, "spectrochempy.Baseline.max_iter", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.max_iter", false]], "max_iter (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.max_iter", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.max_iter", false]], "max_iter (fastica attribute)": [[105, "spectrochempy.FastICA.max_iter", false]], "max_iter (mcrals attribute)": [[113, "spectrochempy.MCRALS.max_iter", false]], "max_iter (nmf attribute)": [[117, "spectrochempy.NMF.max_iter", false]], "max_iter (optimize attribute)": [[119, "spectrochempy.Optimize.max_iter", false]], "max_iter (plsregression attribute)": [[122, "spectrochempy.PLSRegression.max_iter", false]], "maxdiv (mcrals attribute)": [[113, "spectrochempy.MCRALS.maxdiv", false]], "mc() (in module spectrochempy)": [[211, "spectrochempy.mc", false]], "mc() (in module spectrochempy.processing.fft.fft)": [[271, "spectrochempy.processing.fft.fft.mc", false]], "mc() (nddataset method)": [[114, "spectrochempy.NDDataset.mc", false]], "mcr-als": [[383, "term-MCR-ALS", true]], "mcrals (class in spectrochempy)": [[113, "spectrochempy.MCRALS", false]], "mean (fastica attribute)": [[105, "spectrochempy.FastICA.mean", false]], "mean() (in module spectrochempy)": [[212, "spectrochempy.mean", false]], "mean() (nddataset method)": [[114, "spectrochempy.NDDataset.mean", false]], "meta (coord attribute)": [[101, "spectrochempy.Coord.meta", false]], "meta (nddataset attribute)": [[114, "spectrochempy.NDDataset.meta", false]], "meta (project attribute)": [[123, "spectrochempy.Project.meta", false]], "method (filter attribute)": [[107, "spectrochempy.Filter.method", false], [288, "spectrochempy.processing.filter.filter.Filter.method", false]], "method (optimize attribute)": [[119, "spectrochempy.Optimize.method", false]], "min() (coord method)": [[101, "spectrochempy.Coord.min", false]], "min() (in module spectrochempy)": [[213, "spectrochempy.min", false]], "min() (nddataset method)": [[114, "spectrochempy.NDDataset.min", false]], "mixing (fastica attribute)": [[105, "spectrochempy.FastICA.mixing", false]], "mode (filter attribute)": [[107, "spectrochempy.Filter.mode", false], [288, "spectrochempy.processing.filter.filter.Filter.mode", false]], "model (baseline attribute)": [[98, "spectrochempy.Baseline.model", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.model", false]], "model (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.model", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.model", false]], "modeldata (nddataset attribute)": [[114, "spectrochempy.NDDataset.modeldata", false]], "modeldata (optimize attribute)": [[119, "spectrochempy.Optimize.modeldata", false]], "modified (nddataset attribute)": [[114, "spectrochempy.NDDataset.modified", false]], "monodecconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.monoDecConc", false]], "monodectol (mcrals attribute)": [[113, "spectrochempy.MCRALS.monoDecTol", false]], "monoincconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.monoIncConc", false]], "monoinctol (mcrals attribute)": [[113, "spectrochempy.MCRALS.monoIncTol", false]], "multiplot() (in module spectrochempy)": [[214, "spectrochempy.multiplot", false]], "multiplot_image() (in module spectrochempy)": [[215, "spectrochempy.multiplot_image", false]], "multiplot_lines() (in module spectrochempy)": [[216, "spectrochempy.multiplot_lines", false]], "multiplot_map() (in module spectrochempy)": [[217, "spectrochempy.multiplot_map", false]], "multiplot_scatter() (in module spectrochempy)": [[218, "spectrochempy.multiplot_scatter", false]], "multiplot_stack() (in module spectrochempy)": [[219, "spectrochempy.multiplot_stack", false]], "multiplot_with_transposed() (in module spectrochempy)": [[220, "spectrochempy.multiplot_with_transposed", false]], "multivariate (baseline attribute)": [[98, "spectrochempy.Baseline.multivariate", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.multivariate", false]], "multivariate (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.multivariate", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.multivariate", false]], "n_components": [[383, "term-n_components", true]], "n_components (baseline attribute)": [[98, "spectrochempy.Baseline.n_components", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.n_components", false]], "n_components (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.n_components", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.n_components", false]], "n_components (efa attribute)": [[104, "spectrochempy.EFA.n_components", false]], "n_components (fastica attribute)": [[105, "spectrochempy.FastICA.n_components", false]], "n_components (iris attribute)": [[110, "spectrochempy.IRIS.n_components", false]], "n_components (mcrals attribute)": [[113, "spectrochempy.MCRALS.n_components", false]], "n_components (nmf attribute)": [[117, "spectrochempy.NMF.n_components", false]], "n_components (optimize attribute)": [[119, "spectrochempy.Optimize.n_components", false]], "n_components (pca attribute)": [[120, "spectrochempy.PCA.n_components", false]], "n_components (plsregression attribute)": [[122, "spectrochempy.PLSRegression.n_components", false]], "n_components (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.n_components", false]], "n_components (svd attribute)": [[128, "spectrochempy.SVD.n_components", false]], "n_features": [[383, "term-n_features", true]], "n_iter (fastica attribute)": [[105, "spectrochempy.FastICA.n_iter", false]], "n_observations": [[383, "term-n_observations", true]], "n_oversamples (pca attribute)": [[120, "spectrochempy.PCA.n_oversamples", false]], "n_reactions (actionmasskinetics attribute)": [[97, "spectrochempy.ActionMassKinetics.n_reactions", false]], "n_species (actionmasskinetics attribute)": [[97, "spectrochempy.ActionMassKinetics.n_species", false]], "n_targets": [[383, "term-n_targets", true]], "name (baseline attribute)": [[98, "spectrochempy.Baseline.name", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.name", false]], "name (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.name", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.name", false]], "name (coord attribute)": [[101, "spectrochempy.Coord.name", false]], "name (efa attribute)": [[104, "spectrochempy.EFA.name", false]], "name (fastica attribute)": [[105, "spectrochempy.FastICA.name", false]], "name (filter attribute)": [[107, "spectrochempy.Filter.name", false], [288, "spectrochempy.processing.filter.filter.Filter.name", false]], "name (iris attribute)": [[110, "spectrochempy.IRIS.name", false]], "name (lstsq attribute)": [[112, "spectrochempy.LSTSQ.name", false]], "name (mcrals attribute)": [[113, "spectrochempy.MCRALS.name", false]], "name (nddataset attribute)": [[114, "spectrochempy.NDDataset.name", false]], "name (nmf attribute)": [[117, "spectrochempy.NMF.name", false]], "name (nnls attribute)": [[118, "spectrochempy.NNLS.name", false]], "name (optimize attribute)": [[119, "spectrochempy.Optimize.name", false]], "name (pca attribute)": [[120, "spectrochempy.PCA.name", false]], "name (plsregression attribute)": [[122, "spectrochempy.PLSRegression.name", false]], "name (project attribute)": [[123, "spectrochempy.Project.name", false]], "name (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.name", false]], "name (svd attribute)": [[128, "spectrochempy.SVD.name", false]], "names (coordset attribute)": [[102, "spectrochempy.CoordSet.names", false]], "ndaxes (nddataset attribute)": [[114, "spectrochempy.NDDataset.ndaxes", false]], "nddataset (class in spectrochempy)": [[114, "spectrochempy.NDDataset", false]], "ndim (nddataset attribute)": [[114, "spectrochempy.NDDataset.ndim", false]], "nmf (class in spectrochempy)": [[117, "spectrochempy.NMF", false]], "nnls (class in spectrochempy)": [[118, "spectrochempy.NNLS", false]], "noise (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.noise", false]], "nonnegconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.nonnegConc", false]], "nonnegspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.nonnegSpec", false]], "normspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.normSpec", false]], "ones() (in module spectrochempy)": [[221, "spectrochempy.ones", false]], "ones() (nddataset method)": [[114, "spectrochempy.NDDataset.ones", false]], "ones_like() (in module spectrochempy)": [[222, "spectrochempy.ones_like", false]], "ones_like() (nddataset method)": [[114, "spectrochempy.NDDataset.ones_like", false]], "optimize (class in spectrochempy)": [[119, "spectrochempy.Optimize", false]], "order (baseline attribute)": [[98, "spectrochempy.Baseline.order", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.order", false]], "order (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.order", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.order", false]], "order (filter attribute)": [[107, "spectrochempy.Filter.order", false], [288, "spectrochempy.processing.filter.filter.Filter.order", false]], "origin (nddataset attribute)": [[114, "spectrochempy.NDDataset.origin", false]], "original (baselinecorrector attribute)": [[100, "spectrochempy.BaselineCorrector.original", false]], "parameters() (baseline method)": [[98, "spectrochempy.Baseline.parameters", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.parameters", false]], "parameters() (baselinecorrection method)": [[99, "spectrochempy.BaselineCorrection.parameters", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.parameters", false]], "parameters() (efa method)": [[104, "spectrochempy.EFA.parameters", false]], "parameters() (fastica method)": [[105, "spectrochempy.FastICA.parameters", false]], "parameters() (filter method)": [[107, "spectrochempy.Filter.parameters", false], [288, "spectrochempy.processing.filter.filter.Filter.parameters", false]], "parameters() (iris method)": [[110, "spectrochempy.IRIS.parameters", false]], "parameters() (lstsq method)": [[112, "spectrochempy.LSTSQ.parameters", false]], "parameters() (mcrals method)": [[113, "spectrochempy.MCRALS.parameters", false]], "parameters() (nmf method)": [[117, "spectrochempy.NMF.parameters", false]], "parameters() (nnls method)": [[118, "spectrochempy.NNLS.parameters", false]], "parameters() (optimize method)": [[119, "spectrochempy.Optimize.parameters", false]], "parameters() (pca method)": [[120, "spectrochempy.PCA.parameters", false]], "parameters() (plsregression method)": [[122, "spectrochempy.PLSRegression.parameters", false]], "parameters() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.parameters", false]], "parameters() (svd method)": [[128, "spectrochempy.SVD.parameters", false]], "params() (baseline method)": [[98, "spectrochempy.Baseline.params", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.params", false]], "params() (baselinecorrection method)": [[99, "spectrochempy.BaselineCorrection.params", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.params", false]], "params() (efa method)": [[104, "spectrochempy.EFA.params", false]], "params() (fastica method)": [[105, "spectrochempy.FastICA.params", false]], "params() (filter method)": [[107, "spectrochempy.Filter.params", false], [288, "spectrochempy.processing.filter.filter.Filter.params", false]], "params() (iris method)": [[110, "spectrochempy.IRIS.params", false]], "params() (lstsq method)": [[112, "spectrochempy.LSTSQ.params", false]], "params() (mcrals method)": [[113, "spectrochempy.MCRALS.params", false]], "params() (nmf method)": [[117, "spectrochempy.NMF.params", false]], "params() (nnls method)": [[118, "spectrochempy.NNLS.params", false]], "params() (optimize method)": [[119, "spectrochempy.Optimize.params", false]], "params() (pca method)": [[120, "spectrochempy.PCA.params", false]], "params() (plsregression method)": [[122, "spectrochempy.PLSRegression.params", false]], "params() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.params", false]], "params() (svd method)": [[128, "spectrochempy.SVD.params", false]], "parent (nddataset attribute)": [[114, "spectrochempy.NDDataset.parent", false]], "parent (project attribute)": [[123, "spectrochempy.Project.parent", false]], "parityplot() (plsregression method)": [[122, "spectrochempy.PLSRegression.parityplot", false]], "parse_options() (spectrochempymagics method)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.parse_options", false]], "pathclean() (in module spectrochempy)": [[223, "spectrochempy.pathclean", false]], "pca": [[383, "term-PCA", true]], "pca (class in spectrochempy)": [[120, "spectrochempy.PCA", false]], "pep 8#imports": [[9, "index-0", false]], "persist() (quantity method)": [[124, "spectrochempy.Quantity.persist", false]], "pfr (class in spectrochempy)": [[121, "spectrochempy.PFR", false]], "pipe() (in module spectrochempy)": [[224, "spectrochempy.pipe", false]], "pipe() (nddataset method)": [[114, "spectrochempy.NDDataset.pipe", false]], "pk() (in module spectrochempy)": [[225, "spectrochempy.pk", false]], "pk() (in module spectrochempy.processing.fft.phasing)": [[273, "spectrochempy.processing.fft.phasing.pk", false]], "pk() (nddataset method)": [[114, "spectrochempy.NDDataset.pk", false]], "pk_exp() (in module spectrochempy)": [[226, "spectrochempy.pk_exp", false]], "pk_exp() (in module spectrochempy.processing.fft.phasing)": [[274, "spectrochempy.processing.fft.phasing.pk_exp", false]], "pk_exp() (nddataset method)": [[114, "spectrochempy.NDDataset.pk_exp", false]], "plot() (baseline method)": [[98, "spectrochempy.Baseline.plot", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.plot", false]], "plot() (baselinecorrection method)": [[99, "spectrochempy.BaselineCorrection.plot", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.plot", false]], "plot() (in module spectrochempy)": [[227, "spectrochempy.plot", false]], "plot() (nddataset method)": [[114, "spectrochempy.NDDataset.plot", false]], "plot_1d() (in module spectrochempy)": [[228, "spectrochempy.plot_1D", false]], "plot_1d() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_1D", false]], "plot_2d() (in module spectrochempy)": [[229, "spectrochempy.plot_2D", false]], "plot_2d() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_2D", false]], "plot_3d() (in module spectrochempy)": [[230, "spectrochempy.plot_3D", false]], "plot_3d() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_3D", false]], "plot_bar() (in module spectrochempy)": [[231, "spectrochempy.plot_bar", false]], "plot_bar() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_bar", false]], "plot_image() (in module spectrochempy)": [[232, "spectrochempy.plot_image", false]], "plot_image() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_image", false]], "plot_map() (in module spectrochempy)": [[233, "spectrochempy.plot_map", false]], "plot_map() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_map", false]], "plot_multiple() (in module spectrochempy)": [[234, "spectrochempy.plot_multiple", false]], "plot_multiple() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_multiple", false]], "plot_pen() (in module spectrochempy)": [[235, "spectrochempy.plot_pen", false]], "plot_pen() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_pen", false]], "plot_scatter() (in module spectrochempy)": [[236, "spectrochempy.plot_scatter", false]], "plot_scatter() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_scatter", false]], "plot_scatter_pen() (in module spectrochempy)": [[237, "spectrochempy.plot_scatter_pen", false]], "plot_scatter_pen() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_scatter_pen", false]], "plot_stack() (in module spectrochempy)": [[238, "spectrochempy.plot_stack", false]], "plot_stack() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_stack", false]], "plot_surface() (in module spectrochempy)": [[239, "spectrochempy.plot_surface", false]], "plot_surface() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_surface", false]], "plot_waterfall() (in module spectrochempy)": [[240, "spectrochempy.plot_waterfall", false]], "plot_waterfall() (nddataset method)": [[114, "spectrochempy.NDDataset.plot_waterfall", false]], "plot_with_transposed() (in module spectrochempy)": [[241, "spectrochempy.plot_with_transposed", false]], "plotdistribution() (iris method)": [[110, "spectrochempy.IRIS.plotdistribution", false]], "plotlcurve() (iris method)": [[110, "spectrochempy.IRIS.plotlcurve", false]], "plotmerit() (efa method)": [[104, "spectrochempy.EFA.plotmerit", false]], "plotmerit() (fastica method)": [[105, "spectrochempy.FastICA.plotmerit", false]], "plotmerit() (iris method)": [[110, "spectrochempy.IRIS.plotmerit", false]], "plotmerit() (mcrals method)": [[113, "spectrochempy.MCRALS.plotmerit", false]], "plotmerit() (nmf method)": [[117, "spectrochempy.NMF.plotmerit", false]], "plotmerit() (optimize method)": [[119, "spectrochempy.Optimize.plotmerit", false]], "plotmerit() (pca method)": [[120, "spectrochempy.PCA.plotmerit", false]], "plotmerit() (plsregression method)": [[122, "spectrochempy.PLSRegression.plotmerit", false]], "plotmerit() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.plotmerit", false]], "plotmerit() (svd method)": [[128, "spectrochempy.SVD.plotmerit", false]], "pls": [[383, "term-PLS", true]], "plsregression (class in spectrochempy)": [[122, "spectrochempy.PLSRegression", false]], "polynomialbaseline (class in spectrochempy)": [[242, "spectrochempy.polynomialbaseline", false]], "positive (lstsq attribute)": [[112, "spectrochempy.LSTSQ.positive", false]], "positive (nnls attribute)": [[118, "spectrochempy.NNLS.positive", false]], "power_iteration_normalizer (pca attribute)": [[120, "spectrochempy.PCA.power_iteration_normalizer", false]], "predict() (lstsq method)": [[112, "spectrochempy.LSTSQ.predict", false]], "predict() (nnls method)": [[118, "spectrochempy.NNLS.predict", false]], "predict() (optimize method)": [[119, "spectrochempy.Optimize.predict", false]], "predict() (plsregression method)": [[122, "spectrochempy.PLSRegression.predict", false]], "preferences (nddataset attribute)": [[114, "spectrochempy.NDDataset.preferences", false]], "printev() (pca method)": [[120, "spectrochempy.PCA.printev", false]], "prod() (quantity method)": [[124, "spectrochempy.Quantity.prod", false]], "project (class in spectrochempy)": [[123, "spectrochempy.Project", false]], "projects (project attribute)": [[123, "spectrochempy.Project.projects", false]], "projects_names (project attribute)": [[123, "spectrochempy.Project.projects_names", false]], "ps() (in module spectrochempy)": [[298, "spectrochempy.ps", false]], "ps() (in module spectrochempy.processing.fft.fft)": [[272, "spectrochempy.processing.fft.fft.ps", false]], "ps() (nddataset method)": [[114, "spectrochempy.NDDataset.ps", false]], "pt (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.Pt", false]], "ptp() (coord method)": [[101, "spectrochempy.Coord.ptp", false]], "ptp() (in module spectrochempy)": [[299, "spectrochempy.ptp", false]], "ptp() (nddataset method)": [[114, "spectrochempy.NDDataset.ptp", false]], "python enhancement proposals": [[9, "index-0", false]], "qpsolver (iris attribute)": [[110, "spectrochempy.IRIS.qpsolver", false]], "qsin() (in module spectrochempy)": [[300, "spectrochempy.qsin", false]], "qsin() (in module spectrochempy.processing.fft.apodization)": [[263, "spectrochempy.processing.fft.apodization.qsin", false]], "qsin() (nddataset method)": [[114, "spectrochempy.NDDataset.qsin", false]], "quantity (class in spectrochempy)": [[124, "spectrochempy.Quantity", false]], "random() (in module spectrochempy)": [[301, "spectrochempy.random", false]], "random() (nddataset method)": [[114, "spectrochempy.NDDataset.random", false]], "random_state (fastica attribute)": [[105, "spectrochempy.FastICA.random_state", false]], "random_state (nmf attribute)": [[117, "spectrochempy.NMF.random_state", false]], "random_state (pca attribute)": [[120, "spectrochempy.PCA.random_state", false]], "ranges (baseline attribute)": [[98, "spectrochempy.Baseline.ranges", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.ranges", false]], "ranges (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.ranges", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.ranges", false]], "rank": [[383, "term-rank", true]], "read() (in module spectrochempy)": [[302, "spectrochempy.read", false]], "read() (nddataset method)": [[114, "spectrochempy.NDDataset.read", false]], "read_carroucell() (in module spectrochempy)": [[303, "spectrochempy.read_carroucell", false]], "read_carroucell() (nddataset method)": [[114, "spectrochempy.NDDataset.read_carroucell", false]], "read_csv() (in module spectrochempy)": [[304, "spectrochempy.read_csv", false]], "read_csv() (nddataset method)": [[114, "spectrochempy.NDDataset.read_csv", false]], "read_ddr() (in module spectrochempy)": [[305, "spectrochempy.read_ddr", false]], "read_ddr() (nddataset method)": [[114, "spectrochempy.NDDataset.read_ddr", false]], "read_dir() (in module spectrochempy)": [[306, "spectrochempy.read_dir", false]], "read_dir() (nddataset method)": [[114, "spectrochempy.NDDataset.read_dir", false]], "read_hdr() (in module spectrochempy)": [[307, "spectrochempy.read_hdr", false]], "read_hdr() (nddataset method)": [[114, "spectrochempy.NDDataset.read_hdr", false]], "read_jcamp() (in module spectrochempy)": [[308, "spectrochempy.read_jcamp", false]], "read_jcamp() (nddataset method)": [[114, "spectrochempy.NDDataset.read_jcamp", false]], "read_labspec() (in module spectrochempy)": [[309, "spectrochempy.read_labspec", false]], "read_labspec() (nddataset method)": [[114, "spectrochempy.NDDataset.read_labspec", false]], "read_mat() (in module spectrochempy)": [[310, "spectrochempy.read_mat", false]], "read_mat() (nddataset method)": [[114, "spectrochempy.NDDataset.read_mat", false]], "read_matlab() (in module spectrochempy)": [[311, "spectrochempy.read_matlab", false]], "read_matlab() (nddataset method)": [[114, "spectrochempy.NDDataset.read_matlab", false]], "read_omnic() (in module spectrochempy)": [[312, "spectrochempy.read_omnic", false]], "read_omnic() (nddataset method)": [[114, "spectrochempy.NDDataset.read_omnic", false]], "read_opus() (in module spectrochempy)": [[313, "spectrochempy.read_opus", false]], "read_opus() (nddataset method)": [[114, "spectrochempy.NDDataset.read_opus", false]], "read_quadera() (in module spectrochempy)": [[314, "spectrochempy.read_quadera", false]], "read_quadera() (nddataset method)": [[114, "spectrochempy.NDDataset.read_quadera", false]], "read_sdr() (in module spectrochempy)": [[315, "spectrochempy.read_sdr", false]], "read_sdr() (nddataset method)": [[114, "spectrochempy.NDDataset.read_sdr", false]], "read_soc() (in module spectrochempy)": [[316, "spectrochempy.read_soc", false]], "read_soc() (nddataset method)": [[114, "spectrochempy.NDDataset.read_soc", false]], "read_spa() (in module spectrochempy)": [[317, "spectrochempy.read_spa", false]], "read_spa() (nddataset method)": [[114, "spectrochempy.NDDataset.read_spa", false]], "read_spc() (in module spectrochempy)": [[318, "spectrochempy.read_spc", false]], "read_spc() (nddataset method)": [[114, "spectrochempy.NDDataset.read_spc", false]], "read_spg() (in module spectrochempy)": [[319, "spectrochempy.read_spg", false]], "read_spg() (nddataset method)": [[114, "spectrochempy.NDDataset.read_spg", false]], "read_srs() (in module spectrochempy)": [[320, "spectrochempy.read_srs", false]], "read_srs() (nddataset method)": [[114, "spectrochempy.NDDataset.read_srs", false]], "read_topspin() (in module spectrochempy)": [[321, "spectrochempy.read_topspin", false]], "read_topspin() (nddataset method)": [[114, "spectrochempy.NDDataset.read_topspin", false]], "read_wdf() (in module spectrochempy)": [[322, "spectrochempy.read_wdf", false]], "read_wdf() (nddataset method)": [[114, "spectrochempy.NDDataset.read_wdf", false]], "read_wire() (in module spectrochempy)": [[323, "spectrochempy.read_wire", false]], "read_wire() (nddataset method)": [[114, "spectrochempy.NDDataset.read_wire", false]], "read_zip() (in module spectrochempy)": [[324, "spectrochempy.read_zip", false]], "read_zip() (nddataset method)": [[114, "spectrochempy.NDDataset.read_zip", false]], "real (in module spectrochempy)": [[325, "spectrochempy.real", false]], "real (nddataset attribute)": [[114, "spectrochempy.NDDataset.real", false]], "reconstruct() (efa method)": [[104, "spectrochempy.EFA.reconstruct", false]], "reconstruct() (fastica method)": [[105, "spectrochempy.FastICA.reconstruct", false]], "reconstruct() (iris method)": [[110, "spectrochempy.IRIS.reconstruct", false]], "reconstruct() (mcrals method)": [[113, "spectrochempy.MCRALS.reconstruct", false]], "reconstruct() (nmf method)": [[117, "spectrochempy.NMF.reconstruct", false]], "reconstruct() (optimize method)": [[119, "spectrochempy.Optimize.reconstruct", false]], "reconstruct() (pca method)": [[120, "spectrochempy.PCA.reconstruct", false]], "reconstruct() (plsregression method)": [[122, "spectrochempy.PLSRegression.reconstruct", false]], "reconstruct() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.reconstruct", false]], "reconstruct() (svd method)": [[128, "spectrochempy.SVD.reconstruct", false]], "reduce() (efa method)": [[104, "spectrochempy.EFA.reduce", false]], "reduce() (fastica method)": [[105, "spectrochempy.FastICA.reduce", false]], "reduce() (iris method)": [[110, "spectrochempy.IRIS.reduce", false]], "reduce() (mcrals method)": [[113, "spectrochempy.MCRALS.reduce", false]], "reduce() (nmf method)": [[117, "spectrochempy.NMF.reduce", false]], "reduce() (optimize method)": [[119, "spectrochempy.Optimize.reduce", false]], "reduce() (pca method)": [[120, "spectrochempy.PCA.reduce", false]], "reduce() (plsregression method)": [[122, "spectrochempy.PLSRegression.reduce", false]], "reduce() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.reduce", false]], "reduce() (svd method)": [[128, "spectrochempy.SVD.reduce", false]], "reg_par (iris attribute)": [[110, "spectrochempy.IRIS.reg_par", false]], "registered (spectrochempymagics attribute)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics.registered", false]], "regularization": [[383, "term-regularization", true]], "remove_all_dataset() (project method)": [[123, "spectrochempy.Project.remove_all_dataset", false]], "remove_all_project() (project method)": [[123, "spectrochempy.Project.remove_all_project", false]], "remove_dataset() (project method)": [[123, "spectrochempy.Project.remove_dataset", false]], "remove_masks() (in module spectrochempy)": [[326, "spectrochempy.remove_masks", false]], "remove_masks() (nddataset method)": [[114, "spectrochempy.NDDataset.remove_masks", false]], "remove_project() (project method)": [[123, "spectrochempy.Project.remove_project", false]], "reset() (baseline method)": [[98, "spectrochempy.Baseline.reset", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.reset", false]], "reset() (baselinecorrection method)": [[99, "spectrochempy.BaselineCorrection.reset", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.reset", false]], "reset() (efa method)": [[104, "spectrochempy.EFA.reset", false]], "reset() (fastica method)": [[105, "spectrochempy.FastICA.reset", false]], "reset() (filter method)": [[107, "spectrochempy.Filter.reset", false], [288, "spectrochempy.processing.filter.filter.Filter.reset", false]], "reset() (iris method)": [[110, "spectrochempy.IRIS.reset", false]], "reset() (lstsq method)": [[112, "spectrochempy.LSTSQ.reset", false]], "reset() (mcrals method)": [[113, "spectrochempy.MCRALS.reset", false]], "reset() (nmf method)": [[117, "spectrochempy.NMF.reset", false]], "reset() (nnls method)": [[118, "spectrochempy.NNLS.reset", false]], "reset() (optimize method)": [[119, "spectrochempy.Optimize.reset", false]], "reset() (pca method)": [[120, "spectrochempy.PCA.reset", false]], "reset() (plsregression method)": [[122, "spectrochempy.PLSRegression.reset", false]], "reset() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.reset", false]], "reset() (svd method)": [[128, "spectrochempy.SVD.reset", false]], "reversed (coord attribute)": [[101, "spectrochempy.Coord.reversed", false]], "ri (in module spectrochempy)": [[125, "spectrochempy.RI", false]], "ri (nddataset attribute)": [[114, "spectrochempy.NDDataset.RI", false]], "roi (coord attribute)": [[101, "spectrochempy.Coord.roi", false]], "roi (nddataset attribute)": [[114, "spectrochempy.NDDataset.roi", false]], "roll() (in module spectrochempy)": [[327, "spectrochempy.roll", false]], "roll() (in module spectrochempy.processing.fft.shift)": [[280, "spectrochempy.processing.fft.shift.roll", false]], "roll() (nddataset method)": [[114, "spectrochempy.NDDataset.roll", false]], "round() (coord method)": [[101, "spectrochempy.Coord.round", false]], "round() (in module spectrochempy)": [[328, "spectrochempy.round", false]], "round() (nddataset method)": [[114, "spectrochempy.NDDataset.round", false]], "round_() (coord method)": [[101, "spectrochempy.Coord.round_", false]], "round_() (nddataset method)": [[114, "spectrochempy.NDDataset.round_", false]], "rr (in module spectrochempy)": [[126, "spectrochempy.RR", false]], "rr (nddataset attribute)": [[114, "spectrochempy.NDDataset.RR", false]], "rs() (in module spectrochempy)": [[329, "spectrochempy.rs", false]], "rs() (in module spectrochempy.processing.fft.shift)": [[281, "spectrochempy.processing.fft.shift.rs", false]], "rs() (nddataset method)": [[114, "spectrochempy.NDDataset.rs", false]], "rubberband() (in module spectrochempy)": [[330, "spectrochempy.rubberband", false]], "rubberband() (in module spectrochempy.processing.baselineprocessing.baseline)": [[251, "spectrochempy.processing.baselineprocessing.baseline.rubberband", false]], "rubberband() (nddataset method)": [[114, "spectrochempy.NDDataset.rubberband", false]], "run_all_scripts() (in module spectrochempy)": [[331, "spectrochempy.run_all_scripts", false]], "run_script() (in module spectrochempy)": [[332, "spectrochempy.run_script", false]], "s (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.s", false]], "s (svd attribute)": [[128, "spectrochempy.SVD.s", false]], "s_soft (mcrals attribute)": [[113, "spectrochempy.MCRALS.S_soft", false]], "save() (nddataset method)": [[114, "spectrochempy.NDDataset.save", false]], "save() (project method)": [[123, "spectrochempy.Project.save", false]], "save_as() (nddataset method)": [[114, "spectrochempy.NDDataset.save_as", false]], "save_as() (project method)": [[123, "spectrochempy.Project.save_as", false]], "savgol() (in module spectrochempy)": [[333, "spectrochempy.savgol", false]], "savgol() (in module spectrochempy.processing.filter.filter)": [[289, "spectrochempy.processing.filter.filter.savgol", false]], "savgol() (nddataset method)": [[114, "spectrochempy.NDDataset.savgol", false]], "savgol_filter() (in module spectrochempy)": [[334, "spectrochempy.savgol_filter", false]], "savgol_filter() (in module spectrochempy.processing.filter.filter)": [[290, "spectrochempy.processing.filter.filter.savgol_filter", false]], "savgol_filter() (nddataset method)": [[114, "spectrochempy.NDDataset.savgol_filter", false]], "scale (plsregression attribute)": [[122, "spectrochempy.PLSRegression.scale", false]], "scaled (pca attribute)": [[120, "spectrochempy.PCA.scaled", false]], "score": [[383, "term-score", true]], "score() (lstsq method)": [[112, "spectrochempy.LSTSQ.score", false]], "score() (nnls method)": [[118, "spectrochempy.NNLS.score", false]], "score() (plsregression method)": [[122, "spectrochempy.PLSRegression.score", false]], "scoreplot() (pca method)": [[120, "spectrochempy.PCA.scoreplot", false]], "scores": [[383, "term-scores", true]], "scores (pca attribute)": [[120, "spectrochempy.PCA.scores", false]], "screeplot() (pca method)": [[120, "spectrochempy.PCA.screeplot", false]], "script (asymmetricvoigtmodel attribute)": [[145, "spectrochempy.asymmetricvoigtmodel.script", false]], "script (class in spectrochempy)": [[129, "spectrochempy.Script", false]], "script (gaussianmodel attribute)": [[183, "spectrochempy.gaussianmodel.script", false]], "script (lorentzianmodel attribute)": [[208, "spectrochempy.lorentzianmodel.script", false]], "script (optimize attribute)": [[119, "spectrochempy.Optimize.script", false]], "script (polynomialbaseline attribute)": [[242, "spectrochempy.polynomialbaseline.script", false]], "script (sigmoidmodel attribute)": [[342, "spectrochempy.sigmoidmodel.script", false]], "script (voigtmodel attribute)": [[367, "spectrochempy.voigtmodel.script", false]], "scripts (project attribute)": [[123, "spectrochempy.Project.scripts", false]], "scripts_names (project attribute)": [[123, "spectrochempy.Project.scripts_names", false]], "select() (coordset method)": [[102, "spectrochempy.CoordSet.select", false]], "set() (coordset method)": [[102, "spectrochempy.CoordSet.set", false]], "set_complex() (in module spectrochempy)": [[335, "spectrochempy.set_complex", false]], "set_complex() (nddataset method)": [[114, "spectrochempy.NDDataset.set_complex", false]], "set_coordset() (nddataset method)": [[114, "spectrochempy.NDDataset.set_coordset", false]], "set_coordtitles() (nddataset method)": [[114, "spectrochempy.NDDataset.set_coordtitles", false]], "set_coordunits() (nddataset method)": [[114, "spectrochempy.NDDataset.set_coordunits", false]], "set_hypercomplex() (in module spectrochempy)": [[336, "spectrochempy.set_hypercomplex", false]], "set_hypercomplex() (nddataset method)": [[114, "spectrochempy.NDDataset.set_hypercomplex", false]], "set_laser_frequency() (coord method)": [[101, "spectrochempy.Coord.set_laser_frequency", false]], "set_loglevel() (in module spectrochempy)": [[337, "spectrochempy.set_loglevel", false]], "set_nmr_context() (in module spectrochempy)": [[338, "spectrochempy.set_nmr_context", false]], "set_quaternion() (in module spectrochempy)": [[339, "spectrochempy.set_quaternion", false]], "set_quaternion() (nddataset method)": [[114, "spectrochempy.NDDataset.set_quaternion", false]], "set_titles() (coordset method)": [[102, "spectrochempy.CoordSet.set_titles", false]], "set_units() (coordset method)": [[102, "spectrochempy.CoordSet.set_units", false]], "shape (coord attribute)": [[101, "spectrochempy.Coord.shape", false]], "shape (nddataset attribute)": [[114, "spectrochempy.NDDataset.shape", false]], "show() (in module spectrochempy)": [[340, "spectrochempy.show", false]], "show_datapoints (coord attribute)": [[101, "spectrochempy.Coord.show_datapoints", false]], "show_versions() (in module spectrochempy)": [[341, "spectrochempy.show_versions", false]], "shuffle (nmf attribute)": [[117, "spectrochempy.NMF.shuffle", false]], "sigdigits (coord attribute)": [[101, "spectrochempy.Coord.sigdigits", false]], "sigmoidmodel (class in spectrochempy)": [[342, "spectrochempy.sigmoidmodel", false]], "simplisma (class in spectrochempy)": [[127, "spectrochempy.SIMPLISMA", false]], "simps() (in module spectrochempy)": [[343, "spectrochempy.simps", false]], "simps() (nddataset method)": [[114, "spectrochempy.NDDataset.simps", false]], "simpson() (in module spectrochempy)": [[344, "spectrochempy.simpson", false]], "simpson() (nddataset method)": [[114, "spectrochempy.NDDataset.simpson", false]], "sine() (in module spectrochempy)": [[345, "spectrochempy.sine", false]], "sine() (in module spectrochempy.processing.fft.apodization)": [[264, "spectrochempy.processing.fft.apodization.sine", false]], "sine() (nddataset method)": [[114, "spectrochempy.NDDataset.sine", false]], "singular_values (svd attribute)": [[128, "spectrochempy.SVD.singular_values", false]], "sinm() (in module spectrochempy)": [[346, "spectrochempy.sinm", false]], "sinm() (in module spectrochempy.processing.fft.apodization)": [[265, "spectrochempy.processing.fft.apodization.sinm", false]], "sinm() (nddataset method)": [[114, "spectrochempy.NDDataset.sinm", false]], "size (coord attribute)": [[101, "spectrochempy.Coord.size", false]], "size (coordset attribute)": [[102, "spectrochempy.CoordSet.size", false]], "size (filter attribute)": [[107, "spectrochempy.Filter.size", false], [288, "spectrochempy.processing.filter.filter.Filter.size", false]], "size (nddataset attribute)": [[114, "spectrochempy.NDDataset.size", false]], "sizes (coordset attribute)": [[102, "spectrochempy.CoordSet.sizes", false]], "smooth() (in module spectrochempy)": [[347, "spectrochempy.smooth", false]], "smooth() (in module spectrochempy.processing.filter.filter)": [[291, "spectrochempy.processing.filter.filter.smooth", false]], "smooth() (nddataset method)": [[114, "spectrochempy.NDDataset.smooth", false]], "snip() (in module spectrochempy)": [[348, "spectrochempy.snip", false]], "snip() (in module spectrochempy.processing.baselineprocessing.baseline)": [[252, "spectrochempy.processing.baselineprocessing.baseline.snip", false]], "snip() (nddataset method)": [[114, "spectrochempy.NDDataset.snip", false]], "snip_width (baseline attribute)": [[98, "spectrochempy.Baseline.snip_width", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.snip_width", false]], "snip_width (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.snip_width", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.snip_width", false]], "solver (nmf attribute)": [[117, "spectrochempy.NMF.solver", false]], "solverconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.solverConc", false]], "solverspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.solverSpec", false]], "sort() (in module spectrochempy)": [[349, "spectrochempy.sort", false]], "sort() (nddataset method)": [[114, "spectrochempy.NDDataset.sort", false]], "sp() (in module spectrochempy)": [[350, "spectrochempy.sp", false]], "sp() (in module spectrochempy.processing.fft.apodization)": [[266, "spectrochempy.processing.fft.apodization.sp", false]], "sp() (nddataset method)": [[114, "spectrochempy.NDDataset.sp", false]], "spacing (coord attribute)": [[101, "spectrochempy.Coord.spacing", false]], "species (actionmasskinetics attribute)": [[97, "spectrochempy.ActionMassKinetics.species", false]], "spectrochempymagics (class in spectrochempy.ipython.magics)": [[197, "spectrochempy.ipython.magics.SpectroChemPyMagics", false]], "squeeze() (in module spectrochempy)": [[351, "spectrochempy.squeeze", false]], "squeeze() (nddataset method)": [[114, "spectrochempy.NDDataset.squeeze", false]], "st (fastica attribute)": [[105, "spectrochempy.FastICA.St", false]], "st (mcrals attribute)": [[113, "spectrochempy.MCRALS.St", false]], "st (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.St", false]], "st_constrained_list (mcrals attribute)": [[113, "spectrochempy.MCRALS.St_constrained_list", false]], "st_ls (mcrals attribute)": [[113, "spectrochempy.MCRALS.St_ls", false]], "st_ls_list (mcrals attribute)": [[113, "spectrochempy.MCRALS.St_ls_list", false]], "st_unconstrained (mcrals attribute)": [[113, "spectrochempy.MCRALS.St_unconstrained", false]], "stack() (in module spectrochempy)": [[352, "spectrochempy.stack", false]], "stack() (in module spectrochempy.processing.transformation.concatenate)": [[296, "spectrochempy.processing.transformation.concatenate.stack", false]], "stack() (nddataset method)": [[114, "spectrochempy.NDDataset.stack", false]], "standardized (pca attribute)": [[120, "spectrochempy.PCA.standardized", false]], "std() (in module spectrochempy)": [[353, "spectrochempy.std", false]], "std() (nddataset method)": [[114, "spectrochempy.NDDataset.std", false]], "storeiterations (mcrals attribute)": [[113, "spectrochempy.MCRALS.storeIterations", false]], "suffix (nddataset attribute)": [[114, "spectrochempy.NDDataset.suffix", false]], "suffix (project attribute)": [[123, "spectrochempy.Project.suffix", false]], "sum() (in module spectrochempy)": [[354, "spectrochempy.sum", false]], "sum() (nddataset method)": [[114, "spectrochempy.NDDataset.sum", false]], "sv (svd attribute)": [[128, "spectrochempy.SVD.sv", false]], "svd": [[383, "term-SVD", true]], "svd (class in spectrochempy)": [[128, "spectrochempy.SVD", false]], "svd_solver (pca attribute)": [[120, "spectrochempy.PCA.svd_solver", false]], "swapaxes() (nddataset method)": [[114, "spectrochempy.NDDataset.swapaxes", false]], "swapdims() (in module spectrochempy)": [[355, "spectrochempy.swapdims", false]], "swapdims() (nddataset method)": [[114, "spectrochempy.NDDataset.swapdims", false]], "t (nddataset attribute)": [[114, "spectrochempy.NDDataset.T", false]], "take() (in module spectrochempy)": [[356, "spectrochempy.take", false]], "take() (nddataset method)": [[114, "spectrochempy.NDDataset.take", false]], "timezone (nddataset attribute)": [[114, "spectrochempy.NDDataset.timezone", false]], "title (coord attribute)": [[101, "spectrochempy.Coord.title", false]], "title (nddataset attribute)": [[114, "spectrochempy.NDDataset.title", false]], "titles (coordset attribute)": [[102, "spectrochempy.CoordSet.titles", false]], "to() (coord method)": [[101, "spectrochempy.Coord.to", false]], "to() (in module spectrochempy)": [[357, "spectrochempy.to", false]], "to() (nddataset method)": [[114, "spectrochempy.NDDataset.to", false]], "to() (quantity method)": [[124, "spectrochempy.Quantity.to", false]], "to_array() (in module spectrochempy)": [[358, "spectrochempy.to_array", false]], "to_array() (nddataset method)": [[114, "spectrochempy.NDDataset.to_array", false]], "to_base_units() (coord method)": [[101, "spectrochempy.Coord.to_base_units", false]], "to_base_units() (in module spectrochempy)": [[359, "spectrochempy.to_base_units", false]], "to_base_units() (nddataset method)": [[114, "spectrochempy.NDDataset.to_base_units", false]], "to_base_units() (quantity method)": [[124, "spectrochempy.Quantity.to_base_units", false]], "to_compact() (quantity method)": [[124, "spectrochempy.Quantity.to_compact", false]], "to_dict() (baseline method)": [[98, "spectrochempy.Baseline.to_dict", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.to_dict", false]], "to_dict() (baselinecorrection method)": [[99, "spectrochempy.BaselineCorrection.to_dict", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.to_dict", false]], "to_dict() (coordset method)": [[102, "spectrochempy.CoordSet.to_dict", false]], "to_dict() (efa method)": [[104, "spectrochempy.EFA.to_dict", false]], "to_dict() (fastica method)": [[105, "spectrochempy.FastICA.to_dict", false]], "to_dict() (filter method)": [[107, "spectrochempy.Filter.to_dict", false], [288, "spectrochempy.processing.filter.filter.Filter.to_dict", false]], "to_dict() (iris method)": [[110, "spectrochempy.IRIS.to_dict", false]], "to_dict() (lstsq method)": [[112, "spectrochempy.LSTSQ.to_dict", false]], "to_dict() (mcrals method)": [[113, "spectrochempy.MCRALS.to_dict", false]], "to_dict() (nmf method)": [[117, "spectrochempy.NMF.to_dict", false]], "to_dict() (nnls method)": [[118, "spectrochempy.NNLS.to_dict", false]], "to_dict() (optimize method)": [[119, "spectrochempy.Optimize.to_dict", false]], "to_dict() (pca method)": [[120, "spectrochempy.PCA.to_dict", false]], "to_dict() (plsregression method)": [[122, "spectrochempy.PLSRegression.to_dict", false]], "to_dict() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.to_dict", false]], "to_dict() (svd method)": [[128, "spectrochempy.SVD.to_dict", false]], "to_preferred() (quantity method)": [[124, "spectrochempy.Quantity.to_preferred", false]], "to_reduced_units() (coord method)": [[101, "spectrochempy.Coord.to_reduced_units", false]], "to_reduced_units() (in module spectrochempy)": [[360, "spectrochempy.to_reduced_units", false]], "to_reduced_units() (nddataset method)": [[114, "spectrochempy.NDDataset.to_reduced_units", false]], "to_reduced_units() (quantity method)": [[124, "spectrochempy.Quantity.to_reduced_units", false]], "to_root_units() (quantity method)": [[124, "spectrochempy.Quantity.to_root_units", false]], "to_xarray() (in module spectrochempy)": [[361, "spectrochempy.to_xarray", false]], "to_xarray() (nddataset method)": [[114, "spectrochempy.NDDataset.to_xarray", false]], "tol (baseline attribute)": [[98, "spectrochempy.Baseline.tol", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.tol", false]], "tol (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.tol", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.tol", false]], "tol (fastica attribute)": [[105, "spectrochempy.FastICA.tol", false]], "tol (mcrals attribute)": [[113, "spectrochempy.MCRALS.tol", false]], "tol (nmf attribute)": [[117, "spectrochempy.NMF.tol", false]], "tol (pca attribute)": [[120, "spectrochempy.PCA.tol", false]], "tol (plsregression attribute)": [[122, "spectrochempy.PLSRegression.tol", false]], "tol (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.tol", false]], "transform() (baseline method)": [[98, "spectrochempy.Baseline.transform", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.transform", false]], "transform() (baselinecorrection method)": [[99, "spectrochempy.BaselineCorrection.transform", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.transform", false]], "transform() (efa method)": [[104, "spectrochempy.EFA.transform", false]], "transform() (fastica method)": [[105, "spectrochempy.FastICA.transform", false]], "transform() (filter method)": [[107, "spectrochempy.Filter.transform", false], [288, "spectrochempy.processing.filter.filter.Filter.transform", false]], "transform() (iris method)": [[110, "spectrochempy.IRIS.transform", false]], "transform() (mcrals method)": [[113, "spectrochempy.MCRALS.transform", false]], "transform() (nmf method)": [[117, "spectrochempy.NMF.transform", false]], "transform() (optimize method)": [[119, "spectrochempy.Optimize.transform", false]], "transform() (pca method)": [[120, "spectrochempy.PCA.transform", false]], "transform() (plsregression method)": [[122, "spectrochempy.PLSRegression.transform", false]], "transform() (simplisma method)": [[127, "spectrochempy.SIMPLISMA.transform", false]], "transform() (svd method)": [[128, "spectrochempy.SVD.transform", false]], "transpose() (in module spectrochempy)": [[362, "spectrochempy.transpose", false]], "transpose() (nddataset method)": [[114, "spectrochempy.NDDataset.transpose", false]], "trapezoid() (in module spectrochempy)": [[363, "spectrochempy.trapezoid", false]], "trapezoid() (nddataset method)": [[114, "spectrochempy.NDDataset.trapezoid", false]], "trapz() (in module spectrochempy)": [[364, "spectrochempy.trapz", false]], "trapz() (nddataset method)": [[114, "spectrochempy.NDDataset.trapz", false]], "triang() (in module spectrochempy)": [[365, "spectrochempy.triang", false]], "triang() (in module spectrochempy.processing.fft.apodization)": [[267, "spectrochempy.processing.fft.apodization.triang", false]], "triang() (nddataset method)": [[114, "spectrochempy.NDDataset.triang", false]], "type (asymmetricvoigtmodel attribute)": [[145, "spectrochempy.asymmetricvoigtmodel.type", false]], "type (gaussianmodel attribute)": [[183, "spectrochempy.gaussianmodel.type", false]], "type (lorentzianmodel attribute)": [[208, "spectrochempy.lorentzianmodel.type", false]], "type (polynomialbaseline attribute)": [[242, "spectrochempy.polynomialbaseline.type", false]], "type (sigmoidmodel attribute)": [[342, "spectrochempy.sigmoidmodel.type", false]], "type (voigtmodel attribute)": [[367, "spectrochempy.voigtmodel.type", false]], "u (quantity attribute)": [[124, "spectrochempy.Quantity.u", false]], "u (svd attribute)": [[128, "spectrochempy.SVD.U", false]], "umasked_data (coord attribute)": [[101, "spectrochempy.Coord.umasked_data", false]], "umasked_data (nddataset attribute)": [[114, "spectrochempy.NDDataset.umasked_data", false]], "unimodality": [[383, "term-unimodality", true]], "unimodconc (mcrals attribute)": [[113, "spectrochempy.MCRALS.unimodConc", false]], "unimodconcmod (mcrals attribute)": [[113, "spectrochempy.MCRALS.unimodConcMod", false]], "unimodconctol (mcrals attribute)": [[113, "spectrochempy.MCRALS.unimodConcTol", false]], "unimodspec (mcrals attribute)": [[113, "spectrochempy.MCRALS.unimodSpec", false]], "unimodspecmod (mcrals attribute)": [[113, "spectrochempy.MCRALS.unimodSpecMod", false]], "unimodspectol (mcrals attribute)": [[113, "spectrochempy.MCRALS.unimodSpecTol", false]], "unit (class in spectrochempy)": [[130, "spectrochempy.Unit", false]], "unit_items() (quantity method)": [[124, "spectrochempy.Quantity.unit_items", false]], "unitless (coord attribute)": [[101, "spectrochempy.Coord.unitless", false]], "unitless (nddataset attribute)": [[114, "spectrochempy.NDDataset.unitless", false]], "unitless (quantity attribute)": [[124, "spectrochempy.Quantity.unitless", false]], "units (coord attribute)": [[101, "spectrochempy.Coord.units", false]], "units (coordset attribute)": [[102, "spectrochempy.CoordSet.units", false]], "units (nddataset attribute)": [[114, "spectrochempy.NDDataset.units", false]], "units (quantity attribute)": [[124, "spectrochempy.Quantity.units", false]], "update() (coordset method)": [[102, "spectrochempy.CoordSet.update", false]], "used_ranges (baseline attribute)": [[98, "spectrochempy.Baseline.used_ranges", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.used_ranges", false]], "used_ranges (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.used_ranges", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.used_ranges", false]], "usermodels (optimize attribute)": [[119, "spectrochempy.Optimize.usermodels", false]], "value (coord attribute)": [[101, "spectrochempy.Coord.value", false]], "value (nddataset attribute)": [[114, "spectrochempy.NDDataset.value", false]], "values (coord attribute)": [[101, "spectrochempy.Coord.values", false]], "values (nddataset attribute)": [[114, "spectrochempy.NDDataset.values", false]], "var() (in module spectrochempy)": [[366, "spectrochempy.var", false]], "var() (nddataset method)": [[114, "spectrochempy.NDDataset.var", false]], "visualize() (quantity method)": [[124, "spectrochempy.Quantity.visualize", false]], "voigtmodel (class in spectrochempy)": [[367, "spectrochempy.voigtmodel", false]], "vt (svd attribute)": [[128, "spectrochempy.SVD.VT", false]], "w_init (fastica attribute)": [[105, "spectrochempy.FastICA.w_init", false]], "warning_() (in module spectrochempy)": [[368, "spectrochempy.warning_", false]], "whiten (fastica attribute)": [[105, "spectrochempy.FastICA.whiten", false]], "whiten (pca attribute)": [[120, "spectrochempy.PCA.whiten", false]], "whiten_solver (fastica attribute)": [[105, "spectrochempy.FastICA.whiten_solver", false]], "whitening (fastica attribute)": [[105, "spectrochempy.FastICA.whitening", false]], "whittaker() (in module spectrochempy)": [[369, "spectrochempy.whittaker", false]], "whittaker() (in module spectrochempy.processing.filter.filter)": [[292, "spectrochempy.processing.filter.filter.whittaker", false]], "whittaker() (nddataset method)": [[114, "spectrochempy.NDDataset.whittaker", false]], "write() (in module spectrochempy)": [[370, "spectrochempy.write", false]], "write() (nddataset method)": [[114, "spectrochempy.NDDataset.write", false]], "write_csv() (in module spectrochempy)": [[371, "spectrochempy.write_csv", false]], "write_csv() (nddataset method)": [[114, "spectrochempy.NDDataset.write_csv", false]], "write_excel() (in module spectrochempy)": [[372, "spectrochempy.write_excel", false]], "write_excel() (nddataset method)": [[114, "spectrochempy.NDDataset.write_excel", false]], "write_jcamp() (in module spectrochempy)": [[373, "spectrochempy.write_jcamp", false]], "write_jcamp() (nddataset method)": [[114, "spectrochempy.NDDataset.write_jcamp", false]], "write_mat() (in module spectrochempy)": [[374, "spectrochempy.write_mat", false]], "write_mat() (nddataset method)": [[114, "spectrochempy.NDDataset.write_mat", false]], "write_matlab() (in module spectrochempy)": [[375, "spectrochempy.write_matlab", false]], "write_matlab() (nddataset method)": [[114, "spectrochempy.NDDataset.write_matlab", false]], "write_xls() (in module spectrochempy)": [[376, "spectrochempy.write_xls", false]], "write_xls() (nddataset method)": [[114, "spectrochempy.NDDataset.write_xls", false]], "x (baseline attribute)": [[98, "spectrochempy.Baseline.X", false], [244, "spectrochempy.processing.baselineprocessing.baseline.Baseline.X", false]], "x (baselinecorrection attribute)": [[99, "spectrochempy.BaselineCorrection.X", false], [253, "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection.X", false]], "x (efa attribute)": [[104, "spectrochempy.EFA.X", false]], "x (fastica attribute)": [[105, "spectrochempy.FastICA.X", false]], "x (iris attribute)": [[110, "spectrochempy.IRIS.X", false]], "x (lstsq attribute)": [[112, "spectrochempy.LSTSQ.X", false]], "x (mcrals attribute)": [[113, "spectrochempy.MCRALS.X", false]], "x (nmf attribute)": [[117, "spectrochempy.NMF.X", false]], "x (nnls attribute)": [[118, "spectrochempy.NNLS.X", false]], "x (optimize attribute)": [[119, "spectrochempy.Optimize.X", false]], "x (pca attribute)": [[120, "spectrochempy.PCA.X", false]], "x (plsregression attribute)": [[122, "spectrochempy.PLSRegression.X", false]], "x (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.X", false]], "x (svd attribute)": [[128, "spectrochempy.SVD.X", false]], "y (efa attribute)": [[104, "spectrochempy.EFA.Y", false]], "y (fastica attribute)": [[105, "spectrochempy.FastICA.Y", false]], "y (iris attribute)": [[110, "spectrochempy.IRIS.Y", false]], "y (lstsq attribute)": [[112, "spectrochempy.LSTSQ.Y", false]], "y (mcrals attribute)": [[113, "spectrochempy.MCRALS.Y", false]], "y (nmf attribute)": [[117, "spectrochempy.NMF.Y", false]], "y (nnls attribute)": [[118, "spectrochempy.NNLS.Y", false]], "y (optimize attribute)": [[119, "spectrochempy.Optimize.Y", false]], "y (pca attribute)": [[120, "spectrochempy.PCA.Y", false]], "y (plsregression attribute)": [[122, "spectrochempy.PLSRegression.Y", false]], "y (simplisma attribute)": [[127, "spectrochempy.SIMPLISMA.Y", false]], "y (svd attribute)": [[128, "spectrochempy.SVD.Y", false]], "zeros() (in module spectrochempy)": [[377, "spectrochempy.zeros", false]], "zeros() (nddataset method)": [[114, "spectrochempy.NDDataset.zeros", false]], "zeros_like() (in module spectrochempy)": [[378, "spectrochempy.zeros_like", false]], "zeros_like() (nddataset method)": [[114, "spectrochempy.NDDataset.zeros_like", false]], "zf() (in module spectrochempy)": [[379, "spectrochempy.zf", false]], "zf() (in module spectrochempy.processing.fft.zero_filling)": [[282, "spectrochempy.processing.fft.zero_filling.zf", false]], "zf() (nddataset method)": [[114, "spectrochempy.NDDataset.zf", false]], "zf_auto() (in module spectrochempy)": [[380, "spectrochempy.zf_auto", false]], "zf_auto() (in module spectrochempy.processing.fft.zero_filling)": [[283, "spectrochempy.processing.fft.zero_filling.zf_auto", false]], "zf_auto() (nddataset method)": [[114, "spectrochempy.NDDataset.zf_auto", false]], "zf_double() (in module spectrochempy)": [[381, "spectrochempy.zf_double", false]], "zf_double() (in module spectrochempy.processing.fft.zero_filling)": [[284, "spectrochempy.processing.fft.zero_filling.zf_double", false]], "zf_double() (nddataset method)": [[114, "spectrochempy.NDDataset.zf_double", false]], "zf_size() (in module spectrochempy)": [[382, "spectrochempy.zf_size", false]], "zf_size() (in module spectrochempy.processing.fft.zero_filling)": [[285, "spectrochempy.processing.fft.zero_filling.zf_size", false]], "zf_size() (nddataset method)": [[114, "spectrochempy.NDDataset.zf_size", false]]}, "objects": {"spectrochempy": [[97, 0, 1, "", "ActionMassKinetics"], [98, 0, 1, "", "Baseline"], [99, 0, 1, "", "BaselineCorrection"], [100, 0, 1, "", "BaselineCorrector"], [101, 0, 1, "", "Coord"], [102, 0, 1, "", "CoordSet"], [103, 3, 1, "", "DimensionalityError"], [104, 0, 1, "", "EFA"], [105, 0, 1, "", "FastICA"], [106, 0, 1, "", "FileSelector"], [107, 0, 1, "", "Filter"], [108, 4, 1, "", "II"], [109, 4, 1, "", "IR"], [110, 0, 1, "", "IRIS"], [111, 0, 1, "", "IrisKernel"], [112, 0, 1, "", "LSTSQ"], [113, 0, 1, "", "MCRALS"], [114, 0, 1, "", "NDDataset"], [117, 0, 1, "", "NMF"], [118, 0, 1, "", "NNLS"], [119, 0, 1, "", "Optimize"], [120, 0, 1, "", "PCA"], [121, 0, 1, "", "PFR"], [122, 0, 1, "", "PLSRegression"], [123, 0, 1, "", "Project"], [124, 0, 1, "", "Quantity"], [125, 4, 1, "", "RI"], [126, 4, 1, "", "RR"], [127, 0, 1, "", "SIMPLISMA"], [128, 0, 1, "", "SVD"], [129, 0, 1, "", "Script"], [130, 0, 1, "", "Unit"], [131, 5, 1, "", "ab"], [132, 5, 1, "", "abc"], [133, 5, 1, "", "abs"], [134, 5, 1, "", "absolute"], [135, 5, 1, "", "align"], [136, 5, 1, "", "all"], [137, 5, 1, "", "amax"], [138, 5, 1, "", "amin"], [139, 5, 1, "", "any"], [140, 5, 1, "", "arange"], [141, 5, 1, "", "argmax"], [142, 5, 1, "", "argmin"], [143, 5, 1, "", "around"], [144, 5, 1, "", "asls"], [145, 0, 1, "", "asymmetricvoigtmodel"], [146, 5, 1, "", "autosub"], [147, 5, 1, "", "average"], [148, 5, 1, "", "bartlett"], [149, 5, 1, "", "basc"], [150, 5, 1, "", "blackmanharris"], [151, 5, 1, "", "clip"], [152, 5, 1, "", "component"], [153, 5, 1, "", "concatenate"], [154, 5, 1, "", "conj"], [155, 5, 1, "", "conjugate"], [156, 5, 1, "", "coordmax"], [157, 5, 1, "", "coordmin"], [158, 5, 1, "", "copy"], [159, 5, 1, "", "cs"], [160, 5, 1, "", "cumsum"], [161, 5, 1, "", "dc"], [162, 5, 1, "", "debug_"], [163, 5, 1, "", "denoise"], [164, 5, 1, "", "despike"], [165, 5, 1, "", "detrend"], [166, 5, 1, "", "diag"], [167, 5, 1, "", "diagonal"], [168, 5, 1, "", "dot"], [169, 5, 1, "", "download_nist_ir"], [170, 5, 1, "", "em"], [171, 5, 1, "", "empty"], [172, 5, 1, "", "empty_like"], [173, 5, 1, "", "error_"], [174, 5, 1, "", "eye"], [175, 5, 1, "", "fft"], [176, 5, 1, "", "find_peaks"], [177, 5, 1, "", "fromfunction"], [178, 5, 1, "", "fromiter"], [179, 5, 1, "", "fsh"], [180, 5, 1, "", "fsh2"], [181, 5, 1, "", "full"], [182, 5, 1, "", "full_like"], [183, 0, 1, "", "gaussianmodel"], [184, 5, 1, "", "general_hamming"], [185, 5, 1, "", "geomspace"], [186, 5, 1, "", "get_baseline"], [187, 5, 1, "", "get_loglevel"], [188, 5, 1, "", "gm"], [189, 5, 1, "", "hamming"], [190, 5, 1, "", "hann"], [191, 5, 1, "", "ht"], [192, 5, 1, "", "identity"], [193, 5, 1, "", "ifft"], [194, 4, 1, "", "imag"], [195, 5, 1, "", "info_"], [196, 5, 1, "", "interpolate"], [198, 5, 1, "", "is_units_compatible"], [199, 5, 1, "", "ito"], [200, 5, 1, "", "ito_base_units"], [201, 5, 1, "", "ito_reduced_units"], [202, 5, 1, "", "linspace"], [203, 5, 1, "", "lls"], [204, 5, 1, "", "lls_inv"], [205, 5, 1, "", "load"], [206, 5, 1, "", "load_iris"], [207, 5, 1, "", "logspace"], [208, 0, 1, "", "lorentzianmodel"], [209, 5, 1, "", "ls"], [210, 5, 1, "", "max"], [211, 5, 1, "", "mc"], [212, 5, 1, "", "mean"], [213, 5, 1, "", "min"], [214, 5, 1, "", "multiplot"], [215, 5, 1, "", "multiplot_image"], [216, 5, 1, "", "multiplot_lines"], [217, 5, 1, "", "multiplot_map"], [218, 5, 1, "", "multiplot_scatter"], [219, 5, 1, "", "multiplot_stack"], [220, 5, 1, "", "multiplot_with_transposed"], [221, 5, 1, "", "ones"], [222, 5, 1, "", "ones_like"], [223, 5, 1, "", "pathclean"], [224, 5, 1, "", "pipe"], [225, 5, 1, "", "pk"], [226, 5, 1, "", "pk_exp"], [227, 5, 1, "", "plot"], [228, 5, 1, "", "plot_1D"], [229, 5, 1, "", "plot_2D"], [230, 5, 1, "", "plot_3D"], [231, 5, 1, "", "plot_bar"], [232, 5, 1, "", "plot_image"], [233, 5, 1, "", "plot_map"], [234, 5, 1, "", "plot_multiple"], [235, 5, 1, "", "plot_pen"], [236, 5, 1, "", "plot_scatter"], [237, 5, 1, "", "plot_scatter_pen"], [238, 5, 1, "", "plot_stack"], [239, 5, 1, "", "plot_surface"], [240, 5, 1, "", "plot_waterfall"], [241, 5, 1, "", "plot_with_transposed"], [242, 0, 1, "", "polynomialbaseline"], [298, 5, 1, "", "ps"], [299, 5, 1, "", "ptp"], [300, 5, 1, "", "qsin"], [301, 5, 1, "", "random"], [302, 5, 1, "", "read"], [303, 5, 1, "", "read_carroucell"], [304, 5, 1, "", "read_csv"], [305, 5, 1, "", "read_ddr"], [306, 5, 1, "", "read_dir"], [307, 5, 1, "", "read_hdr"], [308, 5, 1, "", "read_jcamp"], [309, 5, 1, "", "read_labspec"], [310, 5, 1, "", "read_mat"], [311, 5, 1, "", "read_matlab"], [312, 5, 1, "", "read_omnic"], [313, 5, 1, "", "read_opus"], [314, 5, 1, "", "read_quadera"], [315, 5, 1, "", "read_sdr"], [316, 5, 1, "", "read_soc"], [317, 5, 1, "", "read_spa"], [318, 5, 1, "", "read_spc"], [319, 5, 1, "", "read_spg"], [320, 5, 1, "", "read_srs"], [321, 5, 1, "", "read_topspin"], [322, 5, 1, "", "read_wdf"], [323, 5, 1, "", "read_wire"], [324, 5, 1, "", "read_zip"], [325, 4, 1, "", "real"], [326, 5, 1, "", "remove_masks"], [327, 5, 1, "", "roll"], [328, 5, 1, "", "round"], [329, 5, 1, "", "rs"], [330, 5, 1, "", "rubberband"], [331, 5, 1, "", "run_all_scripts"], [332, 5, 1, "", "run_script"], [333, 5, 1, "", "savgol"], [334, 5, 1, "", "savgol_filter"], [335, 5, 1, "", "set_complex"], [336, 5, 1, "", "set_hypercomplex"], [337, 5, 1, "", "set_loglevel"], [338, 5, 1, "", "set_nmr_context"], [339, 5, 1, "", "set_quaternion"], [340, 5, 1, "", "show"], [341, 5, 1, "", "show_versions"], [342, 0, 1, "", "sigmoidmodel"], [343, 5, 1, "", "simps"], [344, 5, 1, "", "simpson"], [345, 5, 1, "", "sine"], [346, 5, 1, "", "sinm"], [347, 5, 1, "", "smooth"], [348, 5, 1, "", "snip"], [349, 5, 1, "", "sort"], [350, 5, 1, "", "sp"], [351, 5, 1, "", "squeeze"], [352, 5, 1, "", "stack"], [353, 5, 1, "", "std"], [354, 5, 1, "", "sum"], [355, 5, 1, "", "swapdims"], [356, 5, 1, "", "take"], [357, 5, 1, "", "to"], [358, 5, 1, "", "to_array"], [359, 5, 1, "", "to_base_units"], [360, 5, 1, "", "to_reduced_units"], [361, 5, 1, "", "to_xarray"], [362, 5, 1, "", "transpose"], [363, 5, 1, "", "trapezoid"], [364, 5, 1, "", "trapz"], [365, 5, 1, "", "triang"], [366, 5, 1, "", "var"], [367, 0, 1, "", "voigtmodel"], [368, 5, 1, "", "warning_"], [369, 5, 1, "", "whittaker"], [370, 5, 1, "", "write"], [371, 5, 1, "", "write_csv"], [372, 5, 1, "", "write_excel"], [373, 5, 1, "", "write_jcamp"], [374, 5, 1, "", "write_mat"], [375, 5, 1, "", "write_matlab"], [376, 5, 1, "", "write_xls"], [377, 5, 1, "", "zeros"], [378, 5, 1, "", "zeros_like"], [379, 5, 1, "", "zf"], [380, 5, 1, "", "zf_auto"], [381, 5, 1, "", "zf_double"], [382, 5, 1, "", "zf_size"]], "spectrochempy.ActionMassKinetics": [[97, 1, 1, "", "A"], [97, 1, 1, "", "B"], [97, 2, 1, "", "fit_to_concentrations"], [97, 1, 1, "", "init_concentrations"], [97, 2, 1, "", "integrate"], [97, 1, 1, "", "n_reactions"], [97, 1, 1, "", "n_species"], [97, 1, 1, "", "species"]], "spectrochempy.Baseline": [[98, 1, 1, "", "X"], [98, 1, 1, "", "asymmetry"], [98, 1, 1, "", "baseline"], [98, 1, 1, "", "breakpoints"], [98, 1, 1, "", "config"], [98, 1, 1, "", "corrected"], [98, 2, 1, "", "fit"], [98, 1, 1, "", "include_limits"], [98, 1, 1, "", "lamb"], [98, 1, 1, "", "lls"], [98, 1, 1, "", "log"], [98, 1, 1, "", "max_iter"], [98, 1, 1, "", "model"], [98, 1, 1, "", "multivariate"], [98, 1, 1, "", "n_components"], [98, 1, 1, "", "name"], [98, 1, 1, "", "order"], [98, 2, 1, "", "parameters"], [98, 2, 1, "", "params"], [98, 2, 1, "", "plot"], [98, 1, 1, "", "ranges"], [98, 2, 1, "", "reset"], [98, 1, 1, "", "snip_width"], [98, 2, 1, "", "to_dict"], [98, 1, 1, "", "tol"], [98, 2, 1, "", "transform"], [98, 1, 1, "", "used_ranges"]], "spectrochempy.BaselineCorrection": [[99, 1, 1, "", "X"], [99, 1, 1, "", "asymmetry"], [99, 1, 1, "", "baseline"], [99, 1, 1, "", "breakpoints"], [99, 1, 1, "", "config"], [99, 1, 1, "", "corrected"], [99, 2, 1, "", "fit"], [99, 1, 1, "", "include_limits"], [99, 1, 1, "", "lamb"], [99, 1, 1, "", "lls"], [99, 1, 1, "", "log"], [99, 1, 1, "", "max_iter"], [99, 1, 1, "", "model"], [99, 1, 1, "", "multivariate"], [99, 1, 1, "", "n_components"], [99, 1, 1, "", "name"], [99, 1, 1, "", "order"], [99, 2, 1, "", "parameters"], [99, 2, 1, "", "params"], [99, 2, 1, "", "plot"], [99, 1, 1, "", "ranges"], [99, 2, 1, "", "reset"], [99, 1, 1, "", "snip_width"], [99, 2, 1, "", "to_dict"], [99, 1, 1, "", "tol"], [99, 2, 1, "", "transform"], [99, 1, 1, "", "used_ranges"]], "spectrochempy.BaselineCorrector": [[100, 1, 1, "", "baseline"], [100, 1, 1, "", "corrected"], [100, 1, 1, "", "original"]], "spectrochempy.Coord": [[101, 2, 1, "", "amax"], [101, 2, 1, "", "amin"], [101, 2, 1, "", "arange"], [101, 2, 1, "", "around"], [101, 2, 1, "", "astype"], [101, 2, 1, "", "copy"], [101, 1, 1, "", "data"], [101, 1, 1, "", "dimensionless"], [101, 1, 1, "", "dtype"], [101, 1, 1, "", "filename"], [101, 2, 1, "", "fromfunction"], [101, 2, 1, "", "fromiter"], [101, 2, 1, "", "geomspace"], [101, 2, 1, "", "get_labels"], [101, 1, 1, "", "has_data"], [101, 1, 1, "", "has_defined_name"], [101, 1, 1, "", "has_units"], [101, 1, 1, "", "id"], [101, 1, 1, "", "is_empty"], [101, 1, 1, "", "is_float"], [101, 1, 1, "", "is_integer"], [101, 1, 1, "", "is_labeled"], [101, 2, 1, "", "is_units_compatible"], [101, 2, 1, "", "ito"], [101, 2, 1, "", "ito_base_units"], [101, 2, 1, "", "ito_reduced_units"], [101, 1, 1, "", "labels"], [101, 1, 1, "", "larmor"], [101, 1, 1, "", "laser_frequency"], [101, 1, 1, "", "limits"], [101, 1, 1, "", "linear"], [101, 2, 1, "", "linearize"], [101, 2, 1, "", "linspace"], [101, 2, 1, "", "loc2index"], [101, 2, 1, "", "logspace"], [101, 1, 1, "", "m"], [101, 1, 1, "", "magnitude"], [101, 2, 1, "", "max"], [101, 1, 1, "", "meta"], [101, 2, 1, "", "min"], [101, 1, 1, "", "name"], [101, 2, 1, "", "ptp"], [101, 1, 1, "", "reversed"], [101, 1, 1, "", "roi"], [101, 2, 1, "", "round"], [101, 2, 1, "", "round_"], [101, 2, 1, "", "set_laser_frequency"], [101, 1, 1, "", "shape"], [101, 1, 1, "", "show_datapoints"], [101, 1, 1, "", "sigdigits"], [101, 1, 1, "", "size"], [101, 1, 1, "", "spacing"], [101, 1, 1, "", "title"], [101, 2, 1, "", "to"], [101, 2, 1, "", "to_base_units"], [101, 2, 1, "", "to_reduced_units"], [101, 1, 1, "", "umasked_data"], [101, 1, 1, "", "unitless"], [101, 1, 1, "", "units"], [101, 1, 1, "", "value"], [101, 1, 1, "", "values"]], "spectrochempy.CoordSet": [[102, 1, 1, "", "available_names"], [102, 1, 1, "", "coords"], [102, 2, 1, "", "copy"], [102, 1, 1, "", "default"], [102, 1, 1, "", "has_defined_name"], [102, 1, 1, "", "id"], [102, 1, 1, "", "is_empty"], [102, 1, 1, "", "is_labeled"], [102, 1, 1, "", "is_same_dim"], [102, 2, 1, "", "keys"], [102, 1, 1, "", "labels"], [102, 1, 1, "", "names"], [102, 2, 1, "", "select"], [102, 2, 1, "", "set"], [102, 2, 1, "", "set_titles"], [102, 2, 1, "", "set_units"], [102, 1, 1, "", "size"], [102, 1, 1, "", "sizes"], [102, 1, 1, "", "titles"], [102, 2, 1, "", "to_dict"], [102, 1, 1, "", "units"], [102, 2, 1, "", "update"]], "spectrochempy.EFA": [[104, 1, 1, "", "X"], [104, 1, 1, "", "Y"], [104, 1, 1, "", "b_ev"], [104, 1, 1, "", "components"], [104, 1, 1, "", "config"], [104, 1, 1, "", "cutoff"], [104, 1, 1, "", "f_ev"], [104, 2, 1, "", "fit"], [104, 2, 1, "", "fit_transform"], [104, 2, 1, "", "get_components"], [104, 2, 1, "", "inverse_transform"], [104, 1, 1, "", "log"], [104, 1, 1, "", "n_components"], [104, 1, 1, "", "name"], [104, 2, 1, "", "parameters"], [104, 2, 1, "", "params"], [104, 2, 1, "", "plotmerit"], [104, 2, 1, "", "reconstruct"], [104, 2, 1, "", "reduce"], [104, 2, 1, "", "reset"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "transform"]], "spectrochempy.FastICA": [[105, 1, 1, "", "A"], [105, 1, 1, "", "St"], [105, 1, 1, "", "X"], [105, 1, 1, "", "Y"], [105, 1, 1, "", "algorithm"], [105, 1, 1, "", "components"], [105, 1, 1, "", "config"], [105, 2, 1, "", "fit"], [105, 2, 1, "", "fit_transform"], [105, 1, 1, "", "fun"], [105, 1, 1, "", "fun_args"], [105, 2, 1, "", "get_components"], [105, 2, 1, "", "inverse_transform"], [105, 1, 1, "", "log"], [105, 1, 1, "", "max_iter"], [105, 1, 1, "", "mean"], [105, 1, 1, "", "mixing"], [105, 1, 1, "", "n_components"], [105, 1, 1, "", "n_iter"], [105, 1, 1, "", "name"], [105, 2, 1, "", "parameters"], [105, 2, 1, "", "params"], [105, 2, 1, "", "plotmerit"], [105, 1, 1, "", "random_state"], [105, 2, 1, "", "reconstruct"], [105, 2, 1, "", "reduce"], [105, 2, 1, "", "reset"], [105, 2, 1, "", "to_dict"], [105, 1, 1, "", "tol"], [105, 2, 1, "", "transform"], [105, 1, 1, "", "w_init"], [105, 1, 1, "", "whiten"], [105, 1, 1, "", "whiten_solver"], [105, 1, 1, "", "whitening"]], "spectrochempy.Filter": [[107, 1, 1, "", "config"], [107, 1, 1, "", "cval"], [107, 1, 1, "", "delta"], [107, 1, 1, "", "deriv"], [107, 1, 1, "", "lamb"], [107, 1, 1, "", "log"], [107, 1, 1, "", "method"], [107, 1, 1, "", "mode"], [107, 1, 1, "", "name"], [107, 1, 1, "", "order"], [107, 2, 1, "", "parameters"], [107, 2, 1, "", "params"], [107, 2, 1, "", "reset"], [107, 1, 1, "", "size"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "transform"]], "spectrochempy.IRIS": [[110, 1, 1, "", "X"], [110, 1, 1, "", "Y"], [110, 1, 1, "", "components"], [110, 1, 1, "", "config"], [110, 2, 1, "", "fit"], [110, 2, 1, "", "fit_transform"], [110, 2, 1, "", "get_components"], [110, 2, 1, "", "inverse_transform"], [110, 1, 1, "", "log"], [110, 1, 1, "", "n_components"], [110, 1, 1, "", "name"], [110, 2, 1, "", "parameters"], [110, 2, 1, "", "params"], [110, 2, 1, "", "plotdistribution"], [110, 2, 1, "", "plotlcurve"], [110, 2, 1, "", "plotmerit"], [110, 1, 1, "", "qpsolver"], [110, 2, 1, "", "reconstruct"], [110, 2, 1, "", "reduce"], [110, 1, 1, "", "reg_par"], [110, 2, 1, "", "reset"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "transform"]], "spectrochempy.LSTSQ": [[112, 1, 1, "", "X"], [112, 1, 1, "", "Y"], [112, 1, 1, "", "coef"], [112, 1, 1, "", "config"], [112, 1, 1, "", "description"], [112, 2, 1, "", "fit"], [112, 1, 1, "", "fit_intercept"], [112, 1, 1, "", "intercept"], [112, 1, 1, "", "log"], [112, 1, 1, "", "name"], [112, 2, 1, "", "parameters"], [112, 2, 1, "", "params"], [112, 1, 1, "", "positive"], [112, 2, 1, "", "predict"], [112, 2, 1, "", "reset"], [112, 2, 1, "", "score"], [112, 2, 1, "", "to_dict"]], "spectrochempy.MCRALS": [[113, 1, 1, "", "C"], [113, 1, 1, "", "C_constrained"], [113, 1, 1, "", "C_constrained_list"], [113, 1, 1, "", "C_ls_list"], [113, 1, 1, "", "S_soft"], [113, 1, 1, "", "St"], [113, 1, 1, "", "St_constrained_list"], [113, 1, 1, "", "St_ls"], [113, 1, 1, "", "St_ls_list"], [113, 1, 1, "", "St_unconstrained"], [113, 1, 1, "", "X"], [113, 1, 1, "", "Y"], [113, 1, 1, "", "argsGetConc"], [113, 1, 1, "", "argsGetSpec"], [113, 1, 1, "", "closureConc"], [113, 1, 1, "", "closureMethod"], [113, 1, 1, "", "closureTarget"], [113, 1, 1, "", "components"], [113, 1, 1, "", "config"], [113, 1, 1, "", "extraOutputGetConc"], [113, 1, 1, "", "extraOutputGetSpec"], [113, 2, 1, "", "fit"], [113, 2, 1, "", "fit_transform"], [113, 1, 1, "", "getC_to_C_idx"], [113, 1, 1, "", "getConc"], [113, 1, 1, "", "getSpec"], [113, 1, 1, "", "getSt_to_St_idx"], [113, 2, 1, "", "get_components"], [113, 1, 1, "", "hardConc"], [113, 1, 1, "", "hardSpec"], [113, 2, 1, "", "inverse_transform"], [113, 1, 1, "", "kwargsGetConc"], [113, 1, 1, "", "kwargsGetSpec"], [113, 1, 1, "", "log"], [113, 1, 1, "", "max_iter"], [113, 1, 1, "", "maxdiv"], [113, 1, 1, "", "monoDecConc"], [113, 1, 1, "", "monoDecTol"], [113, 1, 1, "", "monoIncConc"], [113, 1, 1, "", "monoIncTol"], [113, 1, 1, "", "n_components"], [113, 1, 1, "", "name"], [113, 1, 1, "", "nonnegConc"], [113, 1, 1, "", "nonnegSpec"], [113, 1, 1, "", "normSpec"], [113, 2, 1, "", "parameters"], [113, 2, 1, "", "params"], [113, 2, 1, "", "plotmerit"], [113, 2, 1, "", "reconstruct"], [113, 2, 1, "", "reduce"], [113, 2, 1, "", "reset"], [113, 1, 1, "", "solverConc"], [113, 1, 1, "", "solverSpec"], [113, 1, 1, "", "storeIterations"], [113, 2, 1, "", "to_dict"], [113, 1, 1, "", "tol"], [113, 2, 1, "", "transform"], [113, 1, 1, "", "unimodConc"], [113, 1, 1, "", "unimodConcMod"], [113, 1, 1, "", "unimodConcTol"], [113, 1, 1, "", "unimodSpec"], [113, 1, 1, "", "unimodSpecMod"], [113, 1, 1, "", "unimodSpecTol"]], "spectrochempy.NDDataset": [[114, 1, 1, "", "II"], [114, 1, 1, "", "IR"], [114, 1, 1, "", "RI"], [114, 1, 1, "", "RR"], [114, 1, 1, "", "T"], [114, 2, 1, "", "abs"], [114, 2, 1, "", "absolute"], [114, 1, 1, "", "acquisition_date"], [114, 2, 1, "", "add_coordset"], [114, 2, 1, "", "align"], [114, 2, 1, "", "all"], [114, 2, 1, "", "amax"], [114, 2, 1, "", "amin"], [114, 2, 1, "", "any"], [114, 2, 1, "", "arange"], [114, 2, 1, "", "argmax"], [114, 2, 1, "", "argmin"], [114, 2, 1, "", "around"], [114, 2, 1, "", "asfortranarray"], [114, 2, 1, "", "asls"], [114, 2, 1, "", "astype"], [114, 2, 1, "", "atleast_2d"], [114, 1, 1, "", "author"], [114, 2, 1, "", "autosub"], [114, 2, 1, "", "average"], [114, 1, 1, "", "ax"], [114, 1, 1, "", "axT"], [114, 1, 1, "", "axec"], [114, 1, 1, "", "axecT"], [114, 1, 1, "", "axex"], [114, 1, 1, "", "axey"], [114, 2, 1, "", "bartlett"], [114, 2, 1, "", "basc"], [114, 2, 1, "", "blackmanharris"], [114, 2, 1, "", "clip"], [114, 2, 1, "", "close_figure"], [114, 1, 1, "", "comment"], [114, 2, 1, "", "component"], [114, 2, 1, "", "concatenate"], [114, 2, 1, "", "conj"], [114, 2, 1, "", "conjugate"], [114, 2, 1, "", "coord"], [114, 2, 1, "", "coordmax"], [114, 2, 1, "", "coordmin"], [114, 1, 1, "", "coordnames"], [114, 1, 1, "", "coordset"], [114, 1, 1, "", "coordtitles"], [114, 1, 1, "", "coordunits"], [114, 2, 1, "", "copy"], [114, 1, 1, "", "created"], [114, 2, 1, "", "cs"], [114, 2, 1, "", "cumsum"], [114, 1, 1, "", "data"], [114, 2, 1, "", "dc"], [114, 2, 1, "", "delete_coordset"], [114, 2, 1, "", "denoise"], [114, 1, 1, "", "description"], [114, 2, 1, "", "despike"], [114, 2, 1, "", "detrend"], [114, 2, 1, "", "diag"], [114, 2, 1, "", "diagonal"], [114, 1, 1, "", "dimensionless"], [114, 1, 1, "", "dims"], [114, 1, 1, "", "directory"], [114, 1, 1, "", "divider"], [114, 2, 1, "", "dot"], [114, 2, 1, "", "download_nist_ir"], [114, 1, 1, "", "dtype"], [114, 2, 1, "", "dump"], [114, 2, 1, "", "em"], [114, 2, 1, "", "empty"], [114, 2, 1, "", "empty_like"], [114, 2, 1, "", "eye"], [114, 2, 1, "", "fft"], [114, 1, 1, "", "fig"], [114, 1, 1, "", "fignum"], [114, 1, 1, "", "filename"], [114, 1, 1, "", "filetype"], [114, 2, 1, "", "find_peaks"], [114, 2, 1, "", "fromfunction"], [114, 2, 1, "", "fromiter"], [114, 2, 1, "", "fsh"], [114, 2, 1, "", "fsh2"], [114, 2, 1, "", "full"], [114, 2, 1, "", "full_like"], [114, 2, 1, "", "general_hamming"], [114, 2, 1, "", "geomspace"], [114, 2, 1, "", "get_axis"], [114, 2, 1, "", "get_baseline"], [114, 2, 1, "", "get_labels"], [114, 2, 1, "", "gm"], [114, 2, 1, "", "hamming"], [114, 2, 1, "", "hann"], [114, 1, 1, "", "has_complex_dims"], [114, 1, 1, "", "has_data"], [114, 1, 1, "", "has_defined_name"], [114, 1, 1, "", "has_units"], [114, 1, 1, "", "history"], [114, 2, 1, "", "ht"], [114, 1, 1, "", "id"], [114, 2, 1, "", "identity"], [114, 2, 1, "", "ifft"], [114, 1, 1, "", "imag"], [114, 1, 1, "", "is_1d"], [114, 1, 1, "", "is_complex"], [114, 1, 1, "", "is_empty"], [114, 1, 1, "", "is_float"], [114, 1, 1, "", "is_integer"], [114, 1, 1, "", "is_interleaved"], [114, 1, 1, "", "is_labeled"], [114, 1, 1, "", "is_masked"], [114, 1, 1, "", "is_quaternion"], [114, 2, 1, "", "is_units_compatible"], [114, 2, 1, "", "ito"], [114, 2, 1, "", "ito_base_units"], [114, 2, 1, "", "ito_reduced_units"], [114, 1, 1, "", "labels"], [114, 1, 1, "", "limits"], [114, 2, 1, "", "linspace"], [114, 2, 1, "", "load"], [114, 2, 1, "", "load_iris"], [114, 1, 1, "", "local_timezone"], [114, 2, 1, "", "logspace"], [114, 2, 1, "", "ls"], [114, 1, 1, "", "m"], [114, 1, 1, "", "magnitude"], [114, 1, 1, "", "mask"], [114, 1, 1, "", "masked_data"], [114, 2, 1, "", "max"], [114, 2, 1, "", "mc"], [114, 2, 1, "", "mean"], [114, 1, 1, "", "meta"], [114, 2, 1, "", "min"], [114, 1, 1, "", "modeldata"], [114, 1, 1, "", "modified"], [114, 1, 1, "", "name"], [114, 1, 1, "", "ndaxes"], [114, 1, 1, "", "ndim"], [114, 2, 1, "", "ones"], [114, 2, 1, "", "ones_like"], [114, 1, 1, "", "origin"], [114, 1, 1, "", "parent"], [114, 2, 1, "", "pipe"], [114, 2, 1, "", "pk"], [114, 2, 1, "", "pk_exp"], [114, 2, 1, "", "plot"], [114, 2, 1, "", "plot_1D"], [114, 2, 1, "", "plot_2D"], [114, 2, 1, "", "plot_3D"], [114, 2, 1, "", "plot_bar"], [114, 2, 1, "", "plot_image"], [114, 2, 1, "", "plot_map"], [114, 2, 1, "", "plot_multiple"], [114, 2, 1, "", "plot_pen"], [114, 2, 1, "", "plot_scatter"], [114, 2, 1, "", "plot_scatter_pen"], [114, 2, 1, "", "plot_stack"], [114, 2, 1, "", "plot_surface"], [114, 2, 1, "", "plot_waterfall"], [114, 1, 1, "", "preferences"], [114, 2, 1, "", "ps"], [114, 2, 1, "", "ptp"], [114, 2, 1, "", "qsin"], [114, 2, 1, "", "random"], [114, 2, 1, "", "read"], [114, 2, 1, "", "read_carroucell"], [114, 2, 1, "", "read_csv"], [114, 2, 1, "", "read_ddr"], [114, 2, 1, "", "read_dir"], [114, 2, 1, "", "read_hdr"], [114, 2, 1, "", "read_jcamp"], [114, 2, 1, "", "read_labspec"], [114, 2, 1, "", "read_mat"], [114, 2, 1, "", "read_matlab"], [114, 2, 1, "", "read_omnic"], [114, 2, 1, "", "read_opus"], [114, 2, 1, "", "read_quadera"], [114, 2, 1, "", "read_sdr"], [114, 2, 1, "", "read_soc"], [114, 2, 1, "", "read_spa"], [114, 2, 1, "", "read_spc"], [114, 2, 1, "", "read_spg"], [114, 2, 1, "", "read_srs"], [114, 2, 1, "", "read_topspin"], [114, 2, 1, "", "read_wdf"], [114, 2, 1, "", "read_wire"], [114, 2, 1, "", "read_zip"], [114, 1, 1, "", "real"], [114, 2, 1, "", "remove_masks"], [114, 1, 1, "", "roi"], [114, 2, 1, "", "roll"], [114, 2, 1, "", "round"], [114, 2, 1, "", "round_"], [114, 2, 1, "", "rs"], [114, 2, 1, "", "rubberband"], [114, 2, 1, "", "save"], [114, 2, 1, "", "save_as"], [114, 2, 1, "", "savgol"], [114, 2, 1, "", "savgol_filter"], [114, 2, 1, "", "set_complex"], [114, 2, 1, "", "set_coordset"], [114, 2, 1, "", "set_coordtitles"], [114, 2, 1, "", "set_coordunits"], [114, 2, 1, "", "set_hypercomplex"], [114, 2, 1, "", "set_quaternion"], [114, 1, 1, "", "shape"], [114, 2, 1, "", "simps"], [114, 2, 1, "", "simpson"], [114, 2, 1, "", "sine"], [114, 2, 1, "", "sinm"], [114, 1, 1, "", "size"], [114, 2, 1, "", "smooth"], [114, 2, 1, "", "snip"], [114, 2, 1, "", "sort"], [114, 2, 1, "", "sp"], [114, 2, 1, "", "squeeze"], [114, 2, 1, "", "stack"], [114, 2, 1, "", "std"], [114, 1, 1, "", "suffix"], [114, 2, 1, "", "sum"], [114, 2, 1, "", "swapaxes"], [114, 2, 1, "", "swapdims"], [114, 2, 1, "", "take"], [114, 1, 1, "", "timezone"], [114, 1, 1, "", "title"], [114, 2, 1, "", "to"], [114, 2, 1, "", "to_array"], [114, 2, 1, "", "to_base_units"], [114, 2, 1, "", "to_reduced_units"], [114, 2, 1, "", "to_xarray"], [114, 2, 1, "", "transpose"], [114, 2, 1, "", "trapezoid"], [114, 2, 1, "", "trapz"], [114, 2, 1, "", "triang"], [114, 1, 1, "", "umasked_data"], [114, 1, 1, "", "unitless"], [114, 1, 1, "", "units"], [114, 1, 1, "", "value"], [114, 1, 1, "", "values"], [114, 2, 1, "", "var"], [114, 2, 1, "", "whittaker"], [114, 2, 1, "", "write"], [114, 2, 1, "", "write_csv"], [114, 2, 1, "", "write_excel"], [114, 2, 1, "", "write_jcamp"], [114, 2, 1, "", "write_mat"], [114, 2, 1, "", "write_matlab"], [114, 2, 1, "", "write_xls"], [114, 2, 1, "", "zeros"], [114, 2, 1, "", "zeros_like"], [114, 2, 1, "", "zf"], [114, 2, 1, "", "zf_auto"], [114, 2, 1, "", "zf_double"], [114, 2, 1, "", "zf_size"]], "spectrochempy.NMF": [[117, 1, 1, "", "X"], [117, 1, 1, "", "Y"], [117, 1, 1, "", "alpha_H"], [117, 1, 1, "", "alpha_W"], [117, 1, 1, "", "beta_loss"], [117, 1, 1, "", "components"], [117, 1, 1, "", "config"], [117, 2, 1, "", "fit"], [117, 2, 1, "", "fit_transform"], [117, 2, 1, "", "get_components"], [117, 1, 1, "", "init"], [117, 2, 1, "", "inverse_transform"], [117, 1, 1, "", "l1_ratio"], [117, 1, 1, "", "log"], [117, 1, 1, "", "max_iter"], [117, 1, 1, "", "n_components"], [117, 1, 1, "", "name"], [117, 2, 1, "", "parameters"], [117, 2, 1, "", "params"], [117, 2, 1, "", "plotmerit"], [117, 1, 1, "", "random_state"], [117, 2, 1, "", "reconstruct"], [117, 2, 1, "", "reduce"], [117, 2, 1, "", "reset"], [117, 1, 1, "", "shuffle"], [117, 1, 1, "", "solver"], [117, 2, 1, "", "to_dict"], [117, 1, 1, "", "tol"], [117, 2, 1, "", "transform"]], "spectrochempy.NNLS": [[118, 1, 1, "", "X"], [118, 1, 1, "", "Y"], [118, 1, 1, "", "coef"], [118, 1, 1, "", "config"], [118, 1, 1, "", "description"], [118, 2, 1, "", "fit"], [118, 1, 1, "", "fit_intercept"], [118, 1, 1, "", "intercept"], [118, 1, 1, "", "log"], [118, 1, 1, "", "name"], [118, 2, 1, "", "parameters"], [118, 2, 1, "", "params"], [118, 1, 1, "", "positive"], [118, 2, 1, "", "predict"], [118, 2, 1, "", "reset"], [118, 2, 1, "", "score"], [118, 2, 1, "", "to_dict"]], "spectrochempy.Optimize": [[119, 1, 1, "", "X"], [119, 1, 1, "", "Y"], [119, 1, 1, "", "amplitude_mode"], [119, 1, 1, "", "autoampl"], [119, 1, 1, "", "autobase"], [119, 1, 1, "", "callback_every"], [119, 1, 1, "", "components"], [119, 1, 1, "", "config"], [119, 1, 1, "", "constraints"], [119, 1, 1, "", "dry"], [119, 2, 1, "", "fit"], [119, 2, 1, "", "fit_transform"], [119, 1, 1, "", "fp"], [119, 2, 1, "", "get_components"], [119, 2, 1, "", "inverse_transform"], [119, 1, 1, "", "log"], [119, 1, 1, "", "max_fun_calls"], [119, 1, 1, "", "max_iter"], [119, 1, 1, "", "method"], [119, 1, 1, "", "modeldata"], [119, 1, 1, "", "n_components"], [119, 1, 1, "", "name"], [119, 2, 1, "", "parameters"], [119, 2, 1, "", "params"], [119, 2, 1, "", "plotmerit"], [119, 2, 1, "", "predict"], [119, 2, 1, "", "reconstruct"], [119, 2, 1, "", "reduce"], [119, 2, 1, "", "reset"], [119, 1, 1, "", "script"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "transform"], [119, 1, 1, "", "usermodels"]], "spectrochempy.PCA": [[120, 1, 1, "", "X"], [120, 1, 1, "", "Y"], [120, 1, 1, "", "components"], [120, 1, 1, "", "config"], [120, 2, 1, "", "fit"], [120, 2, 1, "", "fit_transform"], [120, 2, 1, "", "get_components"], [120, 2, 1, "", "inverse_transform"], [120, 1, 1, "", "iterated_power"], [120, 1, 1, "", "loadings"], [120, 1, 1, "", "log"], [120, 1, 1, "", "n_components"], [120, 1, 1, "", "n_oversamples"], [120, 1, 1, "", "name"], [120, 2, 1, "", "parameters"], [120, 2, 1, "", "params"], [120, 2, 1, "", "plotmerit"], [120, 1, 1, "", "power_iteration_normalizer"], [120, 2, 1, "", "printev"], [120, 1, 1, "", "random_state"], [120, 2, 1, "", "reconstruct"], [120, 2, 1, "", "reduce"], [120, 2, 1, "", "reset"], [120, 1, 1, "", "scaled"], [120, 2, 1, "", "scoreplot"], [120, 1, 1, "", "scores"], [120, 2, 1, "", "screeplot"], [120, 1, 1, "", "standardized"], [120, 1, 1, "", "svd_solver"], [120, 2, 1, "", "to_dict"], [120, 1, 1, "", "tol"], [120, 2, 1, "", "transform"], [120, 1, 1, "", "whiten"]], "spectrochempy.PFR": [[121, 2, 1, "", "fit_to_gas_concentrations"]], "spectrochempy.PLSRegression": [[122, 1, 1, "", "X"], [122, 1, 1, "", "Y"], [122, 1, 1, "", "components"], [122, 1, 1, "", "config"], [122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_transform"], [122, 2, 1, "", "get_components"], [122, 2, 1, "", "inverse_transform"], [122, 1, 1, "", "log"], [122, 1, 1, "", "max_iter"], [122, 1, 1, "", "n_components"], [122, 1, 1, "", "name"], [122, 2, 1, "", "parameters"], [122, 2, 1, "", "params"], [122, 2, 1, "", "parityplot"], [122, 2, 1, "", "plotmerit"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "reconstruct"], [122, 2, 1, "", "reduce"], [122, 2, 1, "", "reset"], [122, 1, 1, "", "scale"], [122, 2, 1, "", "score"], [122, 2, 1, "", "to_dict"], [122, 1, 1, "", "tol"], [122, 2, 1, "", "transform"]], "spectrochempy.Project": [[123, 2, 1, "", "add_dataset"], [123, 2, 1, "", "add_datasets"], [123, 2, 1, "", "add_project"], [123, 2, 1, "", "add_projects"], [123, 2, 1, "", "add_script"], [123, 2, 1, "", "add_scripts"], [123, 1, 1, "", "allitems"], [123, 1, 1, "", "allnames"], [123, 2, 1, "", "copy"], [123, 1, 1, "", "datasets"], [123, 1, 1, "", "datasets_names"], [123, 2, 1, "", "dump"], [123, 1, 1, "", "filename"], [123, 1, 1, "", "filetype"], [123, 1, 1, "", "id"], [123, 2, 1, "", "load"], [123, 1, 1, "", "meta"], [123, 1, 1, "", "name"], [123, 1, 1, "", "parent"], [123, 1, 1, "", "projects"], [123, 1, 1, "", "projects_names"], [123, 2, 1, "", "remove_all_dataset"], [123, 2, 1, "", "remove_all_project"], [123, 2, 1, "", "remove_dataset"], [123, 2, 1, "", "remove_project"], [123, 2, 1, "", "save"], [123, 2, 1, "", "save_as"], [123, 1, 1, "", "scripts"], [123, 1, 1, "", "scripts_names"], [123, 1, 1, "", "suffix"]], "spectrochempy.Quantity": [[124, 2, 1, "", "check"], [124, 2, 1, "", "compute"], [124, 1, 1, "", "default_format"], [124, 1, 1, "", "dimensionality"], [124, 1, 1, "", "dimensionless"], [124, 2, 1, "", "dot"], [124, 2, 1, "", "from_list"], [124, 2, 1, "", "from_sequence"], [124, 2, 1, "", "is_compatible_with"], [124, 2, 1, "", "ito"], [124, 2, 1, "", "ito_base_units"], [124, 2, 1, "", "ito_preferred"], [124, 2, 1, "", "ito_reduced_units"], [124, 2, 1, "", "ito_root_units"], [124, 1, 1, "", "m"], [124, 2, 1, "", "m_as"], [124, 1, 1, "", "magnitude"], [124, 2, 1, "", "persist"], [124, 2, 1, "", "prod"], [124, 2, 1, "", "to"], [124, 2, 1, "", "to_base_units"], [124, 2, 1, "", "to_compact"], [124, 2, 1, "", "to_preferred"], [124, 2, 1, "", "to_reduced_units"], [124, 2, 1, "", "to_root_units"], [124, 1, 1, "", "u"], [124, 2, 1, "", "unit_items"], [124, 1, 1, "", "unitless"], [124, 1, 1, "", "units"], [124, 2, 1, "", "visualize"]], "spectrochempy.SIMPLISMA": [[127, 1, 1, "", "C"], [127, 1, 1, "", "Pt"], [127, 1, 1, "", "St"], [127, 1, 1, "", "X"], [127, 1, 1, "", "Y"], [127, 1, 1, "", "components"], [127, 1, 1, "", "config"], [127, 2, 1, "", "fit"], [127, 2, 1, "", "fit_transform"], [127, 2, 1, "", "get_components"], [127, 1, 1, "", "interactive"], [127, 2, 1, "", "inverse_transform"], [127, 1, 1, "", "log"], [127, 1, 1, "", "n_components"], [127, 1, 1, "", "name"], [127, 1, 1, "", "noise"], [127, 2, 1, "", "parameters"], [127, 2, 1, "", "params"], [127, 2, 1, "", "plotmerit"], [127, 2, 1, "", "reconstruct"], [127, 2, 1, "", "reduce"], [127, 2, 1, "", "reset"], [127, 1, 1, "", "s"], [127, 2, 1, "", "to_dict"], [127, 1, 1, "", "tol"], [127, 2, 1, "", "transform"]], "spectrochempy.SVD": [[128, 1, 1, "", "U"], [128, 1, 1, "", "VT"], [128, 1, 1, "", "X"], [128, 1, 1, "", "Y"], [128, 1, 1, "", "components"], [128, 1, 1, "", "compute_uv"], [128, 1, 1, "", "config"], [128, 1, 1, "", "cumulative_explained_variance"], [128, 1, 1, "", "ev"], [128, 1, 1, "", "ev_cum"], [128, 1, 1, "", "ev_ratio"], [128, 1, 1, "", "explained_variance"], [128, 1, 1, "", "explained_variance_ratio"], [128, 2, 1, "", "fit"], [128, 2, 1, "", "fit_transform"], [128, 1, 1, "", "full_matrices"], [128, 2, 1, "", "get_components"], [128, 2, 1, "", "inverse_transform"], [128, 1, 1, "", "log"], [128, 1, 1, "", "n_components"], [128, 1, 1, "", "name"], [128, 2, 1, "", "parameters"], [128, 2, 1, "", "params"], [128, 2, 1, "", "plotmerit"], [128, 2, 1, "", "reconstruct"], [128, 2, 1, "", "reduce"], [128, 2, 1, "", "reset"], [128, 1, 1, "", "s"], [128, 1, 1, "", "singular_values"], [128, 1, 1, "", "sv"], [128, 2, 1, "", "to_dict"], [128, 2, 1, "", "transform"]], "spectrochempy.Unit": [[130, 1, 1, "", "default_format"], [130, 1, 1, "", "dimensionality"], [130, 1, 1, "", "dimensionless"], [130, 2, 1, "", "from_"], [130, 2, 1, "", "is_compatible_with"], [130, 2, 1, "", "m_from"]], "spectrochempy.asymmetricvoigtmodel": [[145, 1, 1, "", "args"], [145, 1, 1, "", "script"], [145, 1, 1, "", "type"]], "spectrochempy.gaussianmodel": [[183, 1, 1, "", "args"], [183, 1, 1, "", "script"], [183, 1, 1, "", "type"]], "spectrochempy.ipython.magics": [[197, 0, 1, "", "SpectroChemPyMagics"]], "spectrochempy.ipython.magics.SpectroChemPyMagics": [[197, 2, 1, "", "addscript"], [197, 2, 1, "", "arg_err"], [197, 1, 1, "", "config"], [197, 2, 1, "", "default_option"], [197, 2, 1, "", "format_latex"], [197, 1, 1, "", "magics"], [197, 2, 1, "", "parse_options"], [197, 1, 1, "", "registered"]], "spectrochempy.lorentzianmodel": [[208, 1, 1, "", "args"], [208, 1, 1, "", "script"], [208, 1, 1, "", "type"]], "spectrochempy.polynomialbaseline": [[242, 1, 1, "", "args"], [242, 1, 1, "", "script"], [242, 1, 1, "", "type"]], "spectrochempy.processing.alignement.align": [[243, 5, 1, "", "align"]], "spectrochempy.processing.baselineprocessing.baseline": [[244, 0, 1, "", "Baseline"], [245, 5, 1, "", "asls"], [246, 5, 1, "", "basc"], [247, 5, 1, "", "detrend"], [248, 5, 1, "", "get_baseline"], [249, 5, 1, "", "lls"], [250, 5, 1, "", "lls_inv"], [251, 5, 1, "", "rubberband"], [252, 5, 1, "", "snip"]], "spectrochempy.processing.baselineprocessing.baseline.Baseline": [[244, 1, 1, "", "X"], [244, 1, 1, "", "asymmetry"], [244, 1, 1, "", "baseline"], [244, 1, 1, "", "breakpoints"], [244, 1, 1, "", "config"], [244, 1, 1, "", "corrected"], [244, 2, 1, "", "fit"], [244, 1, 1, "", "include_limits"], [244, 1, 1, "", "lamb"], [244, 1, 1, "", "lls"], [244, 1, 1, "", "log"], [244, 1, 1, "", "max_iter"], [244, 1, 1, "", "model"], [244, 1, 1, "", "multivariate"], [244, 1, 1, "", "n_components"], [244, 1, 1, "", "name"], [244, 1, 1, "", "order"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "params"], [244, 2, 1, "", "plot"], [244, 1, 1, "", "ranges"], [244, 2, 1, "", "reset"], [244, 1, 1, "", "snip_width"], [244, 2, 1, "", "to_dict"], [244, 1, 1, "", "tol"], [244, 2, 1, "", "transform"], [244, 1, 1, "", "used_ranges"]], "spectrochempy.processing.baselineprocessing.baseline_deprecated": [[253, 0, 1, "", "BaselineCorrection"], [254, 5, 1, "", "ab"], [255, 5, 1, "", "abc"]], "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection": [[253, 1, 1, "", "X"], [253, 1, 1, "", "asymmetry"], [253, 1, 1, "", "baseline"], [253, 1, 1, "", "breakpoints"], [253, 1, 1, "", "config"], [253, 1, 1, "", "corrected"], [253, 2, 1, "", "fit"], [253, 1, 1, "", "include_limits"], [253, 1, 1, "", "lamb"], [253, 1, 1, "", "lls"], [253, 1, 1, "", "log"], [253, 1, 1, "", "max_iter"], [253, 1, 1, "", "model"], [253, 1, 1, "", "multivariate"], [253, 1, 1, "", "n_components"], [253, 1, 1, "", "name"], [253, 1, 1, "", "order"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "params"], [253, 2, 1, "", "plot"], [253, 1, 1, "", "ranges"], [253, 2, 1, "", "reset"], [253, 1, 1, "", "snip_width"], [253, 2, 1, "", "to_dict"], [253, 1, 1, "", "tol"], [253, 2, 1, "", "transform"], [253, 1, 1, "", "used_ranges"]], "spectrochempy.processing.fft.apodization": [[256, 5, 1, "", "bartlett"], [257, 5, 1, "", "blackmanharris"], [258, 5, 1, "", "em"], [259, 5, 1, "", "general_hamming"], [260, 5, 1, "", "gm"], [261, 5, 1, "", "hamming"], [262, 5, 1, "", "hann"], [263, 5, 1, "", "qsin"], [264, 5, 1, "", "sine"], [265, 5, 1, "", "sinm"], [266, 5, 1, "", "sp"], [267, 5, 1, "", "triang"]], "spectrochempy.processing.fft.fft": [[268, 5, 1, "", "fft"], [269, 5, 1, "", "ht"], [270, 5, 1, "", "ifft"], [271, 5, 1, "", "mc"], [272, 5, 1, "", "ps"]], "spectrochempy.processing.fft.phasing": [[273, 5, 1, "", "pk"], [274, 5, 1, "", "pk_exp"]], "spectrochempy.processing.fft.shift": [[275, 5, 1, "", "cs"], [276, 5, 1, "", "dc"], [277, 5, 1, "", "fsh"], [278, 5, 1, "", "fsh2"], [279, 5, 1, "", "ls"], [280, 5, 1, "", "roll"], [281, 5, 1, "", "rs"]], "spectrochempy.processing.fft.zero_filling": [[282, 5, 1, "", "zf"], [283, 5, 1, "", "zf_auto"], [284, 5, 1, "", "zf_double"], [285, 5, 1, "", "zf_size"]], "spectrochempy.processing.filter.denoise": [[286, 5, 1, "", "denoise"], [287, 5, 1, "", "despike"]], "spectrochempy.processing.filter.filter": [[288, 0, 1, "", "Filter"], [289, 5, 1, "", "savgol"], [290, 5, 1, "", "savgol_filter"], [291, 5, 1, "", "smooth"], [292, 5, 1, "", "whittaker"]], "spectrochempy.processing.filter.filter.Filter": [[288, 1, 1, "", "config"], [288, 1, 1, "", "cval"], [288, 1, 1, "", "delta"], [288, 1, 1, "", "deriv"], [288, 1, 1, "", "lamb"], [288, 1, 1, "", "log"], [288, 1, 1, "", "method"], [288, 1, 1, "", "mode"], [288, 1, 1, "", "name"], [288, 1, 1, "", "order"], [288, 2, 1, "", "parameters"], [288, 2, 1, "", "params"], [288, 2, 1, "", "reset"], [288, 1, 1, "", "size"], [288, 2, 1, "", "to_dict"], [288, 2, 1, "", "transform"]], "spectrochempy.processing.interpolation.interpolate": [[293, 5, 1, "", "interpolate"]], "spectrochempy.processing.transformation.autosub": [[294, 5, 1, "", "autosub"]], "spectrochempy.processing.transformation.concatenate": [[295, 5, 1, "", "concatenate"], [296, 5, 1, "", "stack"]], "spectrochempy.processing.transformation.npy": [[297, 5, 1, "", "dot"]], "spectrochempy.sigmoidmodel": [[342, 1, 1, "", "args"], [342, 1, 1, "", "script"], [342, 1, 1, "", "type"]], "spectrochempy.voigtmodel": [[367, 1, 1, "", "args"], [367, 1, 1, "", "script"], [367, 1, 1, "", "type"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:exception", "4": "py:data", "5": "py:function"}, "terms": {"": [2, 5, 6, 9, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104, 105, 110, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 140, 146, 153, 167, 169, 171, 176, 197, 201, 205, 222, 223, 244, 253, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 343, 344, 357, 360, 363, 364, 378, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418], "0": [0, 2, 5, 7, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 87, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 127, 128, 129, 131, 132, 140, 143, 144, 145, 146, 147, 151, 153, 154, 155, 159, 165, 166, 167, 168, 170, 174, 176, 177, 178, 181, 182, 183, 184, 188, 189, 190, 192, 196, 198, 207, 208, 209, 214, 225, 226, 229, 230, 232, 233, 234, 238, 239, 240, 242, 244, 245, 247, 253, 254, 255, 258, 259, 260, 261, 262, 266, 273, 274, 275, 279, 280, 281, 288, 289, 291, 292, 293, 294, 295, 297, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 333, 342, 347, 350, 353, 366, 367, 369, 371, 377, 378, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417], "00": [20, 22, 24, 25, 27, 30, 33, 34, 36, 37, 39, 42, 44, 46, 52, 56, 59, 61, 65, 69, 72, 75, 76, 77, 78, 81, 82, 91, 95, 386, 390, 391, 393, 397, 400, 402, 404, 407, 409, 411, 413, 416], "000": [24, 39, 61, 82, 338], "0000": [32, 48, 114, 302, 313, 389, 397], "000000": 22, "0001": [48, 101, 105, 114, 117, 140, 302, 313, 397], "000116": [397, 413], "00011600926518440247": 397, "00012439075792814987": [], "0001243907579281539": [], "00012439075792815426": 23, "00012439075792815542": [], "0001243907579281617": [], "0001243907579281627": [], "00012439075792816708": [], "00012439075792816713": [], "00012439075792819164": [], "00012439075792819896": [], "0001341": 390, "0001386702060699463": 397, "0001387": [397, 413], "00015827733519295384": [], "00015827733519296127": [], "0001582773351929673": [], "00015827733519296793": [], "0001582773351929691": [], "00015827733519297276": [], "00015827733519297677": 23, "00015827733519297818": [], "00015827733519299138": [], "0001582773351929956": [], "0001980997622013092": 397, "0001981": [397, 413], "0001982580479040552": [], "00019825804790407232": [], "00019825804790407392": [], "00019825804790407753": [], "00019825804790408157": [], "0001982580479040842": [], "00019825804790408848": 23, "00019825804790408886": [], "0001982580479040904": [], "00019825804790409352": [], "0002": [48, 114, 302, 313, 397], "00020397296743805037": 36, "0002463663859383999": [], "00024636638593841185": [], "0002463663859384121": [], "00024636638593841467": 23, "00024636638593841554": [], "0002463663859384177": [], "0002463663859384261": [], "00024636638593842643": [], "00024636638593844": [], "00024636638593844476": [], "0002631": [390, 391], "0003": 48, "000302683562040329": 397, "0003027": [397, 413], "00030325790844269496": [], "0003032579084427006": [], "00030325790844271073": [], "00030325790844271583": [], "00030325790844271794": 23, "0003032579084427291": [], "00030325790844273046": [], "00030325790844274": [], "00030325790844274814": [], "0003032579084427613": [], "0003036": 407, "0003089": [397, 413], "0003089122474193573": 397, "0003178": [390, 391], "0003702011951281": 95, "000370203321558236": 95, "0003702884428734": [95, 397], "0003744959831237793": 397, "0003745": [397, 413], "0003748723547989551": [], "00037487235479895985": [], "0003748723547989646": [], "0003748723547989671": [], "0003748723547989713": 23, "00037487235479898126": [], "0003748723547989885": [], "0003748723547989902": [], "00037487235479899075": [], "0003748723547990129": [], "00040794593487610074": 36, "000427": 390, "000428": 390, "000429": 390, "000433": [21, 390], "000442": [21, 390], "00046362862409549794": [], "0004636286240955004": [], "0004636286240955109": [], "0004636286240955179": [], "00046362862409554353": 23, "0004636286240955471": [], "00046362862409555757": [], "00046362862409556017": [], "0004636286240955662": [], "00046362862409559687": [], "00047": 95, "0004896376456529806": [], "0004896376456529827": [], "0004896376456530841": 23, "0004896376456531028": [], "0004896376456531178": [], "000489637645653118": [], "0004896376456532604": [], "0004896376456533191": [], "0004896376456533342": [], "0004896376456533487": [], "0004904596528536915": [], "0004904596528537712": [], "0004904596528539773": [], "0004904596528540622": [], "0004904596528540816": [], "0004904596528540838": 23, "0004904596528541105": [], "0004904596528541144": [], "0004904596528541972": [], "0004904596528541988": [], "0004912871202791843": 23, "0004912871202792401": [], "000491287120279264": [], "0004912871202793098": [], "000491287120279383": [], "0004912871202794409": [], "0004912871202795143": [], "0004912871202795413": [], "0004912871202795722": [], "000491287120279596": [], "000492122635584242": [], "0004921226355842523": [], "0004921226355843696": [], "0004921226355844416": [], "0004921226355845438": 23, "0004921226355845768": [], "000492122635584597": [], "0004921226355846214": [], "0004921226355847096": [], "0004921226355847311": [], "0004929673596843514": [], "0004929673596843791": [], "0004929673596844996": [], "0004929673596845099": 23, "0004929673596845315": [], "0004929673596845355": [], "0004929673596845652": [], "0004929673596846566": [], "0004929673596846598": [], "0004929673596848342": [], "0004938210437302525": 23, "0004938210437302877": [], "0004938210437303371": [], "000493821043730449": [], "0004938210437304585": [], "0004938210437305127": [], "000493821043730555": [], "0004938210437305764": [], "0004938210437305875": [], "0004938210437307453": [], "0004946901218456832": [], "0004946901218457896": [], "0004946901218458406": [], "0004946901218458601": [], "0004946901218458836": [], "0004946901218458897": 23, "0004946901218459041": [], "0004946901218459711": [], "0004946901218459802": [], "000494690121846056": [], "0004955753197879519": [], "0004955753197880513": [], "000495575319788059": [], "0004955753197880868": [], "0004955753197881087": [], "0004955753197881554": [], "0004955753197881714": [], "0004955753197882625": 23, "0004955753197883262": [], "0004955753197884885": [], "0004964417296736865": [], "0004964417296738171": [], "0004964417296738745": 23, "0004964417296738986": [], "0004964417296739091": [], "0004964417296739769": [], "0004964417296739932": [], "0004964417296740498": [], "0004964417296740796": [], "0004964417296742609": [], "0004973147318187666": [], "0004973147318189414": [], "0004973147318190508": 23, "0004973147318190727": [], "000497314731819078": [], "0004973147318191058": [], "0004973147318191886": [], "0004973147318191895": [], "0004973147318192507": [], "0004973147318194616": [], "0004981962000746286": [], "0004981962000746356": [], "000498196200074665": [], "0004981962000747289": [], "0004981962000747681": [], "0004981962000747801": 23, "0004981962000749098": [], "0004981962000749109": [], "0004981962000749426": [], "0004981962000751801": [], "0004990872395196386": [], "0004990872395196584": [], "0004990872395197798": [], "0004990872395197812": [], "0004990872395197852": 23, "0004990872395197967": [], "0004990872395198036": [], "0004990872395198222": [], "0004990872395198833": [], "0004990872395199068": [], "0004999974962486311": [], "0004999974962487761": [], "0004999974962488074": [], "0004999974962488504": [], "0004999974962488721": 23, "0004999974962489051": [], "0004999974962489141": [], "0004999974962489708": [], "0004999974962489859": [], "0004999974962490498": [], "0005009224423796791": [], "0005009224423797392": [], "0005009224423798358": [], "0005009224423798721": [], "0005009224423798726": 23, "000500922442379914": [], "0005009224423799278": [], "0005009224423799549": [], "0005009224423799674": [], "0005009224423800065": [], "0005018650428476519": [], "0005018650428477224": [], "0005018650428477462": [], "000501865042847845": 23, "000501865042847973": [], "000501865042848022": [], "0005018650428480774": [], "0005018650428481111": [], "0005018650428481323": [], "0005018650428481662": [], "0005028222129275986": [], "0005028222129276052": 23, "00050282221292763": [], "0005028222129276641": [], "0005028222129277096": [], "0005028222129277123": [], "0005028222129277436": [], "0005028222129278369": [], "0005028222129278678": [], "0005028222129279376": [], "000503795893364711": [], "0005037958933648668": [], "0005037958933648793": 23, "0005037958933648914": [], "0005037958933649528": [], "0005037958933650123": [], "0005037958933650735": [], "000503795893365082": [], "0005037958933651394": [], "0005037958933651659": [], "0005047767175613736": [], "0005047767175614131": [], "0005047767175614142": [], "0005047767175614176": [], "0005047767175614188": [], "000504776717561463": [], "0005047767175615171": [], "0005047767175615525": [], "0005047767175615783": [], "0005047767175617097": 23, "0005057740763558736": [], "0005057740763559876": [], "0005057740763559947": [], "0005057740763561446": [], "0005057740763561488": [], "0005057740763561622": [], "0005057740763561961": [], "0005057740763561992": 23, "0005057740763562438": [], "0005057740763562632": [], "0005067909112021239": [], "0005067909112021617": [], "0005067909112021708": [], "0005067909112022117": [], "0005067909112023044": [], "0005067909112023745": [], "0005067909112023956": 23, "0005067909112024967": [], "000506790911202508": [], "0005067909112025632": [], "0005078236610580104": [], "0005078236610580307": [], "0005078236610580372": [], "00050782366105804": [], "0005078236610581305": [], "0005078236610581406": [], "0005078236610581828": [], "0005078236610583313": [], "0005078236610583333": [], "0005078236610584279": 23, "0005088753613789735": [], "0005088753613790741": 23, "0005088753613790805": [], "0005088753613791133": [], "0005088753613791165": [], "0005088753613791648": [], "0005088753613793233": [], "0005088753613793251": [], "0005088753613793709": [], "0005088753613794654": [], "0005099447315064505": [], "0005099447315065357": [], "0005099447315065555": [], "0005099447315065626": [], "0005099447315065634": [], "0005099447315065936": [], "0005099447315066472": 23, "0005099447315066482": [], "0005099447315066983": [], "0005099447315067237": [], "0005110364330891593": [], "000511036433089188": [], "0005110364330892671": [], "0005110364330892806": [], "000511036433089313": [], "0005110364330893456": [], "0005110364330893958": 23, "0005110364330894185": [], "0005110364330894615": [], "0005110364330894977": [], "0005121515266400903": [], "0005121515266401894": [], "0005121515266402634": [], "0005121515266403408": 23, "0005121515266403475": [], "00051215152664036": [], "0005121515266403689": [], "0005121515266403783": [], "0005121515266404315": [], "0005121515266405794": [], "0005132891688187749": [], "0005132891688188399": [], "000513289168818843": [], "0005132891688188955": [], "0005132891688189152": 23, "0005132891688189499": [], "0005132891688189597": [], "0005132891688189837": [], "0005132891688190175": [], "0005132891688191449": [], "0005144616554309376": [], "0005144616554309745": [], "0005144616554311107": [], "0005144616554311679": [], "0005144616554311709": [], "0005144616554312661": [], "000514461655431283": 23, "000514461655431288": [], "0005144616554315243": [], "0005144616554316014": [], "0005156608680267939": [], "0005156608680269404": [], "0005156608680269885": [], "000515660868027011": [], "0005156608680270281": [], "0005156608680270679": [], "0005156608680271657": 23, "0005156608680272043": [], "0005156608680273278": [], "000515660868027389": [], "0005168846752735115": [], "0005168846752735538": 23, "0005168846752735907": [], "0005168846752736476": [], "0005168846752736575": [], "0005168846752736935": [], "0005168846752737176": [], "0005168846752737251": [], "0005168846752738707": [], "0005168846752739749": [], "0005181813428110745": [], "0005181813428111788": 23, "0005181813428112792": [], "0005181813428112841": [], "0005181813428112995": [], "0005181813428113705": [], "0005181813428114713": [], "0005181813428114981": [], "0005181813428115145": [], "000518181342811702": [], "000519526516884049": [], "0005195265168841789": [], "0005195265168841826": [], "0005195265168842167": [], "0005195265168842517": [], "000519526516884287": [], "0005195265168842883": [], "0005195265168843805": [], "0005195265168844": [], "0005195265168844999": 23, "0005208942964236693": [], "0005208942964236992": [], "0005208942964237717": [], "0005208942964237727": 23, "0005208942964237754": [], "0005208942964237927": [], "0005208942964238068": [], "0005208942964239048": [], "0005208942964239357": [], "0005208942964240388": [], "0005221": [397, 413], "0005221068859100342": 397, "0005222955570663847": 23, "0005222955570664485": [], "000522295557066475": [], "000522295557066507": [], "0005222955570665481": [], "0005222955570666957": [], "0005222955570667562": [], "000522295557066778": [], "0005222955570668067": [], "0005222955570668339": [], "000523731810758917": [], "0005237318107589321": [], "0005237318107590732": [], "0005237318107590826": [], "0005237318107591284": [], "0005237318107591405": 23, "0005237318107591572": [], "0005237318107591619": [], "0005237318107591629": [], "0005237318107592958": [], "0005251860718891445": [], "0005251860718892853": [], "000525186071889367": [], "0005251860718893823": [], "0005251860718893885": [], "0005251860718894046": [], "0005251860718894615": [], "000525186071889515": [], "0005251860718896281": 23, "0005251860718896675": [], "0005266549474159131": [], "0005266549474160991": [], "0005266549474161915": [], "0005266549474162094": [], "0005266549474162246": [], "0005266549474162485": [], "0005266549474162502": [], "0005266549474162535": 23, "0005266549474163577": [], "0005266549474163601": [], "0005281469649346432": [], "0005281469649347315": [], "0005281469649347528": [], "0005281469649347739": [], "0005281469649347942": [], "0005281469649348514": [], "0005281469649349037": [], "0005281469649350214": [], "000528146964935111": 23, "0005281469649351481": [], "0005296374901746287": [], "000529637490174637": [], "0005296374901746406": [], "000529637490174674": [], "0005296374901746982": [], "0005296374901747271": [], "0005296374901747356": [], "0005296374901747547": [], "0005296374901747557": [], "0005296374901748576": 23, "0005311700256178639": [], "0005311700256179855": [], "0005311700256180228": [], "00053117002561811": [], "0005311700256181403": [], "0005311700256182346": 23, "0005311700256182472": [], "0005311700256182822": [], "0005311700256182875": [], "0005311700256185659": [], "0005327134944353742": [], "0005327134944354573": [], "0005327134944355281": [], "0005327134944356012": [], "0005327134944356081": [], "0005327134944356228": [], "000532713494435631": [], "0005327134944357374": [], "0005327134944358506": [], "0005327134944358608": 23, "0005342566446342522": [], "0005342566446342695": [], "0005342566446343034": [], "0005342566446343036": [], "0005342566446343145": [], "0005342566446343186": [], "0005342566446343442": [], "0005342566446343707": [], "0005342566446345362": 23, "000534256644634617": [], "0005358628850807883": [], "0005358628850808455": [], "0005358628850809048": [], "0005358628850809842": [], "0005358628850810015": [], "0005358628850810062": [], "0005358628850810403": [], "0005358628850810474": [], "0005358628850810628": 23, "0005358628850812305": [], "0005376381718605749": [], "0005376381718606365": [], "0005376381718607379": [], "0005376381718607494": [], "0005376381718607585": [], "0005376381718607703": [], "0005376381718607765": [], "0005376381718607971": [], "0005376381718609919": 23, "0005376381718611146": [], "0005396329582218824": [], "0005396329582219159": [], "0005396329582219403": 23, "0005396329582220154": [], "0005396329582220506": [], "0005396329582221315": [], "0005396329582221343": [], "0005396329582221554": [], "000539632958222158": [], "0005396329582221765": [], "0005416726314724096": [], "0005416726314724948": [], "0005416726314725995": [], "0005416726314726958": 23, "0005416726314726977": [], "0005416726314727076": [], "0005416726314727196": [], "0005416726314728244": [], "0005416726314728317": [], "0005416726314730198": [], "0005437570853965295": [], "0005437570853966201": [], "0005437570853967856": [], "0005437570853968005": [], "0005437570853968596": [], "0005437570853968744": [], "0005437570853968874": [], "0005437570853969279": 23, "0005437570853970076": [], "0005437570853970355": [], "0005458976082892606": [], "0005458976082893782": 23, "0005458976082893992": [], "0005458976082894267": [], "0005458976082894575": [], "0005458976082894791": [], "0005458976082894861": [], "0005458976082895556": [], "0005458976082895933": [], "0005458976082896372": [], "000548087574800604": [], "0005480875748006476": [], "0005480875748006862": [], "0005480875748007037": [], "0005480875748007175": [], "0005480875748007389": [], "0005480875748007858": [], "0005480875748008742": [], "0005480875748009169": 23, "0005480875748009697": [], "0005503237863508512": [], "0005503237863509389": [], "0005503237863509437": [], "0005503237863510522": [], "0005503237863510672": [], "000550323786351084": [], "0005503237863511538": [], "000550323786351187": 23, "0005503237863512245": [], "0005503237863513801": [], "0005526263090685192": [], "0005526263090685381": [], "0005526263090685511": [], "0005526263090685566": [], "0005526263090685627": [], "0005526263090686417": [], "0005526263090686762": [], "000552626309068707": [], "0005526263090688042": [], "0005526263090688936": 23, "0005549930907511359": [], "0005549930907511676": [], "0005549930907512092": [], "0005549930907512403": [], "0005549930907512666": 23, "0005549930907512982": [], "000554993090751304": [], "0005549930907513156": [], "0005549930907513445": [], "0005549930907515556": [], "0005574208102717825": [], "0005574208102717834": [], "0005574208102717933": 23, "0005574208102719205": [], "0005574208102719736": [], "0005574208102720103": [], "0005574208102720155": [], "000557420810272031": [], "0005574208102720946": [], "000557420810272123": [], "0005599281471043315": 23, "0005599281471043965": [], "0005599281471044695": [], "0005599281471045395": [], "0005599281471045585": [], "000559928147104604": [], "0005599281471046189": [], "0005599281471046287": [], "000559928147104641": [], "0005599281471047728": [], "0005624480584367338": [], "0005624480584368009": 23, "000562448058436834": [], "0005624480584368853": [], "0005624480584368885": [], "0005624480584369067": [], "0005624480584369987": [], "000562448058437012": [], "0005624480584370192": [], "0005624480584370331": [], "0005650176785168577": [], "0005650176785169821": [], "0005650176785170158": 23, "0005650176785170183": [], "000565017678517042": [], "0005650176785170909": [], "0005650176785170994": [], "0005650176785171212": [], "0005650176785171481": [], "0005650176785171535": [], "0005654506385326385": 397, "0005655": [397, 413], "000567605378717932": [], "0005676053787180134": [], "0005676053787180406": [], "0005676053787180503": 23, "0005676053787181119": [], "0005676053787181474": [], "0005676053787181579": [], "0005676053787181988": [], "0005676053787182328": [], "0005676053787182388": [], "0005699768662452698": 397, "00057": [397, 413], "0005702968600983103": 23, "0005702968600984294": [], "0005702968600984307": [], "0005702968600984545": [], "0005702968600985005": [], "0005702968600985554": [], "0005702968600985712": [], "0005702968600985807": [], "0005702968600986756": [], "0005702968600987284": [], "0005706218431926538": [], "000570621843192668": [], "0005706218431926848": [], "0005706218431926871": [], "0005706218431926878": [], "0005706218431927033": [], "0005706218431927079": 23, "000570621843192712": [], "0005706218431927215": [], "0005730546137307817": [], "0005730546137308272": [], "0005730546137308784": [], "000573054613730908": [], "000573054613730945": [], "0005730546137309763": 23, "0005730546137310106": [], "0005730546137310116": [], "0005730546137310555": [], "0005730546137311923": [], "0005759087479594289": [], "0005759087479595245": [], "0005759087479596969": [], "000575908747959784": [], "0005759087479598487": 23, "000575908747959862": [], "000575908747959923": [], "0005759087479599832": [], "000575908747960032": [], "0005759087479601712": [], "0005778": 20, "0005788624242478689": [], "0005788624242479143": [], "0005788624242479376": [], "0005788624242479705": [], "0005788624242480353": 23, "0005788624242480586": [], "0005788624242481056": [], "0005788624242481403": [], "0005788624242482474": [], "0005788624242482893": [], "000581947296680336": [], "000581947296680344": [], "0005819472966803906": [], "0005819472966804628": [], "0005819472966805056": [], "0005819472966805383": 23, "000581947296680579": [], "0005819472966806516": [], "000581947296680654": [], "0005819472966806674": [], "0005851626197888048": [], "0005851626197889814": [], "0005851626197890603": [], "0005851626197890886": [], "0005851626197890995": [], "0005851626197891849": [], "0005851626197892761": [], "0005851626197892866": [], "0005851626197893203": 23, "0005851626197894364": [], "0005884735105282505": [], "0005884735105283243": [], "0005884735105283673": [], "0005884735105285451": [], "0005884735105285984": 23, "0005884735105286357": [], "0005884735105286619": [], "0005884735105286631": [], "0005884735105286813": [], "0005884735105287034": [], "0005919356405961496": [], "0005919356405961691": [], "0005919356405961808": 23, "0005919356405961868": [], "000591935640596216": [], "0005919356405962345": [], "0005919356405962359": [], "0005919356405962364": [], "0005919356405962637": [], "0005919356405963531": [], "0005955122189364825": [], "0005955122189365133": [], "0005955122189366077": [], "0005955122189366239": 23, "0005955122189367316": [], "000595512218936765": [], "0005955122189367659": [], "0005955122189367712": [], "0005955122189367884": [], "0005955122189370464": [], "0005992255771885674": [], "0005992255771886187": 23, "000599225577188652": [], "0005992255771887265": [], "0005992255771887271": [], "000599225577188771": [], "0005992255771888191": [], "0005992255771888362": [], "0005992255771889933": [], "0005992255771890464": [], "0006030938520870249": [], "0006030938520871732": [], "0006030938520871758": [], "0006030938520871772": 23, "0006030938520872173": [], "0006030938520872376": [], "00060309385208739": [], "0006030938520873957": [], "0006030938520874155": [], "0006030938520875637": [], "0006071251736133747": 23, "0006071251736134096": [], "0006071251736134634": [], "0006071251736134833": [], "0006071251736136002": [], "0006071251736136257": [], "0006071251736136704": [], "0006071251736136737": [], "0006071251736136836": [], "0006071251736137899": [], "00061": 95, "0006113918151770812": [], "0006113918151771546": [], "0006113918151771783": [], "0006113918151773687": [], "0006113918151773721": [], "0006113918151773796": [], "0006113918151774445": 23, "0006113918151774565": [], "000611391815177475": [], "0006113918151774933": [], "0006119189023141512": 36, "0006161518203752322": [], "0006161518203754208": 23, "000616151820375435": [], "0006161518203754982": [], "000616151820375504": [], "0006161518203755176": [], "0006161518203755247": [], "0006161518203755275": [], "0006161518203756793": [], "0006161518203757781": [], "0006215236000708821": [], "0006215236000709784": [], "0006215236000710541": [], "0006215236000711641": [], "0006215236000711689": [], "0006215236000712062": [], "0006215236000712302": [], "0006215236000712735": 23, "0006215236000712845": [], "0006215236000713193": [], "0006273957420688005": 23, "0006273957420688174": [], "0006273957420688386": [], "0006273957420688609": [], "0006273957420689538": [], "0006273957420689783": [], "0006273957420690131": [], "0006273957420690272": [], "0006273957420691233": [], "0006273957420692205": [], "000630699098110199": 397, "0006307": [397, 413], "0006335488650769124": [], "0006335488650771468": [], "0006335488650772089": 23, "0006335488650772217": [], "0006335488650772221": [], "0006335488650773491": [], "0006335488650773892": [], "000633548865077458": [], "0006335488650774592": [], "0006335488650774818": [], "0006399762615473544": [], "0006399762615473888": [], "0006399762615474514": [], "0006399762615475572": 23, "0006399762615475897": [], "0006399762615475996": [], "0006399762615476348": [], "0006399762615476389": [], "0006399762615477302": [], "0006399762615479372": [], "0006466641120993671": [], "000646664112099438": [], "0006466641120994758": [], "0006466641120995445": [], "0006466641120995542": [], "0006466641120995622": [], "0006466641120995968": [], "0006466641120996558": [], "0006466641120997569": 23, "0006466641120998261": [], "0006536091296350539": [], "0006536091296350769": [], "0006536091296351503": [], "0006536091296352462": [], "0006536091296352544": [], "000653609129635397": [], "0006536091296354082": 23, "0006536091296354337": [], "000653609129635576": [], "0006536091296356166": [], "0006606893398228634": [], "0006606893398229784": [], "0006606893398229817": [], "0006606893398230443": [], "0006606893398231414": [], "0006606893398231949": [], "0006606893398231962": [], "0006606893398231999": [], "000660689339823232": 23, "0006606893398232877": [], "0006679795936490218": [], "0006679795936490397": [], "0006679795936491247": [], "0006679795936491323": [], "0006679795936491836": [], "000667979593649188": [], "0006679795936492225": [], "0006679795936492423": 23, "0006679795936492843": [], "0006679795936493746": [], "0006754181243923505": [], "0006754181243923538": [], "0006754181243924355": [], "0006754181243924942": [], "0006754181243925178": [], "0006754181243925453": [], "0006754181243925482": [], "0006754181243925848": [], "0006754181243926375": [], "0006754181243926828": 23, "000682": [390, 391], "0006830298779796081": 23, "0006830298779796798": [], "0006830298779797428": [], "0006830298779799066": [], "0006830298779799507": [], "0006830298779799616": [], "0006830298779799931": [], "000683029877980062": [], "0006830298779800621": [], "0006830298779800808": [], "0006907733550821713": [], "0006907733550822484": [], "0006907733550823099": [], "0006907733550823846": [], "0006907733550824382": [], "0006907733550824613": 23, "0006907733550824742": [], "0006907733550825372": [], "0006907733550826153": [], "0006907733550826945": [], "000698763753524693": [], "000698763753524747": [], "0006987637535247919": [], "000698763753524886": [], "0006987637535249557": [], "0006987637535249563": [], "0006987637535249741": [], "0006987637535249809": [], "0006987637535249813": 23, "0006987637535250106": [], "0006991377766200191": [], "000699137776620029": [], "0006991377766200312": [], "0006991377766200407": [], "0006991377766200435": [], "0006991377766200465": [], "0006991377766200512": 23, "0006991377766200667": [], "0006991377766200764": [], "0006991377766200766": [], "0007069372346701202": [], "0007069372346701783": [], "0007069372346702538": [], "000706937234670296": 23, "0007069372346703482": [], "0007069372346703774": [], "0007069372346704112": [], "0007069372346705506": [], "0007069372346706022": [], "0007069372346706446": [], "0007125": [390, 391], "0007151920055393133": [], "0007151920055393362": [], "0007151920055394605": [], "0007151920055395175": [], "0007151920055395656": [], "0007151920055396672": [], "0007151920055396673": [], "000715192005539678": 23, "0007151920055397063": [], "0007151920055397496": [], "0007235915691681931": [], "0007235915691682348": [], "0007235915691682368": [], "0007235915691682784": [], "0007235915691683327": 23, "000723591569168351": [], "0007235915691683511": [], "00072359156916842": [], "0007235915691684382": [], "0007235915691684936": [], "0007322966170537607": [], "0007322966170538192": [], "0007322966170538745": [], "0007322966170539347": [], "0007322966170540092": [], "0007322966170540327": [], "0007322966170540356": [], "000732296617054129": [], "0007322966170541427": [], "0007322966170542924": 23, "0007412456856969675": [], "000741245685696993": [], "0007412456856970398": [], "0007412456856970444": [], "0007412456856971062": [], "0007412456856971649": [], "0007412456856971892": [], "0007412456856972048": [], "0007412456856973277": 23, "0007412456856974178": [], "0007504652538889765": [], "00075046525388911": [], "0007504652538891703": [], "0007504652538892282": [], "0007504652538892949": [], "0007504652538893017": 23, "000750465253889327": [], "0007504652538893278": [], "0007504652538893314": [], "0007504652538893561": [], "000759717906785099": [], "0007597179067852656": [], "0007597179067852899": [], "0007597179067853152": [], "0007597179067853268": [], "0007597179067853862": [], "0007597179067853997": [], "0007597179067854867": [], "0007597179067856445": 23, "0007597179067856572": [], "0007683": 20, "0007691414390013868": [], "0007691414390016782": [], "0007691414390016876": [], "0007691414390017615": [], "0007691414390018068": [], "000769141439001873": [], "0007691414390019033": [], "0007691414390019663": [], "0007691414390019867": 23, "0007691414390019911": [], "0007791326607911231": [], "0007791326607911991": [], "000779132660791221": [], "0007791326607912672": 23, "0007791326607912818": [], "000779132660791297": [], "000779132660791377": [], "0007791326607914057": [], "0007791326607914223": [], "000779132660791523": [], "0007893350738951028": [], "0007893350738951613": [], "0007893350738951923": [], "0007893350738952028": [], "0007893350738952244": [], "0007893350738952989": [], "0007893350738953564": 23, "0007893350738955306": [], "0007893350738955439": [], "0007893350738956838": [], "0007904": 75, "000799752248473194": [], "0007997522484732284": [], "0007997522484733932": [], "0007997522484734051": [], "000799752248473463": [], "0007997522484735511": [], "0007997522484735639": [], "0007997522484736752": [], "0007997522484737372": 23, "0007997522484737995": [], "000803191214799881": 397, "0008032": [397, 413], "000810426980776281": [], "0008104269807763107": [], "0008104269807764819": [], "0008104269807765214": [], "0008104269807765351": [], "0008104269807765361": [], "0008104269807765541": [], "0008104269807766513": [], "0008104269807766922": 23, "0008104269807768277": [], "0008158918697522015": 36, "00082088471588009": [], "0008208847158801298": 23, "0008208847158801854": [], "000820884715880217": [], "0008208847158802939": [], "0008208847158803738": [], "0008208847158804373": [], "0008208847158804451": [], "00082088471588049": [], "0008315536804367912": [], "0008315536804368829": [], "0008315536804368872": [], "0008315536804369133": [], "0008315536804369717": [], "0008315536804370307": 23, "0008315536804370376": [], "0008315536804370398": [], "000831553680437093": [], "0008315536804372599": [], "0008356980979442596": 397, "0008357": [397, 413], "0008428706003285472": [], "0008428706003286617": [], "0008428706003286673": [], "000842870600328693": 23, "0008428706003287266": [], "0008428706003287959": [], "0008428706003288086": [], "0008428706003288223": [], "000842870600328838": [], "0008428706003290261": [], "000845": 390, "0008543517499937086": [], "0008543517499937679": 23, "0008543517499938616": [], "0008543517499939378": [], "0008543517499939573": [], "0008543517499939702": [], "0008543517499939851": [], "0008543517499940512": [], "0008543517499940639": [], "0008543517499942848": [], "0008573236692761593": [], "0008573236692761724": [], "0008573236692761728": [], "0008573236692761834": [], "0008573236692761841": [], "0008573236692761884": 23, "0008573236692762216": [], "0008573236692762226": [], "0008573236692762324": [], "0008573236692762404": [], "0008660457470916807": [], "0008660457470917061": [], "0008660457470917916": [], "0008660457470918284": [], "0008660457470919363": [], "0008660457470919905": [], "000866045747092053": [], "0008660457470921073": [], "0008660457470921538": [], "0008660457470922347": 23, "0008780499311868715": [], "000878049931186941": [], "0008780499311869842": [], "0008780499311869852": 23, "0008780499311870633": [], "0008780499311871206": [], "0008780499311871568": [], "0008780499311871957": [], "000878049931187363": [], "000878049931187461": [], "0008902182357105141": [], "0008902182357105265": [], "0008902182357105961": [], "0008902182357106752": [], "0008902182357106848": [], "0008902182357107326": 23, "000890218235710756": [], "0008902182357107564": [], "0008902182357107919": [], "0008902182357108317": [], "0009015875006375498": [], "0009015875006375627": [], "0009015875006376223": [], "0009015875006376665": [], "000901587500637693": [], "0009015875006377295": 23, "0009015875006377518": [], "0009015875006379089": [], "0009015875006379349": [], "0009015875006380312": [], "0009140262172600107": [], "0009140262172600191": [], "000914026217260049": [], "0009140262172600524": [], "0009140262172601044": [], "0009140262172601464": [], "0009140262172601915": [], "0009140262172602439": [], "0009140262172602508": [], "000914026217260279": 23, "0009266599168142437": [], "0009266599168143045": [], "0009266599168143877": [], "0009266599168144389": [], "0009266599168144962": [], "0009266599168145126": [], "0009266599168145434": 23, "0009266599168145571": [], "0009266599168145682": [], "0009266599168145994": [], "0009396363331384119": [], "0009396363331385442": [], "0009396363331386303": [], "0009396363331386347": [], "00093963633313866": 23, "0009396363331386858": [], "0009396363331387592": [], "0009396363331387799": [], "000939636333138798": [], "0009396363331388831": [], "0009545966012006727": [], "0009545966012006917": [], "000954596601200723": 23, "0009545966012007235": [], "0009545966012007526": [], "0009545966012007628": [], "0009545966012008259": [], "000954596601200829": [], "0009545966012008961": [], "0009545966012009728": [], "00095703125": 80, "0009699922960875605": [], "0009699922960875774": [], "000969992296087604": [], "0009699922960876168": [], "0009699922960876636": [], "0009699922960876649": [], "000969992296087666": 23, "0009699922960877096": [], "0009699922960877415": [], "000969992296087837": [], "000975": 128, "0009841318528815014": [], "0009841318528817228": [], "000984131852881743": [], "000984131852881758": [], "000984131852881818": [], "0009841318528818657": [], "000984131852881891": [], "0009841318528819019": [], "0009841318528819455": [], "0009841318528821107": 23, "0009988201809298192": [], "0009988201809298363": [], "0009988201809299603": [], "0009988201809299942": [], "000998820180930008": [], "0009988201809300093": [], "000998820180930014": [], "0009988201809300256": [], "0009988201809301251": 23, "0009988201809301741": [], "001": [98, 99, 114, 144, 244, 245, 253, 388, 390, 392, 459], "0010150792321234347": 23, "0010150792321234538": [], "001015079232123603": [], "001015079232123624": [], "001015079232123679": [], "0010150792321237164": [], "0010150792321237563": [], "0010150792321238235": [], "0010150792321238587": [], "001015079232123893": [], "001019864837190252": 36, "0010318244102605267": [], "001031824410260708": 23, "0010318244102607251": [], "001031824410260733": [], "001031824410260753": [], "0010318244102607902": [], "0010318244102608593": [], "0010318244102608851": [], "0010318244102609547": [], "0010318244102610421": [], "0010438675111376842": [], "001043867511137698": [], "0010438675111377118": [], "0010438675111377228": [], "0010438675111377267": [], "0010438675111377406": 23, "0010438675111377478": [], "001043867511137752": [], "0010438675111377682": [], "001043867511137804": [], "0010491933694698973": [], "001049193369469907": [], "0010491933694700144": [], "0010491933694700456": [], "0010491933694700664": 23, "0010491933694700812": [], "0010491933694701204": [], "0010491933694701577": [], "0010491933694701688": [], "0010491933694702627": [], "0010661363692302651": [], "0010661363692303397": [], "0010661363692305035": [], "001066136369230509": 23, "0010661363692305854": [], "001066136369230619": [], "0010661363692306793": [], "001066136369230738": [], "0010661363692307478": [], "0010661363692308777": [], "0010832777040274166": [], "0010832777040275378": [], "0010832777040275742": [], "001083277704027697": [], "0010832777040278264": [], "0010832777040278786": [], "001083277704027893": [], "001083277704027903": [], "0010832777040279088": 23, "0010832777040280788": [], "001089": 128, "0011006754884537605": 23, "001100675488453769": [], "001100675488453888": [], "0011006754884538919": [], "0011006754884539045": [], "0011006754884540075": [], "001100675488454021": [], "0011006754884540565": [], "001100675488454109": [], "0011006754884541766": [], "001119912492935944": 23, "0011199124929359998": [], "0011199124929360173": [], "0011199124929360896": [], "001119912492936159": [], "0011199124929361878": [], "0011199124929361895": [], "0011199124929362004": [], "0011199124929362043": [], "0011199124929362565": [], "001121": [397, 413], "001121222972869873": 397, "0011389415923628997": [], "001138941592363003": [], "0011389415923630229": [], "0011389415923630938": [], "0011389415923631005": [], "0011389415923631135": [], "0011389415923631148": [], "0011389415923632113": [], "0011389415923633629": 23, "001138941592363473": [], "0011582609085414527": [], "0011582609085415674": [], "0011582609085416032": [], "0011582609085416088": [], "0011582609085416115": [], "0011582609085416143": 23, "001158260908541689": [], "0011582609085417199": [], "0011582609085418027": [], "0011582609085420057": [], "0011698119342327118": 397, "00117": [75, 397, 413], "0011775622624511344": [], "001177562262451156": [], "0011775622624512268": 23, "0011775622624512353": [], "0011775622624512663": [], "0011775622624513647": [], "0011775622624514476": [], "0011775622624514582": [], "0011775622624514727": [], "0011775622624517702": [], "0011992116544499603": [], "001199211654449984": [], "0011992116544500165": [], "0011992116544500295": [], "001199211654450083": [], "0011992116544501225": [], "0011992116544502305": [], "0011992116544502548": 23, "0011992116544502806": [], "0011992116544504493": [], "001219011469954639": [], "0012190114699547035": [], "0012190114699547527": [], "0012190114699548629": [], "0012190114699548809": 23, "0012190114699549544": [], "001219011469955016": [], "0012190114699550407": [], "0012190114699550596": [], "0012190114699551671": [], "0012238378046283023": 36, "0012238378046283025": 36, "0012363658727393115": [], "0012363658727396333": [], "0012363658727397634": [], "001236365872739792": [], "0012363658727397983": 23, "001236365872739844": [], "0012363658727398519": [], "001236365872739858": [], "0012363658727399217": [], "001236365872739998": [], "0012488601974044345": [], "001248860197404439": [], "0012488601974044544": [], "0012488601974044579": [], "0012488601974044717": [], "00124886019740448": [], "0012488601974044835": [], "0012488601974044915": [], "001248860197404515": 23, "0012488601974045192": [], "0012569657401117467": [], "0012569657401117992": 23, "0012569657401118": [], "001256965740111935": [], "0012569657401119354": [], "001256965740112036": [], "0012569657401120579": [], "0012569657401121127": [], "0012569657401121195": [], "0012569657401121535": [], "0012813357494809007": [], "0012813357494810274": [], "0012813357494810514": [], "001281335749481064": [], "0012813357494810729": [], "0012813357494810798": [], "0012813357494812314": [], "0012813357494812984": [], "0012813357494814556": 23, "00128133574948154": [], "0013065923988232052": [], "0013065923988233084": [], "0013065923988233303": [], "0013065923988233351": [], "0013065923988233724": 23, "0013065923988234101": [], "0013065923988234284": [], "0013065923988234793": [], "0013065923988234817": [], "0013065923988236213": [], "001332": 20, "0013328464824002083": 23, "0013328464824002829": [], "001332846482400308": [], "0013328464824003546": [], "0013328464824003672": [], "0013328464824003846": [], "0013328464824003945": [], "001332846482400478": [], "0013328464824005168": [], "0013328464824005775": [], "001341": [390, 391], "001360158280515491": [], "0013601582805155335": 23, "0013601582805156894": [], "0013601582805157029": [], "0013601582805157645": [], "001360158280515768": [], "0013601582805157855": [], "001360158280515817": [], "0013601582805159358": [], "0013601582805162283": [], "0013907597658087026": [], "001390759765808746": [], "0013907597658088771": 23, "0013907597658089027": [], "0013907597658089329": [], "0013907597658089467": [], "0013907597658089498": [], "0013907597658089782": [], "0013907597658089992": [], "0013907597658090276": [], "0014262081321617347": [], "001426208132161799": [], "0014262081321618264": [], "001426208132161892": 23, "001426208132161959": [], "0014262081321619786": [], "0014262081321620144": [], "001426208132162053": [], "001426208132162082": [], "0014262081321621937": [], "0014278107720663525": 36, "0014278107720663528": 36, "001427810772066353": 36, "0014629272012158443": [], "0014629272012159852": [], "0014629272012159893": [], "0014629272012159978": [], "0014629272012161264": [], "0014629272012161335": [], "0014629272012161919": [], "001462927201216235": 23, "001462927201216309": [], "0014629272012163094": [], "0014925716272856766": [], "0014925716272856926": [], "0014925716272857186": [], "001492571627285736": [], "0014925716272857486": [], "0014925716272857496": [], "001492571627285752": 23, "0014925716272857557": [], "0014925716272857583": [], "0014925716272858175": [], "001501438543131217": [], "0015014385431312398": [], "0015014385431312502": [], "0015014385431312573": [], "001501438543131277": [], "001501438543131406": [], "0015014385431315115": [], "001501438543131565": [], "001501438543131647": 23, "0015014385431316786": [], "001535": 404, "0015418960309269366": 23, "0015418960309270704": [], "0015418960309270826": [], "0015418960309270895": [], "0015418960309271366": [], "0015418960309271368": [], "0015418960309271567": [], "0015418960309272777": [], "0015418960309274653": [], "0015418960309275082": [], "0015839173329698652": [], "0015839173329699092": [], "001583917332969929": [], "001583917332969961": [], "0015839173329700012": 23, "0015839173329700118": [], "0015839173329700248": [], "0015839173329700834": [], "001583917332970141": [], "001583917332970238": [], "0016274950351467961": [], "0016274950351468278": [], "0016274950351468306": [], "001627495035146853": 23, "0016274950351468853": [], "0016274950351469286": [], "0016274950351469694": [], "0016274950351469909": [], "0016274950351471355": [], "0016274950351471697": [], "001631783739504403": 36, "0016317837395044032": 36, "001673169268699501": [], "0016731692686995118": [], "0016731692686995179": [], "001673169268699578": [], "0016731692686995834": 23, "0016731692686996653": [], "0016731692686996905": [], "0016731692686996955": [], "0016731692686997258": [], "0016731692686998275": [], "001699": 390, "0017204657491191524": [], "001720465749119195": [], "001720465749119241": [], "0017204657491192506": [], "0017204657491192914": [], "0017204657491193015": [], "0017204657491193382": [], "0017204657491193783": [], "0017204657491194251": 23, "0017204657491196266": [], "001769274901286456": [], "00176927490128649": [], "0017692749012865139": [], "0017692749012865382": [], "0017692749012866095": [], "0017692749012866316": [], "0017692749012866527": 23, "0017692749012867158": [], "0017692749012867244": [], "0017692749012867637": [], "0017697484695161478": [], "0017697484695161968": [], "0017697484695162013": [], "0017697484695162133": [], "0017697484695162135": [], "0017697484695162304": [], "0017697484695162506": 23, "0017697484695162512": [], "0017697484695162558": [], "0017697484695163288": [], "00177": 20, "0018195678200696964": [], "0018195678200697168": [], "0018195678200697476": [], "0018195678200697521": [], "0018195678200697897": [], "0018195678200698187": [], "0018195678200698603": 23, "0018195678200698883": [], "0018195678200698994": [], "0018357567069424532": 36, "0018357567069424536": 36, "0018713261632054745": 23, "0018713261632056122": [], "0018713261632056773": [], "0018713261632056786": [], "0018713261632056835": [], "0018713261632057178": [], "0018713261632057417": [], "0018713261632057423": [], "0018713261632059494": [], "0018713261632060001": [], "001875": 75, "001899": [], "0019140625": 80, "0019243270194357683": [], "0019243270194358075": [], "001924327019435861": [], "001924327019436005": [], "0019243270194360068": [], "0019243270194360083": [], "0019243270194360311": [], "001924327019436116": 23, "0019243270194361213": [], "0019243270194361408": [], "001963927855711423": 80, "001980664359350388": [], "0019806643593505307": [], "0019806643593505333": [], "001980664359350553": [], "001980664359350605": [], "001980664359350667": [], "001980664359350863": [], "001980664359350895": [], "001980664359350958": 23, "001980664359350984": [], "002": [36, 388], "002012": 75, "002039729674380504": 36, "002043667805247816": [], "0020436678052478314": [], "002043667805247832": [], "0020436678052478383": [], "0020436678052478765": [], "002043667805247919": 23, "002043667805247948": [], "00204366780524795": [], "0020436678052480196": [], "0020436678052480318": [], "0020851628627840037": [], "002085162862784018": [], "002085162862784034": [], "0020851628627840454": [], "002085162862784051": [], "0020851628627840527": [], "00208516286278406": [], "0020851628627840766": 23, "0020851628627840796": [], "0020851628627841724": [], "0021084094490922346": [], "0021084094490922524": [], "002108409449092264": [], "002108409449092289": [], "002108409449092346": [], "0021084094490924077": [], "002108409449092421": [], "0021084094490925213": [], "0021084094490925543": 23, "0021084094490926466": [], "0021751169925784113": 23, "0021751169925784187": [], "0021751169925785284": [], "002175116992578568": [], "0021751169925786993": [], "0021751169925786997": [], "0021751169925787036": [], "0021751169925787604": [], "0021751169925787826": [], "0021751169925788368": [], "0022437026418185542": 36, "0022437367434807597": [], "002243736743480815": [], "0022437367434809227": [], "002243736743480956": [], "002243736743480957": [], "0022437367434809704": [], "0022437367434810086": 23, "002243736743481056": [], "00224373674348122": [], "0022437367434812497": [], "002262": 24, "0023133039094782866": [], "0023133039094783646": [], "002313303909478458": 23, "0023133039094784644": [], "002313303909478471": [], "0023133039094785494": [], "0023133039094785685": [], "0023133039094786504": [], "0023133039094786895": [], "002313303909478727": [], "002384202690790974": [], "002384202690791002": [], "0023842026907910287": [], "0023842026907910717": [], "0023842026907911094": 23, "0023842026907911215": [], "00238420269079114": [], "0023842026907911493": [], "002384202690791227": [], "0023842026907912317": [], "002386505694046968": [], "002386505694046989": [], "0023865056940469993": [], "0023865056940470114": [], "0023865056940470496": [], "0023865056940470582": [], "0023865056940470604": 23, "002386505694047063": [], "002386505694047116": [], "0023865056940471506": [], "0024476756092566047": 36, "002447675609256605": 36, "00245874036343796": [], "0024587403634379963": [], "002458740363437999": [], "002458740363438066": [], "0024587403634380675": 23, "0024587403634381243": [], "0024587403634381247": [], "002458740363438154": [], "0024587403634381976": [], "0024587403634383272": [], "002508": 75, "002535164470211765": [], "002535164470211929": [], "002535164470211985": 23, "0025351644702120103": [], "002535164470212044": [], "0025351644702120576": [], "0025351644702120784": [], "0025351644702122297": [], "002535164470212403": [], "002535164470212438": [], "0026129548289077057": [], "0026129548289077283": 23, "0026129548289077747": [], "0026129548289077972": [], "0026129548289078363": [], "0026129548289078527": [], "002612954828907915": [], "002612954828907933": [], "002612954828908005": [], "002612954828908203": [], "002651648576694655": 36, "0026927116687366554": [], "0026927116687366632": [], "0026927116687366927": 23, "0026927116687367938": [], "0026927116687368055": [], "0026927116687368155": [], "0026927116687368237": [], "0026927116687368493": [], "0026927116687370106": [], "0026927116687370336": [], "002714": 75, "0027272537391467098": [], "0027272537391467137": [], "0027272537391467427": [], "0027272537391467523": [], "0027272537391467592": [], "0027272537391468017": [], "0027272537391468217": 23, "0027272537391468538": [], "0027272537391468763": [], "0027272537391469518": [], "002773891218680218": [], "002773891218680267": [], "0027738912186802867": [], "002773891218680318": 23, "0027738912186803214": [], "002773891218680326": [], "0027738912186803352": [], "002773891218680371": [], "0027738912186803743": [], "0027738912186805104": [], "002804": 390, "002805": [21, 390], "002807": [21, 390], "002810": 22, "002813": 22, "002855621544132705": 36, "0028556215441327055": 36, "002856115850045468": [], "0028561158500455017": 23, "002856115850045539": [], "0028561158500455546": [], "0028561158500455706": [], "0028561158500456296": [], "00285611585004572": [], "00285611585004574": [], "0028561158500457415": [], "002856115850045898": [], "002867": 22, "00287109375": 80, "002938964639033736": [], "002938964639033752": [], "002938964639033797": 23, "002938964639033827": [], "0029389646390338476": [], "0029389646390339634": [], "0029389646390340237": [], "00293896463903404": [], "0029389646390340597": [], "002938964639034216": [], "003": [20, 27, 42, 77, 95, 386], "00300": [42, 91], "003022167403549689": 23, "003022167403549834": [], "0030221674035498624": [], "003022167403549917": [], "003022167403549948": [], "0030221674035499514": [], "003022167403549998": [], "003022167403550031": [], "0030221674035500355": [], "0030221674035500463": [], "0030323190347558418": [], "003032319034755883": [], "0030323190347558856": [], "0030323190347559077": [], "003032319034755921": [], "0030323190347559697": [], "003032319034756009": 23, "003032319034756023": [], "0030323190347560534": [], "0030323190347561224": [], "0030595945115707555": 36, "003059594511570756": 36, "0031049470293333607": [], "0031049470293333654": [], "0031049470293333754": [], "003104947029333437": [], "0031049470293334747": [], "003104947029333512": 23, "0031049470293335224": [], "003104947029333557": [], "0031049470293335792": [], "003104947029333728": [], "003153": 75, "003194164813272174": [], "0031941648132722145": [], "0031941648132722197": [], "0031941648132722614": [], "00319416481327227": [], "0031941648132722917": [], "003194164813272301": [], "003194164813272307": [], "0031941648132723277": 23, "003194164813272392": [], "003263567479008806": 36, "0032925205579803435": [], "003292520557980391": [], "0032925205579804884": [], "0032925205579805057": [], "0032925205579805166": [], "0032925205579805356": [], "003292520557980606": 23, "0032925205579806094": [], "0032925205579806636": [], "003292520557980715": [], "003312": 404, "0033965138303581077": [], "0033965138303581745": 23, "0033965138303581857": [], "003396513830358223": [], "0033965138303583054": [], "003396513830358323": [], "0033965138303583783": [], "0033965138303583974": [], "003396513830358466": [], "0033965138303585717": [], "003414": 404, "003428962811660757": [], "0034289628116608143": [], "0034289628116608256": [], "00342896281166084": [], "0034289628116608685": [], "0034289628116608967": [], "003428962811660988": 23, "003428962811661027": [], "0034289628116610377": [], "003428962811661115": [], "0034675404464468563": 36, "0034675404464468568": 36, "0035147101661540735": [], "0035147101661543033": [], "00351471016615434": [], "0035147101661543692": 23, "003514710166154394": [], "0035147101661544026": [], "003514710166154419": [], "00351471016615442": [], "003514710166154541": [], "0035147101661545882": [], "003521": 75, "003604": 390, "003612": 75, "003637": 75, "003637514821862712": [], "003637514821862863": [], "0036375148218628687": [], "003637514821862878": 23, "0036375148218628917": [], "003637514821862899": [], "0036375148218629524": [], "0036375148218629858": [], "00363751482186301": [], "0036715134138849063": 36, "003671513413884907": 36, "003700": 390, "0037443026036687553": [], "003744302603668758": [], "003744302603668781": [], "0037443026036688065": [], "003744302603668862": [], "0037443026036688997": [], "0037443026036689613": 23, "003744302603669027": [], "003744302603669058": [], "003744302603669085": [], "0037652602700426288": [], "0037652602700426483": [], "0037652602700426582": [], "0037652602700426665": [], "0037652602700427146": [], "0037652602700427367": 23, "003765260270042774": [], "0037652602700428005": [], "003765260270042802": [], "0037652602700429852": [], "003828125": 80, "003875486381322957": 36, "0038914653519265996": [], "003891465351926661": [], "003891465351926736": 23, "0038914653519267874": [], "0038914653519268073": [], "0038914653519268277": [], "003891465351926831": [], "003891465351926843": [], "003891465351926933": [], "0038914653519270216": [], "003973": 390, "003torr_lt_aft": [20, 42, 397, 413], "004": [20, 42, 390], "00400": [42, 91], "004007": 22, "004012755928138673": [], "004012755928138727": [], "0040127559281387445": [], "004012755928138747": [], "004012755928138753": 23, "0040127559281387575": [], "004012755928138797": [], "004012755928138814": [], "004012755928138872": [], "004012755928138938": [], "004053115751123252": [], "0040531157511232855": [], "004053115751123347": [], "0040531157511233635": [], "004053115751123404": [], "004053115751123444": [], "004053115751123518": 23, "004053115751123553": [], "004053115751123558": [], "004053115751123664": [], "004079459348761008": 36, "004092": 75, "004133928133016068": [], "00413392813301608": [], "004133928133016133": [], "004133928133016202": [], "004133928133016237": [], "004133928133016254": [], "004133928133016283": [], "004133928133016316": [], "0041339281330163595": 23, "004133928133016382": [], "004219": 75, "004267124138925664": [], "004267124138925667": [], "004267124138925693": 23, "004267124138925701": [], "00426712413892573": [], "004267124138925757": [], "004267124138925797": [], "0042671241389258124": [], "004267124138925848": [], "004267124138925944": [], "004283432316199058": 36, "0042834323161990585": 36, "004296": [390, 391], "004302": 75, "0043937174771748145": [], "004393717477174816": [], "0043937174771749125": [], "004393717477174913": [], "004393717477174927": 23, "004393717477174968": [], "00439371747717498": [], "0043937174771749845": [], "004393717477175042": [], "004393717477175047": [], "004421": 390, "0044874052836371085": 36, "004490757479656419": [], "00449075747965643": [], "004490757479656489": [], "004490757479656502": [], "004490757479656522": [], "004490757479656595": [], "004490757479656622": [], "0044907574796566475": 23, "004490757479656718": [], "004490757479656785": [], "004527642308382834": [], "0045276423083829755": [], "004527642308383033": [], "004527642308383043": 23, "00452764230838307": [], "004527642308383079": [], "00452764230838312": [], "004527642308383163": [], "004527642308383249": [], "004527642308383291": [], "004657040705272315": [], "004657040705272434": [], "004657040705272498": [], "0046570407052725134": [], "004657040705272516": [], "004657040705272536": 23, "004657040705272537": [], "004657040705272617": [], "004657040705272671": [], "004657040705272719": [], "0046913782510751584": 36, "004691378251075159": 36, "004778610916794526": [], "004778610916794565": [], "004778610916794585": [], "004778610916794633": [], "004778610916794685": [], "004778610916794713": 23, "004778610916794743": [], "00477861091679476": [], "004778610916794764": [], "004778610916794783": [], "00478515625": 80, "004867": 77, "0048894019445671665": [], "004889401944567167": [], "004889401944567177": [], "004889401944567226": [], "004889401944567251": [], "004889401944567298": [], "004889401944567302": [], "004889401944567307": 23, "004889401944567311": [], "0048953512185132084": 36, "004895351218513209": 36, "00489535121851321": 36, "004torr_lt_aft": [20, 42, 397, 413], "005004969613317298": [], "00500496961331734": [], "005004969613317403": [], "005004969613317419": 23, "0050049696133174565": [], "005004969613317457": [], "005004969613317493": [], "005004969613317504": [], "005004969613317509": [], "005004969613317543": [], "005099324185951259": 36, "00509932418595126": 36, "005110269931845129": 23, "005110269931845177": [], "00511026993184526": [], "0051102699318453255": [], "005110269931845348": [], "005110269931845353": [], "005110269931845464": [], "005110269931845478": [], "005110269931845495": [], "005110269931845539": [], "005124394633029984": [], "005124394633030045": [], "005124394633030091": [], "005124394633030133": [], "005124394633030139": [], "0051243946330301856": [], "005124394633030209": [], "0051243946330302445": 23, "005124394633030248": [], "005124394633030367": [], "00516": 404, "005203284939611424": [], "005203284939611518": [], "005203284939611568": [], "005203284939611578": [], "005203284939611601": [], "005203284939611622": [], "005203284939611627": [], "005203284939611634": 23, "005203284939611756": [], "005205": 390, "005288054442074861": [], "005288054442074903": 23, "005288054442074997": [], "005288054442075028": [], "005288054442075051": [], "005288054442075067": [], "0052880544420750766": [], "005288054442075107": [], "005288054442075216": [], "005288054442075227": [], "00530329715338931": 36, "005303297153389311": 36, "005375194673451671": [], "0053751946734516935": [], "00537519467345171": [], "005375194673451726": 23, "00537519467345174": [], "005375194673451789": [], "005375194673451805": [], "005375194673451879": [], "005460760674075549": 23, "005460760674075811": [], "00546076067407584": [], "005460760674075855": [], "005460760674075907": [], "005460760674075948": [], "005460760674075951": [], "005460760674075967": [], "005460760674075973": [], "005460760674075977": [], "00550727012082736": 36, "00552913518316692": [], "00552913518316693": [], "0055291351831669505": [], "005529135183166995": [], "005529135183167026": [], "005529135183167029": 23, "005529135183167037": [], "00552913518316708": [], "005529135183167104": [], "005529135183167137": [], "005587736630048236": [], "00558773663004826": [], "005587736630048297": [], "005587736630048305": 23, "005587736630048308": [], "005587736630048348": [], "005587736630048356": [], "005587736630048391": [], "005587736630048417": [], "0055877366300484425": [], "005607": 75, "005667827078790627": [], "005667827078790734": [], "005667827078790757": [], "005667827078790864": [], "005667827078790868": [], "005667827078790878": [], "0056678270787908795": 23, "005667827078790936": [], "005667827078791023": [], "005667827078791108": [], "005700606624644739": [], "005700606624644757": [], "005700606624644789": [], "005700606624644805": 23, "005700606624644878": [], "005700606624644937": [], "005700606624644948": [], "005700606624645001": [], "005700606624645097": [], "005700606624645106": [], "00571124308826541": 36, "005711243088265411": 36, "00573333288991884": 23, "005733332889918853": [], "005733332889918882": [], "005733332889918931": [], "005733332889918937": [], "005733332889918943": [], "0057333328899189726": [], "005733332889919016": [], "005733332889919024": [], "0057333328899191": [], "0057421875": 80, "005742187500000001": 80, "005756947971777755": [], "00575694797177776": 23, "005756947971777867": [], "005756947971777891": [], "00575694797177791": [], "005756947971777928": [], "005756947971777973": [], "005756947971777976": [], "00575694797177805": [], "005756947971778051": [], "00577236765882972": [], "0057723676588298635": [], "005772367658829879": [], "005772367658829908": [], "005772367658829912": [], "005772367658829918": [], "005772367658829953": 23, "005772367658829963": [], "00577236765882997": [], "005772367658830067": [], "00580291802853383": [], "005802918028533896": [], "005802918028533941": [], "005802918028533955": [], "0058029180285339745": 23, "00580291802853398": [], "005802918028533991": [], "005802918028534032": [], "005802918028534034": [], "005802918028534066": [], "005861": 22, "005863": 22, "005868357891308699": [], "005868357891308704": [], "005868357891308719": [], "005868357891308758": [], "0058683578913087675": [], "005868357891308798": [], "005868357891308822": 23, "0058683578913088326": [], "005868357891308888": [], "005868357891308892": [], "005886": 22, "00591521605570346": 36, "005915216055703461": 36, "005915216055703462": 36, "00600077780633922": 23, "006000777806339232": [], "0060007778063392875": [], "006000777806339307": [], "006000777806339316": [], "00600077780633938": [], "006000777806339406": [], "006000777806339454": [], "0060007778063394645": [], "006000777806339638": [], "006057238974457479": 23, "006057238974457571": [], "006057238974457656": [], "006057238974457674": [], "006057238974457678": [], "006057238974457693": [], "006057238974457711": [], "006057238974457755": [], "006057238974457785": [], "0060572389744578264": [], "00611918902314151": 36, "006119189023141511": 36, "006191": 75, "00619111512528191": [], "006191115125281993": [], "006191115125282028": [], "00619111512528203": [], "006191115125282034": [], "006191115125282101": [], "006191115125282105": [], "006191115125282111": [], "006191115125282141": 23, "006191115125282167": [], "006238616114828073": [], "006238616114828121": [], "0062386161148282": [], "006238616114828245": [], "006238616114828317": [], "006238616114828343": 23, "006238616114828368": [], "006238616114828388": [], "006238616114828462": [], "006238616114828473": [], "006323161990579561": 36, "006323161990579562": 36, "006457414370354841": 23, "006457414370354869": [], "006457414370354921": [], "0064574143703549376": [], "00645741437035494": [], "00645741437035495": [], "006457414370354977": [], "006457414370354988": [], "006457414370355077": [], "006457414370355108": [], "006515": 404, "006527134958017611": 36, "006527134958017612": 36, "006566": 404, "0066992187499999994": 80, "00669921875": 80, "006699218750000001": 80, "006731107925455662": 36, "006731107925455663": 36, "006776": 25, "006849": 75, "006935080892893713": 36, "0069350808928937135": 36, "00695747161015894": [], "00695747161015896": [], "006957471610158991": [], "0069574716101589995": [], "006957471610159068": [], "0069574716101590845": 23, "006957471610159159": [], "006957471610159187": [], "006957471610159207": [], "006957471610159234": [], "007": 95, "007001": [390, 391], "007104": 75, "007139053860331762": 36, "0071390538603317635": 36, "007139053860331764": 36, "007194": 390, "0072": 26, "007200": 405, "007262": [114, 366], "007299": [114, 366], "0072b2": 405, "007331": [390, 391], "007343026827769813": 36, "0075469997952078635": 36, "007546999795207864": 36, "00765625": 80, "007656250000000002": 80, "007750972762645915": 36, "00777050252991431": 23, "007770502529914391": [], "007770502529914399": [], "007770502529914407": [], "007770502529914412": [], "007770502529914433": [], "007770502529914441": [], "007770502529914477": [], "007770502529914506": [], "007770502529914539": [], "007919": 75, "007954945730083965": 36, "007954945730083967": 36, "008016534827385331": [], "008016534827385574": [], "00801653482738566": [], "0080165348273857": [], "008016534827385707": 23, "008016534827385766": [], "008016534827385804": [], "008016534827385872": [], "008016534827385883": [], "008016534827385895": [], "008121": [390, 391], "008158918697522015": 36, "008362891664960065": 36, "008362891664960067": 36, "008566864632398115": 36, "00861328125": 80, "008682": 390, "008770837599836167": 36, "008843": 75, "008974810567274217": 36, "009": [20, 95], "00900": [42, 91], "009178783534712267": 36, "009201": 75, "009261179153190023": [], "009261179153190028": [], "009261179153190045": 23, "00926117915319006": [], "009261179153190108": [], "009261179153190139": [], "00926117915319016": [], "009261179153190269": [], "009261179153190292": [], "0092611791531903": [], "009262": [], "009276": 76, "009396": [], "009570312499999999": 80, "0095703125": 80, "009586729469588367": 36, "009790702437026419": 36, "009994675404464467": 36, "009994675404464469": 36, "009e73": 405, "01": [20, 24, 25, 27, 30, 36, 42, 44, 46, 56, 69, 75, 76, 77, 80, 91, 386, 389, 390, 391, 392, 393, 397, 400, 402, 404, 407, 409, 411, 413, 416, 418], "010": 75, "0100": 26, "010198648371902519": 36, "010402621339340569": 36, "0105": 95, "010527343750000001": 80, "01060659430677862": 36, "010606594306778622": 36, "010676123451467736": [], "010676123451468351": [], "01067612345146846": [], "010676123451468487": [], "010676123451468499": [], "01067612345146854": [], "010676123451468551": 23, "010676123451468626": [], "010676123451468686": [], "01067612345146877": [], "010810567274216669": 36, "01081056727421667": 36, "01094": 404, "011014540241654722": 36, "01139": [390, 391], "011422486176530822": 36, "011484375": 80, "011484375000000002": 80, "011626459143968872": 36, "011732197722809675": [], "011732197722809676": [], "011732197722809682": [], "01173219772280969": [], "011732197722809694": [], "011732197722809755": [], "011732197722809793": [], "011732197722809794": [], "011732197722809814": 23, "01173219772280985": [], "01183": 76, "011830432111406922": 36, "012": [46, 91, 393, 416], "012238378046283024": 36, "01244140625": 80, "012441406250000002": 80, "012442351013721074": 36, "012646323981159122": 36, "012646323981159124": 36, "01285": [390, 391], "012850296948597174": 36, "012850296948597175": 36, "0129": 77, "012e": 390, "013": [1, 46, 91, 393, 416], "013054269916035224": 36, "013258242883473277": 36, "013398437499999999": 80, "0133984375": 80, "013462215850911324": 36, "013666188818349375": 36, "013870161785787427": 36, "014": 20, "01400": [42, 91], "01425": 76, "014278107720663527": 36, "014282427091626951": [], "014282427091627565": [], "014282427091627813": [], "014282427091627848": 23, "01428242709162787": [], "014282427091627893": [], "014282427091627975": [], "014282427091627992": [], "014282427091628112": [], "014282427091628146": [], "01435546875": 80, "014355468750000001": 80, "0144": [390, 391], "014686053655539629": 36, "0147": 32, "014890026622977677": 36, "015": 75, "01501": 77, "01525": [390, 391], "015297972557853779": 36, "0153125": 80, "015501945525291825": 36, "015501945525291829": 36, "015705918492729877": 36, "016": [], "01611386442760598": 36, "01617": [390, 391], "01626953125": 80, "016289564836607193": [], "01628956483660725": [], "016289564836607307": 23, "016289564836607342": [], "016289564836607352": [], "016289564836607366": [], "016289564836607373": [], "016289564836607387": [], "016289564836607436": [], "016289564836607446": [], "01631783739504403": 36, "016521810362482077": 36, "01652181036248208": 36, "01672578332992013": 36, "0168": 95, "0168583x88900638": 95, "01713372926479623": 36, "01733770223223428": 36, "01754167519967233": 36, "017541675199672334": 36, "01774564816711038": 36, "017745648167110387": 36, "01794962113454843": 36, "017949621134548434": 36, "018": [95, 385, 392], "018183593750000004": 80, "01823": [], "01835756706942453": 36, "018357567069424534": 36, "01868": 75, "018705054318854334": [], "018705054318854972": [], "018705054318855205": [], "018705054318855212": [], "01870505431885528": 23, "018705054318855302": [], "018705054318855347": [], "018705054318855403": [], "01870505431885551": [], "018705054318855528": [], "018765513004300634": 36, "018765513004300637": 36, "01885": 75, "019140624999999998": 80, "019140625": 80, "01917345893917673": 36, "019377431906614787": 36, "01969": [390, 391], "01998": [], "019989350808928937": 36, "02": [20, 25, 27, 42, 46, 52, 56, 69, 78, 91, 95, 385, 386, 390, 392, 393, 397, 402, 413, 414, 416, 418], "020": [], "020193323776366987": 36, "0202": [], "020397296743805037": 36, "02039729674380504": 36, "02067": 404, "020846": 22, "021": 20, "02100": [42, 91], "021009215646119187": 36, "02100921564611919": 36, "02111": 75, "02121318861355724": 36, "021417161580995294": 36, "02162113454843334": 36, "021torr_lt_aft": 413, "022": [], "02201171875": 80, "022012": 390, "022029080483309437": 36, "02243702641818554": 36, "022640999385623594": 36, "022835": 22, "02284497235306164": 36, "022844972353061644": 36, "023155912689776535": [], "023155912689776566": 23, "023155912689776625": [], "02315591268977666": [], "023155912689776688": [], "02315591268977671": [], "023155912689776747": [], "02315591268977677": [], "023155912689776983": [], "02345689125537579": 36, "023456891255375794": 36, "02366086422281384": 36, "023660864222813844": 36, "023864837190251897": 36, "02392578125": 80, "024": [95, 385], "024000077998568587": [], "024000077998569205": [], "024000077998569364": [], "024000077998569444": [], "024000077998569496": [], "02400007799856952": 23, "024000077998569614": [], "024000077998569642": [], "02400007799856973": [], "02400007799856975": [], "024476756092566044": 36, "024549098196392786": 80, "024884702027442147": 36, "025": [], "025004": 95, "025088674994880197": 36, "025292647962318247": 36, "025496620929756297": 36, "02556": 75, "02561": [], "026": [20, 56, 386], "02600": [42, 91], "02603": 77, "0263": 26, "02654": 404, "0267204587343846": 36, "02692443170182265": 36, "027": [], "027128404669260704": 36, "02719": 75, "02733237763669875": 36, "027740323571574854": 36, "027753906249999998": 80, "02775390625": 80, "02791": 24, "02799": 76, "028": 75, "0282": 404, "028556215441327054": 36, "028710937500000002": 80, "02896416137620315": 36, "02949": 404, "029576080278517308": 36, "029984026213393408": 36, "03": [20, 25, 36, 42, 44, 46, 52, 81, 91, 95, 386, 390, 393, 397, 402, 404, 413, 416, 418], "030324671559647312": [], "030324671559647968": [], "03032467155964797": [], "03032467155964813": [], "030324671559648166": [], "030324671559648242": [], "030324671559648252": 23, "03032467155964833": [], "030324671559648356": [], "030324671559648412": [], "03049": 76, "030595945115707558": 36, "03068": 404, "03083": 76, "031003891050583657": 36, "03161580995289781": 36, "03181978292033586": 36, "03181978292033587": 36, "03222772885521196": 36, "03253": 402, "03262": 404, "032662": 22, "03283964775752612": 36, "033": [46, 91, 393, 397, 416], "03365553962727831": 36, "03406348556215441": 36, "03426745852959247": 36, "03438": 76, "034453125": 80, "03447143149703052": 36, "03467540446446856": 36, "03477774452872486": [], "03477774452872489": 23, "03477774452872492": [], "034777744528724966": [], "03477774452872503": [], "034777744528725105": [], "03477774452872513": [], "034777744528725174": [], "03477774452872545": [], "0348": [], "03487937743190662": 36, "03528732336678271": 36, "03528732336678272": 36, "03569526930165882": 36, "036": 20, "03600": [42, 91], "0363671875": 80, "03644": [], "03651116117141102": 36, "036715134138849075": 36, "03691910710628712": 36, "036919107106287125": 36, "037": [46, 91, 393, 416], "03712308007372517": 36, "037123080073725175": 36, "037327053041163225": 36, "037531026008601275": 36, "03754": [], "03773499897603932": 36, "0377627010107233": [], "03776270101072382": [], "03776270101072393": [], "037762701010723945": [], "03776270101072406": [], "03776270101072416": [], "03776270101072417": [], "03776270101072418": 23, "03776270101072423": [], "03776270101072436": [], "03793897194347737": 36, "03804": 25, "038142944910915424": 36, "03814294491091543": 36, "038550890845791524": 36, "03864": [], "038754863813229574": 36, "039": [], "039366782715543724": 36, "039570755682981774": 36, "03977472865041982": 36, "039774728650419824": 36, "039978701617857874": 36, "03j": 404, "04": [20, 25, 36, 46, 75, 77, 91, 128, 390, 393, 402, 404, 407, 409, 410, 416, 418], "040": [], "04018267458529593": 36, "040386647552733974": 36, "04044": 76, "04077817": [95, 385], "04079459348761008": 36, "04099856645504813": 36, "041": [], "041152343749999994": 80, "041202539422486174": 36, "04120253942248618": 36, "041406512389924224": 36, "04140651238992423": 36, "041814458324800324": 36, "042018431292238374": 36, "042109375000000004": 80, "04222240425967643": 36, "04233": [], "04242637722711448": 36, "042630350194552524": 36, "04283432316199059": 36, "043242269096866674": 36, "04324226909686668": 36, "04344624206430473": 36, "04385418799918083": 36, "04405816096661888": 36, "04405816096661889": 36, "044452701": 95, "04446610690149498": 36, "0446": 24, "04467007986893304": 36, "04476": 75, "045": [], "04528199877124719": 36, "04565": 404, "04568994470612329": 36, "04589391767356134": 36, "0459375": 80, "04616": 76, "04639710696895008": [], "046397106968950504": [], "046397106968950656": [], "046397106968950774": [], "04639710696895078": [], "046397106968950795": [], "04639710696895083": [], "04639710696895087": 23, "04639710696895089": [], "046397106968951045": [], "04650583657587549": 36, "046709809543313545": 36, "04691378251075158": 36, "047117755478189645": 36, "04772967438050378": 36, "04772967438050379": 36, "047729674380503795": 36, "04854556625025599": 36, "048763": [21, 390], "04880859374999999": 80, "04893": [], "04895": [], "048953512185132095": 36, "049565431087446245": 36, "049765624999999994": 80, "04998": 22, "04_mo_al2o3_calc_0": [20, 42, 397, 413], "04_mo_al2o3_calc_1": [20, 42, 397, 413], "04e": 404, "05": [2, 22, 23, 25, 52, 98, 99, 114, 121, 144, 244, 245, 253, 386, 389, 390, 392, 395, 397, 402, 405, 407, 413, 418], "050177349989760395": 36, "05021": 22, "05039": 22, "05042": 22, "05061": 392, "05072265625": 80, "05078": 20, "0509932418595126": 36, "051": 20, "05100": [42, 91], "051183": 22, "05134": 404, "051605160761826745": 36, "05167968750000001": 80, "052013106696702845": 36, "05201310669670285": 36, "05227": 20, "05242": 76, "05263671875": 80, "052636718750000006": 80, "05273": [404, 409], "0527j": 404, "05323694450133115": 36, "05339": 76, "05341": 76, "053593749999999996": 80, "05359375000000001": 80, "053644890436207245": 36, "05364489043620726": 36, "054": [], "05405283637108335": 36, "05455078125": 80, "05486872824083556": 36, "055507812499999996": 80, "0555078125": 80, "056": 389, "05609256604546385": 36, "0563": 404, "05646484375": 80, "056704484947778015": 36, "05685": 404, "056e": 24, "057": [46, 91, 393, 416], "05726304883639045": [], "05726304883639085": [], "057263048836391": [], "05726304883639102": [], "05726304883639109": [], "0572630488363911": [], "05726304883639114": [], "057263048836391155": 23, "05726304883639131": [], "057263048836391404": [], "057421875": 80, "057421875000000004": 80, "058": 392, "05831": 404, "05837890625": 80, "05854024165472045": 36, "058744214622158515": 36, "059": [27, 128, 386], "05933593749999999": 80, "0593359375": 80, "05957": 75, "05969": 404, "05994": 404, "06": [20, 25, 37, 42, 46, 91, 95, 122, 128, 386, 393, 397, 413, 416, 461], "060": [], "06006": 76, "060292968749999995": 80, "06029296875": 80, "06098791726397707": 36, "061": [46, 91, 393, 416], "061191890231415115": 36, "06124999999999999": 80, "06125": 80, "06158195065493223": 23, "061581950654932244": [], "061581950654932265": [], "061581950654932285": [], "061581950654932376": [], "061581950654932424": [], "06158195065493264": [], "061581950654932785": [], "061581950654932896": [], "062007782101167315": 36, "06200778210116732": 36, "06203": [404, 409], "06219": [76, 404], "062207031249999996": 80, "06220703125": 80, "06220703125000001": 80, "06241572803604341": 36, "06261970100348146": 36, "06282367397091952": 36, "06298": [114, 366], "062j": 404, "0631640625": 80, "06343559287323366": 36, "06344": 76, "06363956584067172": 36, "06366": 76, "06389": 76, "064": 392, "06404751177554782": 36, "06412109375": 80, "06424": 20, "06425148474298586": 36, "06438": [114, 366], "06445545771042394": 36, "06486340364530002": 36, "065": [], "06506737661273808": 36, "065078125": 80, "06527134958017612": 36, "06547532254761418": 36, "06586": [], "0659": 20, "06608724144992832": 36, "06629121441736636": 36, "06649518738480444": 36, "06669916035224248": 36, "0669921875": 80, "06717": 404, "06731107925455662": 36, "06793": 76, "06811": [], "06812697112430882": 36, "06853491705918492": 36, "0689": 392, "0689001083": 392, "06890625": 80, "069": [75, 392], "0690": 392, "06914683596149908": 36, "06948": 76, "06996272783125128": 36, "07": [25, 46, 75, 91, 393, 397, 404, 416, 418], "07037067376612738": 36, "0708203125": 80, "07082031250000001": 80, "07097": [], "07098259266844155": 36, "07123": 76, "0714": 20, "0717021": 95, "072": [], "07266533066132265": 80, "072734375": 80, "0732": 76, "07322629531026009": 36, "07383821421257424": 36, "07386553913526255": [], "07386553913526324": [], "07386553913526347": [], "07386553913526378": [], "07386553913526381": [], "07386553913526386": [], "07386553913526397": 23, "07386553913526453": [], "07386553913526468": [], "07434": 76, "07464843750000001": 80, "07485807904976449": 36, "07546999795207865": 36, "07548": [24, 76], "075698": [], "075884": [], "076": [], "07624": 24, "07648986278926889": 36, "07666": 97, "07669383575670694": 36, "076753": [], "07689780872414499": 36, "077381": 22, "07779": 76, "07791767356133524": 36, "07812164652877329": 36, "0785295924636494": 36, "078656": 22, "078877": [], "07901": 402, "07914151136596355": 36, "079192": [], "0793454843334016": 36, "07951": 76, "079514": [], "07955": 76, "079589": [], "0797534302682777": 36, "079853": [], "08": 392, "080": [], "080107": [], "080128": 22, "08021": [], "080449": [], "080491": [], "0805693221380299": 36, "08058": 404, "08065": 76, "080657": [], "080773": [], "080898": [], "080925": [], "080959": [], "081": 392, "08118124104034405": 36, "081186": [], "081349": [], "081373": [], "081651": [], "081755": [], "081777": [], "0817931599426582": 36, "08239": 404, "08240507884497236": 36, "0826090518124104": 36, "08260905181241042": 36, "08281302477984845": 36, "083": 392, "083010": [], "08362891664960066": 36, "08421875000000001": 80, "08434": 75, "08437": 77, "08444480851935286": 36, "08452": 24, "08463": 76, "0847": 76, "08499": [], "08521": [114, 353], "08543": [114, 353], "08574": 76, "08583": [], "085870": [], "086": [], "0861328125": 80, "086602": [], "08668851116117142": 36, "08693": 77, "087494": [], "08752": 404, "08770837599836166": 36, "087988": [], "08804": 76, "088663": [], "088943": [], "088945": [], "08905": 76, "089078": [], "089704": [], "08995207864018022": 36, "089984": [], "08e": 404, "09": [2, 20, 24, 25, 42, 46, 75, 76, 77, 78, 91, 386, 390, 391, 393, 397, 400, 402, 404, 407, 409, 411, 413, 416, 418], "090": 392, "09091796875": 80, "090999": [], "091": 397, "0913": 76, "092": 75, "09219578128199876": 36, "09235": 77, "09248": [], "092614": [], "093": 20, "09300": [42, 91], "093491": [], "09363": [], "09386": 76, "094": [], "09401": [], "09448": 76, "095": [], "09519": [], "09539": 76, "09555": 76, "09588": 76, "096": [], "09689398092857869": [], "09689398092857897": [], "0968939809285792": [], "09689398092857929": [], "0968939809285794": [], "09689398092857941": [], "09689398092857952": [], "09689398092857968": [], "09689398092857979": 23, "09689398092858041": [], "09699": 76, "09857421875000001": 80, "099": [77, 390], "09903": 24, "09e": 20, "0e3": 97, "0e8": 97, "0f": 392, "0j": [7, 411], "0k": 97, "0px": 404, "0x7efd05203890": 391, "0x7efd0c0b0690": 9, "0x7efd0e6d7690": 391, "0x7eff94a69950": [], "0x7eff94e73a90": [], "0x7eff94fe1c10": [], "0x7eff9e9f20d0": [], "0x7effba920dd0": [], "0x7effbbf3f510": [], "0x7effc85c15d0": [], "0x7effc889a450": [], "0x7f08b5a45490": [], "0x7f08e2bae1d0": [], "0x7f0984be6d50": [], "0x7f0a98a31bd0": [], "0x7f0c58fc55d0": [], "0x7f0d22b51010": [], "0x7f0d5cf20d50": [], "0x7f0d5d3ed0d0": [], "0x7f0d666bf950": [], "0x7f0d66782490": [], "0x7f148b9032d0": [], "0x7f148b957450": [], "0x7f19aa75b710": [], "0x7f1a5a2da5d0": 390, "0x7f1a5a5a7550": 390, "0x7f1a5a6c5150": 390, "0x7f1a5a7d1350": 390, "0x7f1d82018c10": [], "0x7f1ea9781d90": 33, "0x7f200d6d0150": [], "0x7f200db1b950": [], "0x7f200de11050": [], "0x7f201785a110": [], "0x7f21e9c86550": [], "0x7f230ef7f050": [], "0x7f2a264a7090": [], "0x7f321afbe390": [], "0x7f321b0bde10": [], "0x7f33c2d32d10": [], "0x7f3481928290": [], "0x7f38ec0e59d0": [], "0x7f3ef4544c10": [], "0x7f4004bc1e50": [], "0x7f40f0fe1ed0": [], "0x7f4d682f98d0": [], "0x7f515566d590": [], "0x7f51dd998150": [], "0x7f53d65fd8d0": [], "0x7f53e1d46050": [], "0x7f554b11bf10": [], "0x7f5c5c6deb90": [], "0x7f5c5cb1fc50": [], "0x7f5fad23a210": [], "0x7f609862a990": [], "0x7f6098b95c90": [], "0x7f6098d0cf10": [], "0x7f6098d3f990": [], "0x7f60c46877d0": [], "0x7f60c4bb7a50": [], "0x7f61f2766ed0": [], "0x7f61f2c9f650": [], "0x7f620010dd90": [], "0x7f62007da810": [], "0x7f75a891d450": [], "0x7f75a9bbebd0": [], "0x7f75f60da850": [], "0x7f768f83a3d0": [], "0x7f776db44310": [], "0x7f77729f7650": 20, "0x7f7af484c6d0": [], "0x7f7af4d4e010": [], "0x7f7af5190550": [], "0x7f7af5322e10": [], "0x7f841039a910": [], "0x7f8962566bd0": [], "0x7f8f449acc50": [], "0x7f9438a12350": [], "0x7f9767f1f610": [], "0x7f97683f2190": [], "0x7f97695591d0": [], "0x7f977181b010": [], "0x7f97b97b65d0": [], "0x7f97cdc5e410": [], "0x7f99f8f03550": [], "0x7f99fa1a1850": [], "0x7f9d11f401d0": [], "0x7f9f032847d0": [], "0x7f9f041bf890": 25, "0x7fa004f79850": [], "0x7fa2010c8450": [], "0x7fa36a922bd0": [], "0x7fa9c6de4f50": [], "0x7fab470109d0": [], "0x7fac29b76c10": [], "0x7fac9d51d210": [], "0x7fb0b67a80d0": [], "0x7fb0b68a76d0": [], "0x7fb4470e2390": [], "0x7fb83b011390": [], "0x7fbb08b588d0": 26, "0x7fbc580e5950": [], "0x7fc2e63ee0d0": [], "0x7fc3e592e8d0": 18, "0x7fc6b38c5f10": [], "0x7fc76191e1d0": [], "0x7fc8f548a090": [], "0x7fc978251fd0": [], "0x7fc9a8fc3f50": [], "0x7fca298e7d50": [], "0x7fcae94aac90": 22, "0x7fcde3d36450": [], "0x7fcde4047890": [], "0x7fcded7976d0": [], "0x7fcdedc45510": [], "0x7fce81a3db10": 24, "0x7fd04b0b4710": [], "0x7fd12686f350": [], "0x7fd1269b4150": [], "0x7fd584e63150": [], "0x7fd9aa71cfd0": [], "0x7fdc06993590": [], "0x7fdff0944ed0": [], "0x7fe297de2850": [], "0x7fe30ba5d910": [], "0x7fe413d2dd10": [], "0x7fe41d4c3bd0": [], "0x7fe63f14f0d0": [], "0x7ff5dac7cc50": [], "0x7ff6180b1210": [], "0x7ff9a6a1bd90": [], "1": [0, 2, 7, 8, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 36, 37, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 64, 67, 68, 71, 72, 75, 76, 77, 80, 81, 86, 87, 88, 90, 91, 95, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 130, 131, 132, 137, 138, 140, 144, 145, 147, 148, 151, 153, 158, 160, 165, 166, 167, 170, 171, 174, 176, 178, 182, 184, 185, 188, 189, 190, 192, 197, 198, 202, 207, 210, 212, 213, 214, 221, 222, 227, 228, 231, 234, 235, 236, 237, 242, 244, 245, 247, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 288, 289, 291, 292, 295, 300, 301, 302, 304, 312, 313, 317, 318, 333, 342, 343, 344, 346, 347, 349, 350, 351, 353, 354, 363, 364, 365, 366, 367, 369, 371, 377, 378, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 452, 461, 466, 467], "10": [0, 1, 2, 6, 7, 9, 17, 18, 20, 21, 22, 23, 24, 25, 27, 32, 33, 36, 41, 42, 43, 46, 55, 58, 64, 71, 75, 76, 77, 80, 84, 90, 91, 95, 97, 101, 102, 110, 114, 119, 120, 124, 153, 177, 181, 207, 229, 230, 232, 233, 238, 239, 240, 242, 295, 314, 338, 377, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 444], "100": [7, 24, 41, 55, 63, 75, 76, 77, 100, 102, 114, 120, 128, 160, 312, 317, 338, 354, 383, 389, 390, 391, 393, 397, 402, 405, 406, 409, 414, 415], "1000": [32, 41, 43, 54, 77, 102, 389, 402, 405, 407, 413, 414], "10000": [63, 75, 87, 338, 405], "100000": [98, 99, 244, 253, 405], "1000000000": 388, "1001": [20, 42, 76, 397, 413], "100146": 22, "1002": 95, "10031": 75, "10048828125": 80, "1007": 1, "1008": [404, 409], "100_pd_101": 397, "100_pd_102": 397, "100_pd_103": 397, "100_pd_104": 397, "101": [26, 95, 390, 391, 404], "1012": 76, "1014": 409, "1016": [95, 385], "102": 76, "1021": [95, 385], "1024": [49, 76, 402, 404, 409, 414, 415], "103": 75, "1031": [75, 409], "1037": [404, 409], "1038": [95, 385], "1039": [95, 385], "104": [338, 404], "1048": [], "105": [2, 59, 386, 404], "1055": 76, "1056": 20, "106": [392, 404], "1061": [], "1068": 76, "107": [], "1071": 95, "1075": 76, "107592": 22, "1076": 95, "1078": [404, 409], "107868": [], "1079": 409, "108": [], "108091": [], "108321": [], "1084": 20, "108606": [], "108652": [], "108656": [], "108774": [], "1088": 95, "108961": [], "109": 404, "1091": 76, "1092": 76, "1093": 409, "1094": 76, "10x10": 413, "11": [2, 17, 18, 20, 22, 24, 25, 33, 36, 41, 42, 43, 58, 68, 75, 76, 77, 80, 91, 95, 388, 389, 390, 391, 392, 394, 395, 397, 402, 404, 405, 406, 407, 408, 409, 411, 413, 414, 416, 418, 467], "110": [26, 75, 95, 390, 391, 404], "1100": 416, "1102": [], "1106": 75, "1108": 76, "1109": 95, "11098": [114, 153, 295, 303], "111111111111": 405, "1112355f": 397, "1114": 76, "1116": 76, "1117": 76, "112": 404, "1129296875": 80, "1134": 76, "1137": 95, "11388671875": 80, "114": 404, "1143": [], "11463": 75, "11484375": 80, "115": 77, "1152": 77, "1155": 76, "11580078125000001": 80, "11580078125000003": 80, "116": 404, "1161": [76, 392], "1165": 76, "1166": 24, "1167578125": 80, "117": [30, 386], "1174": 404, "118": [75, 76, 404], "118382": [], "11867187500000001": 80, "1187": [], "1188": 76, "1194": 76, "119699": [95, 385], "1199": [], "12": [2, 6, 17, 18, 20, 22, 24, 25, 36, 41, 42, 52, 58, 75, 76, 77, 78, 80, 91, 95, 101, 388, 389, 390, 391, 392, 394, 397, 402, 404, 405, 406, 407, 409, 411, 413, 414, 416, 418, 425, 467], "120": 397, "1200": 405, "1202": [], "12058593750000002": 80, "1206": 76, "1210271017": 95, "12154296875000001": 80, "12250000000000001": 80, "1229": 76, "1230": 17, "1234": [6, 7, 388], "12345": [101, 114, 357], "12345703125000002": 80, "12381159123489659": 36, "12411": [404, 407, 409], "12487289": 392, "125": 75, "1250": [114, 343, 344, 363, 364, 388, 393], "12537109375000002": 80, "12544337497440097": 36, "1259": 76, "126": 409, "126328125": 80, "1263812450285721": [], "12638124502857212": [], "12638124502857243": [], "12638124502857248": [], "12638124502857312": [], "1263812450285732": [], "12638124502857329": 23, "12638124502857384": [], "1265": 20, "1266672127790293": 36, "1269": 76, "127": 87, "12707515871390537": 36, "12727913168134342": 36, "12728515625000003": 80, "1274831046487815": 36, "128": 410, "1280": [23, 25], "1281": 25, "1287": 76, "129": 75, "1290": [405, 411, 416], "1291": 36, "1292": 76, "1295": 95, "129522834323162": 36, "12972680729060004": 36, "1299307802580381": 36, "13": [2, 7, 17, 20, 24, 25, 36, 41, 42, 46, 58, 75, 76, 77, 80, 91, 95, 388, 389, 390, 391, 392, 393, 394, 397, 402, 404, 405, 406, 407, 409, 411, 413, 414, 416, 418], "130": [], "1300": [114, 176, 388, 393, 402], "13013475322547613": 36, "13015625000000003": 80, "1303": 20, "13033872619291417": 36, "1305": [76, 388], "13095064509522836": 36, "131": 397, "13111328125": 80, "13111328125000002": 80, "13135859103010444": 36, "132": [392, 413], "1320703125": 80, "13217448289985662": 36, "13217448289985664": 36, "1323784558672947": 36, "133": [338, 397], "13302734375000003": 80, "1337": [], "133984375": 80, "13398437500000002": 80, "134": [101, 114, 177], "1340102396067991": 36, "13401023960679911": 36, "13421421257423713": 36, "1344": 404, "1344181855416752": 36, "1347": 389, "13484": 95, "13494140625": 80, "134e": 390, "135": 392, "13505": 95, "13523407741142743": 36, "13543805037886547": 36, "1357": 95, "1358984375": 80, "13589843750000002": 80, "1359924945": 75, "1359949976": 75, "135e": 407, "136": [], "1360100375": 75, "1360112954": 75, "13625394224861764": 36, "1366": [95, 397], "13685546875": 80, "13685546875000001": 80, "1368658611509318": 36, "137": [77, 397, 413], "13706983411836987": 36, "13747778005324596": 36, "13781250000000003": 80, "1380": 76, "13808969895556011": 36, "1387": [], "13870161785787424": 36, "13876953125": 80, "13876953125000002": 80, "13890559082531231": 36, "139": 397, "13972656249999998": 80, "14": [17, 20, 24, 25, 36, 42, 46, 75, 76, 77, 80, 91, 95, 388, 389, 390, 391, 392, 393, 397, 402, 404, 405, 406, 407, 409, 411, 413, 414, 416, 418], "140": [77, 95, 390, 391], "140174210245019": 23, "1401742102450192": [], "14017421024501933": [], "1401742102450195": [], "14017421024501964": [], "14017421024501997": [], "14017421024502014": [], "14017421024502041": [], "1401742102450207": [], "14068359375": 80, "14074134753225476": 36, "14094532049969283": 36, "1413532664345689": 36, "14155723940200696": 36, "14155723940200698": 36, "14164062500000002": 80, "14176121236944503": 36, "14196518533688307": 36, "14237313127175916": 36, "14237313127175918": 36, "14259765625000004": 80, "1428": 20, "1429850501740733": 36, "143": 20, "1435546875": 80, "14359696907638747": 36, "144": 392, "14441286094613967": 36, "1454327257833299": 36, "14546875": 80, "1455": [114, 176], "14563669875076798": 36, "14570219": 95, "1461": [], "14642578125": 80, "14658624": 95, "14665656358795823": 36, "1467": 404, "147": [49, 402, 404], "1470645095228343": 36, "1476798575": 397, "1476798846": 397, "1476806493": 397, "1476806797": 397, "148": [], "1482": 402, "14833984374999998": 80, "14e": 20, "15": [17, 18, 19, 20, 24, 25, 36, 42, 75, 76, 77, 80, 91, 95, 127, 388, 389, 390, 391, 392, 397, 402, 404, 405, 406, 407, 409, 411, 413, 414, 416, 418], "150": [20, 24, 29], "1500": [77, 114, 146, 294], "15000": [42, 63, 64, 91, 407, 409], "15025390625": 80, "151": [95, 397], "1511": [], "152": 7, "1529": 51, "1529cm": 51, "155": 24, "1550": [100, 388, 393], "1555": [100, 388], "1556": [36, 77, 413], "156": [], "1562": 402, "1568": 36, "1570": 393, "15711422845691383": 80, "15791015625": 80, "15791015625000002": 80, "15798": [101, 410], "15982421875000002": 80, "16": [2, 20, 24, 25, 36, 42, 75, 76, 80, 90, 95, 101, 114, 178, 388, 389, 390, 391, 392, 397, 402, 404, 405, 406, 409, 411, 413, 414, 418], "1600": [114, 146, 294, 402], "16000": 75, "1600437": 392, "162": [75, 95, 397, 402], "1622": 75, "1623": 404, "1636589757375482": [], "1636589757375488": [], "16365897573754962": [], "1636589757375497": [], "16365897573755067": [], "1636589757375511": [], "1636589757375513": 23, "16365897573755137": [], "16365897573755164": [], "16365897573755273": [], "16384": 409, "1639": [], "1644": [101, 114, 176], "165": [114, 153, 295], "166": [], "1662": 404, "167": [56, 386, 392], "1687": [], "16975": [114, 314], "17": [20, 22, 25, 36, 42, 46, 75, 76, 80, 88, 91, 95, 388, 389, 390, 391, 392, 393, 397, 402, 404, 405, 406, 409, 411, 413, 414, 416, 418], "171": 75, "1734": 24, "174": 75, "1740": 393, "175": [25, 402], "1750": 402, "1755": [], "176": [], "176e": 390, "177": [24, 37, 75, 386], "17800781250000003": 80, "179": [24, 95], "1795": 36, "1799": [], "18": [20, 25, 36, 42, 75, 76, 80, 95, 388, 389, 390, 392, 397, 402, 404, 405, 406, 409, 411, 413, 414, 418, 444], "180": 413, "1800": [114, 176, 343, 344, 363, 364, 393], "181": 95, "1813": [], "184": [], "1842": [5, 114, 318], "1856": 388, "185e": 128, "186": 75, "1862": [], "1868": 396, "187": 409, "1879": 97, "188": 24, "1899": 392, "19": [20, 25, 27, 42, 46, 75, 76, 80, 91, 95, 388, 389, 390, 392, 393, 397, 402, 404, 405, 406, 411, 413, 414, 416, 418, 449], "1900": [392, 413], "191216": 50, "192": [], "193": 56, "1934": [], "1936": 24, "194": [], "19403": 95, "19417": 95, "1947": 75, "1950": [20, 42, 91], "1956": 36, "196": 75, "196608": [49, 402, 404], "197": [], "1970": 397, "198": [46, 91, 393, 416, 431], "1980": 95, "1982": 77, "1985": 404, "1986": [95, 104, 383], "1988": [95, 98, 114, 244, 252, 308, 348, 397], "199": [392, 436], "1992": [18, 95, 104], "199456453": 392, "1995": 392, "1997": [95, 127], "1999": 96, "19e": 397, "1d": [5, 7, 31, 38, 45, 54, 60, 83, 98, 101, 107, 111, 112, 114, 118, 119, 145, 146, 147, 167, 176, 177, 183, 195, 208, 214, 216, 218, 227, 231, 234, 235, 236, 237, 242, 244, 288, 294, 304, 306, 321, 342, 367, 371, 383, 389, 403, 412, 413, 414, 421, 428, 436, 438, 465], "1e": [75, 97, 114, 121, 122, 124, 144, 245, 411], "1e4": 75, "1e5": [114, 144, 245], "1e9": [98, 99, 114, 144, 244, 245, 253], "1f": [75, 76], "1j": 7, "1mm": 397, "1r": 75, "1st": [111, 113, 392, 397, 413], "2": [2, 6, 7, 8, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 75, 76, 77, 80, 87, 90, 91, 95, 97, 98, 99, 100, 101, 104, 105, 107, 110, 111, 112, 113, 114, 117, 118, 120, 122, 123, 124, 127, 133, 134, 148, 153, 158, 164, 165, 166, 167, 168, 171, 174, 176, 181, 183, 184, 188, 189, 190, 192, 197, 198, 201, 208, 211, 214, 221, 222, 227, 242, 244, 247, 253, 256, 259, 260, 261, 262, 263, 266, 271, 272, 287, 288, 289, 291, 292, 295, 296, 297, 298, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 344, 347, 350, 352, 353, 360, 366, 369, 371, 377, 378, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 440, 463], "20": [0, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 91, 95, 101, 102, 114, 140, 310, 311, 312, 317, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 452], "200": [23, 36, 41, 75, 105, 117, 124, 388, 389, 402, 405, 407, 413], "2000": [91, 96, 100, 388, 389, 406, 407], "20000": 405, "2001": [22, 95], "2003": [95, 114, 164, 287, 292, 369, 408, 414], "2004": 95, "2005": [16, 19, 22, 26, 38, 83, 95, 98, 113, 114, 144, 244, 245, 302, 390, 391], "2006": 2, "2008": [145, 389], "2009": [95, 97, 383], "200e": 124, "2013": [1, 95, 110], "2014": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 90, 91, 95, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "2015": [21, 95, 388, 390, 391], "2016": [20, 25, 42, 46, 91, 393, 397, 413, 416], "2017": [114, 292, 369], "2018": [95, 113, 114, 164, 287, 397, 408], "2019": [46, 461], "2020": [88, 95, 110, 383, 385, 395], "2021": [90, 95, 418], "2022": [95, 418], "2023": [95, 418], "2024": 95, "2025": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 91, 95, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "203": 20, "20300": [42, 91], "204": [21, 26, 390, 391], "2048": 76, "205": 25, "2064": [], "2072": 392, "2073": 392, "2074": [96, 392], "2075": 392, "2079": 95, "208": [], "20863281250000001": 80, "209": 18, "2090": 392, "2093": 392, "2094": [], "21": [25, 46, 68, 75, 76, 80, 91, 95, 388, 390, 392, 393, 397, 402, 404, 405, 408, 411, 414, 416, 418], "2100": 388, "2105": 24, "211": [], "21103839273441766": [], "21103839273441932": [], "21103839273442032": [], "2110383927344208": [], "21103839273442265": [], "21103839273442304": [], "2110383927344231": [], "21103839273442335": 23, "211038392734424": [], "2110383927344268": [], "2115": 392, "2129": 75, "213": 390, "2140": 392, "2142": 392, "2144": 406, "2148": 402, "215": 414, "2152": 392, "2157": 392, "216": [25, 409], "2162": 392, "2166": [77, 392], "2173": 392, "2179": 392, "218": [], "2180": 392, "2186": 392, "2188": [], "2191": 392, "2192": 97, "21e": 402, "22": [22, 75, 76, 80, 95, 114, 147, 388, 390, 392, 397, 402, 404, 405, 411, 418, 452], "220": [], "2200": [404, 407, 409], "222": [77, 114, 147], "2220": 392, "222e": 402, "2238": 404, "22394531250000005": 80, "224": [18, 34, 386], "225": [75, 402], "2250": [20, 42, 91], "226": [], "2261": [], "2266": 392, "22681640625000005": 80, "227": [], "2277734375": 80, "228": [], "2283": 407, "2284": [404, 409], "229": [52, 386, 409], "2292": [], "2299": 392, "23": [14, 22, 25, 75, 76, 77, 91, 95, 388, 390, 392, 396, 397, 402, 405, 411, 418], "230": 392, "2300": [91, 392, 413], "231": [], "2310": 392, "232": [44, 386, 392], "233": [], "234": 404, "2342": [404, 409], "23482": 75, "236": 97, "23660864222813846": 36, "2372": [], "23742453409789066": 36, "238": [27, 46, 91, 95, 386, 393, 416, 423], "23830078125000004": 80, "239": 423, "24": [46, 75, 76, 91, 95, 114, 373, 388, 390, 391, 393, 397, 400, 402, 405, 411, 416, 417, 419, 460], "240": 392, "24089207454433748": 36, "241": [], "24130002047921362": 36, "242": 75, "24211591234896584": 36, "24293180421871802": 36, "243": 75, "24354372312103217": 36, "2436": [], "2437": [], "2441556420233463": 36, "2447675609256604": 36, "24497153389309853": 36, "24517550686053655": 36, "24595703125": 80, "24599139873028875": 36, "246": [69, 95, 409], "24619537169772682": 36, "2465": 392, "246501869": 392, "24660331763260296": 36, "2467": 77, "2469": [], "247": 392, "2472": 77, "24741920950235513": 36, "2476": [], "248": [392, 426], "248123825": 392, "24884702027442143": 36, "2490509932418595": 36, "24978515625000003": 80, "2498668851116117": 36, "24e": 416, "25": [2, 9, 25, 46, 75, 76, 77, 95, 102, 114, 161, 276, 388, 390, 392, 397, 402, 404, 405, 407, 410, 411, 418], "250": 402, "2500": 402, "25000": 407, "25027483104648784": 36, "25085858": [114, 147, 212], "251": [114, 353], "25109072291624": 36, "2512946958836781": 36, "2517026418185541": 36, "2519066147859922": 36, "25211058775343026": 36, "25251853368830635": 36, "2526": [], "2527225066557444": 36, "2529264796231825": 36, "253": 409, "25313045259062056": 36, "25353839852549664": 36, "2537": [114, 353], "25394634446037273": 36, "254": [], "2541503174278108": 36, "2543": [], "255": 426, "25517018226500104": 36, "2553741552324391": 36, "2555781281998771": 36, "256": 405, "2565979930370674": 36, "2567": [48, 114, 302, 313, 397], "257": [9, 392], "2574138849068196": 36, "2575": [], "25843374974400984": 36, "25863772271144786": 36, "259045668646324": 36, "25924964161376207": 36, "2596575875486381": 36, "259765625": 410, "26": [25, 36, 75, 95, 101, 388, 390, 392, 397, 402, 405, 409, 410, 411, 413, 416], "26006553348351424": 36, "26026950645095226": 36, "2602695064509523": 36, "2604734794183903": 36, "26067745238582835": 36, "2607": [], "261": 95, "26169731722301864": 36, "26222656250000004": 80, "2626": 402, "2633": 95, "264": [], "26434": [95, 385], "2644": [], "265": [], "26605468750000005": 80, "26663446": [114, 176], "267": [], "2670": 95, "26701171875": 80, "267e": 77, "26892578125": 80, "268e": 77, "27": [22, 76, 95, 197, 388, 390, 397, 402, 405, 411, 414], "271": 397, "2717": 75, "27170": 95, "27179687500000005": 80, "27180": 95, "272": [], "2725078844972353": 36, "27371093750000003": 80, "274": 95, "276": [], "27658203125": 80, "277": [], "2773": [], "2775": 402, "2781188101128489": [], "27811881011285117": [], "27811881011285217": [], "2781188101128529": [], "2781188101128562": [], "2781188101128566": [], "2781188101128567": [], "27811881011285694": 23, "27811881011285766": [], "2781188101128627": [], "2794": 77, "279453125": 80, "28": [7, 20, 24, 25, 46, 75, 76, 77, 91, 95, 390, 391, 393, 395, 397, 400, 402, 404, 405, 407, 409, 411, 413, 416], "28041015625000004": 80, "2806": [], "281": [], "2827": [24, 76], "284": 95, "284101": 22, "2843": [114, 324], "285": [], "287": 95, "289": [], "28998046875000005": 80, "28e": 404, "29": [26, 75, 95, 390, 393, 397, 402, 405, 411, 418], "290": [], "2907": 75, "29093749999999996": 80, "291": 95, "292": [52, 386], "2928515625": 80, "293919": 22, "294": [], "2943": [], "295": [], "2953": [], "296": 442, "297": [], "2975": 95, "298": [97, 121], "29859375": 80, "299": 75, "2a": 97, "2d": [5, 16, 24, 36, 38, 41, 49, 54, 66, 73, 83, 95, 98, 99, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 125, 126, 127, 128, 152, 163, 167, 176, 214, 215, 217, 219, 220, 229, 230, 232, 233, 238, 239, 240, 241, 244, 253, 286, 288, 302, 306, 321, 337, 383, 388, 389, 393, 402, 405, 409, 411, 414, 421, 437, 458, 465, 467], "2e": 404, "2f": 33, "2fp": 392, "2j": [7, 411], "2nd": 113, "2rr": 76, "3": [2, 6, 7, 8, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 78, 80, 84, 88, 89, 90, 91, 95, 97, 98, 99, 101, 104, 105, 110, 111, 113, 114, 117, 119, 120, 122, 123, 127, 128, 144, 153, 158, 174, 176, 181, 182, 192, 197, 198, 221, 222, 227, 228, 231, 235, 236, 237, 244, 245, 253, 295, 302, 312, 313, 338, 357, 371, 377, 378, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 429, 436, 444, 448, 452, 455, 467], "30": [2, 25, 36, 63, 95, 113, 390, 392, 395, 397, 402, 404, 405, 406, 411], "300": [20, 22, 41, 405, 407], "3000": 100, "30000": [42, 91], "30146484375000004": 80, "302": 77, "30242187500000006": 80, "3029": 22, "30342685370741485": 80, "3037": 413, "3039": 413, "304": [], "3041": [], "3049": [], "30529296875": 80, "30625": 80, "307": 24, "30720703125000004": 80, "308": [76, 97], "30816406250000006": 80, "3093": [], "31": [76, 95, 390, 402, 405, 411, 418], "310": 430, "3101": [], "3103": [], "3106": 76, "3112": [20, 42, 46, 397, 413], "3119921875": 80, "312": [20, 42], "3121": [], "3122": 402, "3128": 402, "31390625000000005": 80, "314": 386, "31486328125": 80, "31486328125000007": 80, "3153": [], "3155": 24, "316": 429, "31677734375": 80, "317": [22, 95], "317734375": 80, "318": [], "31869140625000003": 80, "3194": 24, "31964843750000005": 80, "3197": 24, "3199": [], "32": [25, 76, 95, 390, 402, 405, 409, 411, 413], "32060546875000007": 80, "32156250000000003": 80, "322": [95, 429], "323": 389, "3233": [], "3234765625": 80, "3247": [114, 304], "325": 402, "3250": 402, "32539062500000004": 80, "326": 389, "3273046875": 80, "3273046875000001": 80, "32768": 409, "32921875": 80, "32921875000000006": 80, "33": [20, 25, 42, 75, 95, 390, 397, 402, 405, 411, 413], "330": [], "3300": [32, 389], "33017578125": 80, "3302": [], "331": [], "332": [], "333": 338, "3331": [], "3336": [], "335": 396, "3351": [], "3388": 22, "3390": [95, 385], "34": [75, 95, 402, 404, 405, 411], "3400": 32, "3411": [], "342312": [95, 385], "34261718750000003": 80, "345": 75, "3458": 32, "346": 75, "3464": [], "3487775551": 80, "35": [20, 22, 42, 75, 386, 392, 397, 402, 405, 411, 413], "3500": [32, 388], "3505": 32, "352": [], "3520": 389, "353": [], "3536": 32, "3537": 389, "3540": 32, "3541": 389, "3548": [183, 389], "3549": 406, "355": [1, 389], "3555": [], "356": 389, "3560": 389, "3567": [], "3583": 24, "36": [43, 76, 95, 402, 405, 411], "360": 442, "3600": 405, "3610": 389, "3614": 24, "3620": 32, "3622": 389, "3623": 32, "3624": 389, "3629": 24, "363": [], "3631": [95, 414], "3636": [95, 414], "3640": 389, "3641": 75, "3645": [], "3651": [], "367": 1, "3678": 389, "3682": [], "3693": 389, "37": [20, 25, 42, 397, 402, 405, 411, 413], "3700": [32, 114, 146, 294, 389], "372": 392, "3734": [114, 320], "3736": 46, "3748": 402, "375": 442, "3750": 388, "3758": [], "3766": 36, "3767": [], "377": [], "3780": 388, "3787": [], "379": 75, "3799": 402, "38": [25, 46, 75, 76, 91, 114, 176, 393, 402, 405, 411, 416], "3800": [32, 91], "3805": 413, "3807": 413, "3808": [], "381755": [114, 160, 354], "382": [65, 78, 386], "3821": 22, "3823841": 0, "382e": 390, "383": [], "383064516033j": 407, "385": 95, "38515625": 80, "386": [], "3868": 76, "387": [], "3873": 75, "388": [], "38e": 397, "39": [17, 18, 20, 22, 24, 25, 26, 33, 41, 43, 46, 54, 58, 64, 71, 75, 388, 389, 391, 392, 393, 394, 395, 396, 397, 402, 404, 405, 406, 409, 411, 416], "390": [], "3900": [91, 114, 146, 294], "390168": 22, "391": [], "3912": [], "3915": 36, "3922": 402, "3929": [], "396": 95, "397": [], "3972": [], "398": [], "399": [], "39951171874": 80, "3999": [20, 42, 397, 410, 413], "3c02592": [95, 385], "3d": [24, 25, 41, 102, 114, 120, 229, 230, 232, 233, 238, 239, 240, 402, 405], "3d_dataset": 402, "3e": 416, "3f": [33, 75, 145, 183, 208, 338, 342, 367, 389, 392], "3fp": 392, "3g": [242, 397], "3j": [7, 411], "3rd": [113, 397], "4": [2, 7, 8, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 90, 91, 95, 97, 101, 102, 114, 123, 124, 150, 178, 197, 228, 231, 235, 236, 237, 257, 302, 306, 312, 313, 317, 378, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "40": [25, 76, 395, 397, 402, 405, 411], "400": [84, 402, 405, 410, 413, 414], "4000": [20, 41, 42, 91, 388, 397, 402, 405, 406, 410, 411, 413], "4003": [], "40142578125": 80, "402": [95, 443], "403": 95, "40333984376": 80, "403400": 22, "403e": [402, 407], "404": [20, 77, 404], "40400": [42, 91], "404296875": 80, "4044": 32, "4046": 124, "405": 404, "40525390627": 80, "406": 404, "407": 404, "4070": 406, "4071": 406, "40716796875": 80, "408": [75, 404], "4088": [], "4096": 75, "41": [20, 25, 42, 46, 75, 91, 393, 397, 402, 405, 411, 413, 416], "410": [], "4102": 402, "41099609375": 80, "41099609376": 80, "411": [78, 386], "411953125": 80, "412": [27, 386], "41291015626": 80, "413": [], "414": 411, "415": [65, 386], "4160": 410, "4163": [], "417": [392, 446], "4176953125": 80, "418": [], "419609375": 80, "42": [20, 23, 42, 95, 397, 402, 405, 411, 413], "420": [], "4203": [], "42056640625": 80, "421": [], "4215234375": 80, "42152343752": 80, "4223": 77, "4225": [], "4230": 388, "4234375": 80, "42343750001": 80, "4239": [], "42439453126": 80, "4247": [], "4253": 77, "4253515625": 80, "426": [114, 310, 311], "4262": 75, "4263": [], "42630859376": 80, "427": [], "428": [], "4281": [], "4284": 77, "429": [], "42917968752": 80, "43": [22, 25, 32, 402, 411], "43205078125": 80, "43205078127": 80, "433": 75, "4330": 388, "43396484376": 80, "434": [], "4343": [], "4353": [], "43587890625": 80, "437": [77, 402], "43779296876": 80, "438": [], "43836": 409, "43875": 80, "4394": 32, "44": [76, 402, 411, 416], "440": 75, "4404": [], "44066406251": 80, "441": 75, "442": [], "44257812499": 80, "442578125": 80, "4444921875": 80, "4446": 75, "446": 392, "44736328124": 80, "447e": 390, "448": [], "44822162": 124, "449": 411, "45": [22, 75, 114, 153, 295, 402, 406, 411, 413], "450": [], "4500": 388, "4517": 101, "452": [], "4529": [], "453": [], "45310546874": 80, "45310546875": 80, "4536": [], "4539": [], "454": [], "4547": [], "4550": 388, "456": 25, "4574": 36, "458": 75, "4582": 402, "459": [], "4597": [], "4598046875": 80, "45bf716d7cf02f1b7157448de04db163df5e80eb78920004": 87, "46": [20, 25, 42, 75, 76, 397, 402, 411, 413, 416], "4602": [], "46076171876": 80, "4613": [], "4616": 36, "46171875": 80, "462": [24, 450], "4627": [], "4633": [], "4636": [], "4636328125": 80, "465": [], "466": [], "468": [52, 386, 450], "4681": [], "46841796875": 80, "468e": [25, 46, 91, 393], "47": [75, 145, 389, 392, 397, 402, 407, 411, 413], "470": [], "47033203125": 80, "4709": [], "471": 77, "4716": [], "4717": 407, "472": 402, "473": [78, 386], "473203125": 80, "474": 392, "47416015626": 80, "4743": [], "475": [], "4756": 402, "476": [], "477": 402, "47703125": 80, "47798828126": 80, "477e": [20, 42, 397], "47878161267252": 24, "479": 24, "4798": 24, "48": [95, 389, 397, 402, 404, 411], "480": [], "4814": [], "481e": 402, "482": [], "484": [], "485": [], "4859": [], "486": [], "4863": [], "4866015625": 80, "4887": [], "4888": 32, "489": [], "4893": [], "4898": [], "49": [20, 42, 397, 402, 411, 413], "490": 452, "4904": [], "4906": [], "491": [], "4913": 76, "49133114889": 36, "49194306778": 36, "49337087855": 36, "49357485153": 36, "49398279747": 36, "494": [27, 386], "49439074339": 36, "49581855418": 36, "496": 77, "49602252714": 36, "49622650011": 36, "49643047307": 36, "496838419": 36, "49765431088": 36, "4978": [], "498": [78, 386], "4980": 36, "49847020274": 36, "49867417572": 36, "4987": [], "499": [], "4991": 95, "49928609462": 36, "4998": 36, "4c72b0": 405, "4f": 392, "4fq4v": [95, 385], "4th": [17, 21, 29, 390, 391, 401], "4x96": 21, "5": [2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 90, 91, 95, 97, 98, 99, 100, 101, 102, 107, 113, 114, 122, 123, 128, 153, 167, 176, 178, 184, 190, 197, 221, 244, 253, 259, 262, 288, 289, 291, 295, 333, 347, 377, 378, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 429, 452], "50": [20, 25, 32, 36, 55, 75, 77, 89, 91, 97, 98, 99, 101, 105, 113, 114, 129, 144, 176, 185, 202, 207, 244, 245, 252, 253, 317, 324, 348, 388, 390, 392, 395, 402, 405, 409, 411], "500": [22, 119, 122, 405], "5000": [75, 76, 407, 409, 411], "50010198649": 36, "500x500": 120, "501": [], "50152979726": 36, "50234568912": 36, "503": 20, "50300": [42, 91], "50356952693": 36, "50478515626": 80, "5059": [], "5066": 402, "5069": [], "50724104035": 36, "50785295924": 36, "508": [], "5087": [], "50887282408": 36, "5096153847107": 407, "50968871596": 36, "51": [20, 21, 26, 42, 91, 390, 391, 397, 402, 411, 413], "51009666189": 36, "51030063485": 36, "511": [], "51132049969": 36, "5117": [], "5119324186": 36, "513": 77, "51376817531": 36, "5139": 402, "51397214826": 36, "51397214828": 36, "514": [], "5143800942": 36, "51478804015": 36, "51560393201": 36, "51580790499": 36, "516": [72, 75, 386], "51601187795": 36, "51621585092": 36, "5165": [], "51662379685": 36, "517": [397, 413], "51723571574": 36, "51784763465": 36, "518": [], "51805160762": 36, "51825558058": 36, "5187": [], "519": [], "51907147246": 36, "51927544542": 36, "5195": [], "51968339135": 36, "51x96": 21, "52": [36, 76, 95, 97, 402, 409, 411], "520": [52, 386], "52049928323": 36, "52090722916": 36, "52090722918": 36, "521": 24, "52111120212": 36, "522": [], "524": [], "52437476961": 36, "52498668851": 36, "525": [], "52539463446": 36, "5254": [], "527": [], "5274": [], "528": [], "5281": [0, 95, 385], "5282": 75, "528x336": [25, 390, 391], "529": [], "53": [25, 55, 96, 402, 405, 411], "531": [81, 386], "532": [52, 80, 386], "532nm": 50, "533": [], "533e": 407, "5342": 75, "53572": [95, 385], "5373": [], "54": [20, 22, 32, 42, 114, 128, 184, 189, 259, 261, 397, 400, 402, 411, 413], "540": [], "5400": [100, 388], "541": [], "5418": [], "541e": 404, "542": [], "543": [397, 458], "5431": [], "5437": 36, "544": 397, "5448": 97, "544e": [24, 397], "5452": [], "5458": 24, "546": [], "546e": 404, "5474": 389, "55": [1, 46, 76, 80, 91, 95, 114, 128, 146, 147, 153, 160, 212, 294, 295, 296, 312, 319, 343, 344, 352, 353, 354, 363, 364, 366, 393, 396, 402, 406, 411, 416], "550": [], "551": [], "551980": 22, "5522": 77, "553": [], "55339": [95, 385], "554": [27, 386], "5549": [25, 43, 46, 91, 114, 128, 146, 147, 153, 160, 212, 294, 295, 296, 302, 312, 317, 319, 352, 353, 354, 366, 389, 393, 396, 397, 406, 416], "555": [27, 386], "556": 388, "5566": 25, "557": [], "5576": [], "558": [], "5582": 406, "559": [], "56": [25, 75, 402, 411], "560": [], "561": [], "562": [75, 392], "563": 392, "564": [], "565": [], "566": [], "5669": 389, "568": [], "569": 75, "5693": [], "5698": [], "56b4e9": 405, "57": [29, 75, 95, 114, 153, 295, 312, 394, 397, 402], "570": [], "571": 392, "573": [], "5746": [], "575": [52, 75, 386], "576": [], "576x384": 24, "577": [], "579": 75, "58": [20, 42, 397, 402, 413], "582": 24, "5829": [], "582j": 409, "583": [], "5834": [], "583x": 95, "584": [], "585": [], "587": [], "587e": 390, "5883": [], "59": [20, 402], "590": [], "5900": [100, 388], "591": [], "5915": [], "592": 404, "593": 404, "594": [69, 386, 404], "5949": 76, "595": 404, "5957": [], "596": 404, "597": 404, "5979": 24, "598": 404, "5993": 17, "5994": 36, "5995": 32, "5997": [17, 388], "5999": [36, 46, 91, 388, 393, 397, 406, 416], "5e": 75, "5j": [7, 411], "5px": 404, "5th": [29, 36], "6": [2, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 49, 50, 51, 52, 54, 55, 58, 63, 64, 67, 68, 75, 76, 77, 80, 88, 90, 91, 95, 97, 101, 102, 104, 105, 110, 113, 114, 117, 119, 120, 122, 123, 127, 128, 177, 182, 188, 222, 260, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 377, 378, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 444], "60": [22, 41, 54, 67, 77, 80, 95, 101, 114, 177, 198, 389, 402, 413], "600": [402, 404, 405, 416], "6000": [46, 91, 393, 397, 406, 416], "601": 404, "602": [20, 404], "60200": [42, 91], "603": [77, 404], "604": 404, "605": 404, "606": 75, "607": 404, "6077": 25, "607943654060364e": 397, "6084": [], "6085": [], "608e": [397, 413], "6099": [], "61": [77, 389, 402, 409], "6109": [], "611": [], "611089606614616e": [], "611089606616264e": 23, "611089606616693e": [], "611089606617003e": [], "611089606617033e": [], "611089606617235e": [], "611089606617803e": [], "611089606617979e": [], "611089606618119e": [], "611089606618482e": [], "612": [], "613": [], "614": 390, "6155": [], "616": 52, "6189": [], "62": 402, "621": [], "622": 392, "623": [58, 77], "6239": [], "624": [], "6246": [], "6263": [], "627": 388, "6281": [], "63": 402, "631": [], "6327": [], "634": 128, "636": [], "6369": 389, "637": [], "6377": [], "64": [75, 402, 409], "640": [], "643": [114, 320, 463], "645": [], "647": 463, "648": [], "649": [46, 91, 388, 393, 397, 406, 416], "6497": 77, "64th": 410, "65": 402, "650": [46, 91, 393, 397, 405, 406, 416], "6500": 408, "651": 388, "652": [69, 386], "652818786": [114, 366], "653": [], "6538": [], "654": [], "65536": 409, "6566": 24, "657": [], "658": [], "6584": [], "6599": [], "659e": 390, "66": [145, 389, 402], "660": [], "661": [], "663": 464, "664": [27, 386, 464], "6653": [], "666": [], "6664": [], "6676": 95, "668": 464, "6686": 95, "6693": 402, "67": 402, "670": [], "671": [20, 24, 25, 46, 75, 76, 77, 91, 390, 391, 393, 397, 400, 402, 404, 407, 409, 411, 413, 416], "6733": [], "673e": 390, "674": [], "676": [], "6774": [], "6783": [], "6787": [], "679": [], "68": [389, 402], "6821": 402, "683": [], "684": 24, "6841": [], "6865": [], "687": 465, "687e": 128, "688": 465, "6881": [], "69": [77, 145, 389, 402], "6903": [], "692": [], "693": [34, 386, 389], "6931": [], "694": 25, "6941": [], "695": 77, "6956": 404, "696": [], "6964": [], "6966": [], "697": [], "699": [], "6992": 402, "7": [2, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 51, 54, 55, 58, 64, 67, 68, 71, 75, 76, 77, 80, 91, 95, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 131, 132, 160, 197, 228, 231, 235, 236, 237, 244, 253, 254, 255, 288, 354, 384, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 421, 455, 461], "70": [36, 68, 75, 402, 408], "700": [46, 388, 394, 402, 405], "702": 20, "70200": [42, 91], "7030": 404, "7039": [], "704": [], "706": 467, "707": [], "7077": [], "708": 402, "71": [25, 402], "710": 24, "711": [], "7113": [], "712": [], "7129": [], "713": [], "7137": [], "7139": [76, 402], "714": [24, 467], "7153": 76, "7159": 402, "716": 467, "7168": [], "7175": [], "7176": [], "719": [], "7195": [], "72": [122, 402], "7224": [], "723": [], "7231": [], "7233": 24, "724": [], "726": 77, "729003": [114, 176], "7291": [], "73": [114, 160, 354, 402], "7302": 24, "732": 411, "733": 77, "734": 392, "7346": [], "7355": 97, "7386": [], "7389": [], "74": [114, 160, 354, 402, 404], "740": [27, 390], "7419": [], "741e": 402, "7439": 95, "7448": [], "745": [], "7456": [], "746": 392, "747": [], "747926": [21, 390], "7488": [], "7494": 389, "749519": 390, "749798": 390, "749865": 22, "75": [24, 36, 95, 338, 392, 402, 405, 414], "75015": 2, "7537": 24, "7538": [], "7542": [], "755": [], "757": 95, "75794": 2, "758": 468, "7581": [], "7584": 76, "759": [], "76": [26, 75, 95, 390, 391, 402], "763": 75, "765": [75, 417, 419, 460], "7658": [], "7665": [], "769": [24, 417, 419, 460], "77": [95, 389, 402], "7708": [], "7716": 32, "7725": 77, "7741": [], "7742": 75, "7743": [], "775": [], "775e": 390, "777": [417, 419], "779": [], "779e": 128, "78": [95, 402], "78153": 2, "783": [75, 114, 160, 354], "7834": 402, "784": [417, 419, 460], "7851": [], "787875175476074e": 397, "7883": [25, 402], "7887": [], "788e": [397, 413], "789": [114, 147], "79": [32, 76, 402], "790": [], "791": [46, 91, 393, 416], "7913": [], "7918": 397, "7921117": [95, 385], "793": [], "793j": 409, "794": [46, 91, 393, 416], "795": [], "7954": [], "796": 75, "797": 65, "797e": 24, "7999": [], "7_cz0": [114, 312, 317, 397], "8": [2, 7, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 51, 54, 55, 58, 64, 67, 68, 71, 75, 76, 77, 80, 87, 91, 95, 97, 114, 123, 128, 163, 286, 384, 388, 389, 390, 391, 392, 393, 394, 395, 397, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 418], "80": [6, 29, 46, 75, 80, 120, 388, 394, 402, 413], "800": [75, 388, 402, 405], "8000": 32, "801": 20, "80100": [42, 91], "803": [], "804": [], "805": 392, "8054": [], "807": [], "8073": [], "807972021": [114, 353], "807e": 402, "8080601692199707": 416, "809": [], "81": [36, 75, 402], "812": 402, "813": 409, "815": [46, 91, 393, 416], "816": [46, 91, 393, 416], "817": [], "8188": [], "8196": [], "82": [26, 75, 95, 402], "8205": [], "822": [44, 386], "8222": 397, "8231": [], "824": [], "824e": 75, "8252": [], "826e": 75, "827": 390, "8288": [], "829": [], "8293": 402, "83": [75, 95, 402], "832": 388, "833": [], "8366": 409, "8367": [], "837": [], "8386": [], "84": [75, 95, 402], "840": 388, "8426": [], "843": [], "844": [], "8471": [], "85": [75, 402, 405], "850": 388, "852": [], "85248": 95, "8525": [], "853": [27, 386], "854": [], "855": [], "856": 389, "8567": 24, "857": [20, 75, 389], "8587": [], "86": [75, 402], "862": [], "8659": [], "866": [], "867": [], "868": [], "87": [25, 75, 95], "870": [], "8705": 402, "872": [], "87261": 124, "873": 402, "8734": 402, "875": 390, "8757": 76, "876": [], "877": 338, "88": [75, 95], "880": [], "881": 392, "882": [23, 25], "8838": [], "8842": 389, "88615": 392, "8888": [11, 87], "889": 404, "89": 75, "890": [404, 411, 416], "8901": [], "891": [75, 388], "895": [], "8955": 402, "896": [], "8976": [], "898": [], "899": [], "8h": 397, "8pfk5": [95, 385], "9": [2, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 36, 41, 42, 43, 46, 54, 55, 58, 64, 68, 75, 76, 77, 80, 84, 91, 95, 101, 114, 123, 124, 164, 178, 287, 303, 384, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 418, 444], "90": [67, 75, 76, 77, 392, 405, 408], "900": [402, 405], "9001": 32, "90063": 95, "901": 24, "9018": [], "902": [], "903": [], "904": 388, "905": [20, 42], "90500": [42, 91], "9052": [], "9059": 389, "905torr_lt_aft": [20, 42, 397, 413], "908": [27, 386], "91": 75, "911": [46, 91, 393, 416], "9124": [], "913": [46, 91, 393, 416], "916": [], "9162": [], "917": 34, "918": [], "919": [], "92": [24, 75, 408], "920": [17, 405], "9203": [], "9208": [], "922": [44, 386], "923": [], "9232": [], "925": [], "926": 390, "926e": 24, "928": [], "9298": [], "93": [75, 390], "931": 390, "932": [], "932926": 95, "9335": 95, "9342": 95, "935": 390, "936": [], "9368": [], "937": [], "938": [], "939": 390, "9391": [], "94": [75, 128], "941": 402, "9428": 402, "943": 390, "9439": [], "945": 75, "9456": 95, "9466": [], "948": 404, "9499999999999995": 33, "95": [33, 67, 338, 390, 405], "951": [], "952": [], "9525": [], "9526": [], "9546": [], "956": 415, "9581": [], "959": 77, "9596": [], "96": [21, 26, 76, 95, 388, 390, 391, 404, 405], "961": [], "9624": [], "963": [], "9633": [], "964e": [404, 407, 409], "965": [], "966": [], "9664": 401, "9665": [], "967": 397, "968": [392, 394], "96e": 407, "97": [21, 24, 95, 390], "9708": [], "9718": 1, "975": [44, 392], "9751": 402, "9752": [], "9755": 26, "976": [], "978": [], "9787": [], "98": [80, 114, 160, 354, 405], "980": [], "9806": [], "982": 75, "982b516d00bd": 87, "984": 394, "9846": [], "985": [], "9893": [], "99": [22, 24, 25, 67, 75, 77, 114, 128, 163, 286, 389, 390, 405, 408], "990": 33, "9900990099009901": 33, "9923": [], "993": [], "996": [], "9964": 26, "997": 389, "9977": 32, "998": [], "9981": 26, "9989": [], "999": [20, 24, 25, 42, 397, 413], "99999": [36, 80], "999999": [114, 221], "9999999999999997": 33, "A": [1, 2, 5, 6, 7, 9, 10, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 61, 63, 64, 67, 68, 71, 75, 76, 77, 80, 82, 88, 90, 91, 95, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 136, 139, 146, 148, 153, 160, 176, 208, 212, 229, 232, 233, 238, 244, 253, 256, 288, 294, 295, 296, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 342, 352, 353, 354, 356, 359, 360, 361, 366, 367, 370, 371, 373, 383, 384, 385, 388, 389, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 426, 445, 465, 466], "AND": [2, 114, 136], "And": [10, 68, 395, 405, 408], "As": [5, 9, 19, 21, 23, 25, 36, 41, 54, 71, 80, 86, 88, 114, 164, 167, 242, 287, 383, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 404, 405, 407, 411, 413, 414, 416], "At": [6, 88, 89, 90, 114, 390, 396, 397], "BE": 87, "Be": [13, 114, 289, 333], "But": [6, 9, 36, 41, 80, 96, 114, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 384, 388, 392, 397, 400, 402, 403, 405, 406], "By": [6, 20, 42, 46, 86, 96, 98, 99, 101, 104, 105, 107, 110, 113, 114, 117, 119, 120, 122, 127, 128, 137, 138, 147, 160, 161, 167, 175, 177, 210, 213, 228, 231, 235, 236, 237, 244, 253, 268, 276, 288, 289, 291, 292, 302, 333, 347, 349, 353, 354, 357, 362, 366, 369, 370, 371, 389, 396, 397, 400, 405, 410], "For": [2, 4, 5, 6, 7, 9, 11, 12, 20, 21, 22, 23, 36, 42, 54, 67, 68, 76, 80, 84, 85, 87, 89, 91, 93, 97, 98, 99, 101, 113, 114, 117, 122, 133, 134, 137, 140, 148, 149, 150, 151, 152, 153, 159, 160, 170, 175, 176, 179, 180, 184, 186, 189, 190, 193, 209, 210, 212, 225, 226, 227, 228, 244, 246, 248, 253, 256, 257, 258, 259, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 295, 296, 327, 329, 350, 352, 353, 354, 365, 366, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 413, 414, 416, 418, 459], "If": [2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 46, 83, 85, 87, 88, 90, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 133, 134, 135, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 150, 151, 152, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 193, 197, 199, 202, 207, 209, 210, 212, 213, 214, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 294, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 332, 333, 335, 338, 343, 344, 347, 349, 350, 351, 353, 354, 357, 359, 360, 363, 364, 365, 366, 369, 370, 371, 373, 377, 378, 388, 390, 392, 395, 396, 400, 401, 402, 404, 405, 407, 410, 416, 455, 463], "In": [2, 5, 6, 7, 9, 10, 17, 18, 20, 21, 22, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 49, 54, 58, 63, 64, 67, 68, 71, 75, 85, 86, 88, 90, 92, 95, 96, 97, 98, 100, 101, 105, 107, 110, 113, 114, 117, 119, 120, 122, 127, 128, 146, 164, 168, 176, 185, 197, 202, 207, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 287, 288, 294, 297, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 353, 366, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 409, 411, 414, 415, 458], "It": [4, 5, 6, 9, 10, 11, 24, 41, 43, 87, 92, 93, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 140, 144, 172, 177, 178, 203, 206, 223, 244, 245, 249, 253, 288, 289, 291, 292, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 347, 369, 383, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 404, 405, 407, 408, 410, 414, 424, 458, 465, 467], "Its": [92, 93, 128, 383, 392, 445], "NOT": [86, 114, 289, 314, 333, 396, 411], "No": [2, 9, 114, 122, 151, 228, 229, 231, 232, 233, 235, 236, 237, 238], "Not": [104, 114, 120, 136, 151, 349, 395, 401, 406], "OF": [2, 405], "OR": [114, 139], "Of": [89, 388, 407], "On": [6, 9, 96, 114, 171, 390, 392, 401], "One": [2, 6, 7, 89, 101, 114, 388, 402, 410, 412, 416, 417, 419], "Or": [7, 19, 87, 391], "Such": 2, "THAT": 395, "THE": 2, "TO": [2, 87, 405], "That": 411, "The": [2, 5, 6, 7, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 68, 75, 76, 77, 80, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 153, 161, 163, 164, 165, 166, 167, 169, 170, 172, 175, 176, 177, 178, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 197, 198, 202, 205, 206, 207, 210, 212, 213, 214, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 276, 286, 287, 288, 289, 291, 292, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 330, 331, 332, 333, 338, 344, 347, 348, 350, 351, 352, 353, 358, 365, 366, 369, 373, 377, 378, 383, 387, 389, 391, 392, 393, 394, 395, 396, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 430, 461, 463, 465, 467], "Then": [6, 10, 21, 29, 85, 86, 88, 90, 197, 388, 389, 392, 394, 396, 397, 399, 406], "There": [6, 9, 12, 86, 101, 114, 202, 397, 402, 409], "These": [2, 9, 10, 24, 89, 92, 389, 391, 392, 396, 400, 402, 405, 408, 414, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "Theses": 95, "To": [4, 6, 7, 9, 11, 20, 22, 24, 41, 42, 43, 46, 54, 75, 76, 86, 87, 88, 89, 90, 97, 114, 124, 175, 176, 193, 228, 268, 270, 301, 384, 388, 389, 393, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 414, 416], "WILL": 405, "WITH": 2, "Will": [112, 118], "With": [9, 101, 114, 136, 137, 138, 139, 210, 212, 213, 299, 353, 354, 366, 384, 388, 389, 390, 396, 397, 400], "_": [17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 36, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 63, 64, 67, 68, 71, 75, 76, 77, 80, 91, 104, 114, 227, 383, 388, 389, 390, 391, 392, 394, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416], "_1": [20, 42, 75, 102, 383, 402], "_2": [20, 42, 75, 102, 402], "_3": 75, "_4": 405, "__": 401, "__all__": 5, "__call__": 404, "__dataset_methods__": 5, "__init__": [197, 395], "__main__": 5, "__name__": 5, "__string___": 401, "_active_ctx": [124, 130], "_ax": [17, 18, 26, 33, 41, 54, 64, 389, 391, 393, 394], "_classic_test_patch": 405, "_creat": 404, "_cstr": 404, "_dtype": 7, "_html_output": 404, "_i": 383, "_importer_method": 5, "_j": 383, "_modifi": 404, "_mpl": 405, "_novalu": 124, "_optim": 77, "_plot1d_doc": [114, 228], "_plot2d_doc": [114, 229], "_plot3d_doc": [114, 230], "_prod_dispatch": 124, "_read_spc": 5, "_registri": [124, 130], "_repr_html_": 404, "_string_": 401, "_subplot": [9, 413], "_text_width": 404, "_y": 5, "a1": 388, "a2": 388, "a3": 388, "a350": 58, "a5": 7, "a6": 7, "a_1": 97, "a_decomposit": [27, 386], "a_max": [114, 151], "a_min": [114, 151], "a_n": 97, "a_nddataset": [44, 386], "aa": 388, "ab": [9, 95, 97, 114, 134, 313, 353, 366, 388, 397, 402, 465], "abad0d": 95, "abc": [114, 146, 294, 389, 465], "abcdef": 101, "abdelhafid": 95, "abdollahi": 95, "abil": 397, "abl": [6, 10, 14, 89, 92, 114, 302, 383, 388], "about": [1, 6, 7, 13, 88, 107, 114, 288, 289, 291, 333, 347, 384, 388, 394, 403, 405, 421, 445], "abov": [6, 9, 10, 17, 25, 50, 86, 114, 166, 384, 388, 390, 391, 392, 396, 397, 399, 401, 402, 405, 406, 408, 411, 414], "abscissa": [114, 164, 287, 390], "absent": [114, 305, 307, 315, 316, 410], "absolut": [97, 114, 133, 353, 366, 390, 396, 397, 405], "absorb": [17, 19, 26, 41, 43, 46, 91, 114, 147, 160, 176, 212, 312, 313, 353, 354, 366, 377, 388, 389, 390, 391, 392, 393, 394, 397, 402, 405, 411, 413, 414, 416, 444, 446], "absorpt": 95, "abstract": [18, 104], "ac": 95, "ac034173t": 95, "aca": [95, 385], "academ": 92, "acc": 397, "acceler": 389, "accent": 401, "accept": [2, 6, 9, 87, 114, 122, 130, 417, 419, 421, 431, 458, 460, 461, 465, 466], "access": [2, 15, 58, 86, 87, 90, 96, 114, 176, 384, 397, 400], "accompani": 2, "accord": [2, 102, 110, 114, 147, 176, 306, 362, 383, 394, 395, 405, 445], "accordingli": [101, 114, 431], "account": [6, 12, 14, 114, 149, 161, 175, 186, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 246, 248, 268, 276, 390, 391, 421], "accumul": [114, 353, 366], "accur": [9, 117], "accuraci": [97, 101, 114, 120, 353, 366, 397], "aceto": 95, "achiev": [11, 88, 90, 97, 114, 135, 243, 402, 406], "acid": [95, 385], "acknowledg": [2, 93], "acqdat": 5, "acquir": [2, 402], "acquisit": [5, 17, 20, 22, 25, 42, 46, 47, 64, 75, 77, 91, 114, 266, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 350, 388, 392, 393, 404, 407, 409, 413], "acquisition_d": 114, "acr": 124, "acronym": [101, 114, 299], "across": [105, 117, 120], "acscat": [95, 385], "act": 2, "acta": [95, 388], "action": [6, 7, 95, 97, 114, 428], "actionmasskinet": [22, 463, 467], "activ": [2, 6, 14, 17, 23, 25, 32, 36, 46, 47, 50, 55, 80, 83, 88, 89, 90, 91, 93, 95, 100, 101, 104, 114, 123, 128, 146, 147, 153, 160, 176, 205, 212, 223, 294, 295, 296, 309, 312, 319, 343, 344, 352, 353, 354, 363, 364, 366, 371, 385, 388, 389, 393, 402, 405, 406, 411, 416], "activation_pca": 25, "actual": [6, 7, 20, 21, 29, 68, 91, 98, 99, 101, 114, 176, 227, 244, 253, 388, 389, 390, 391, 392, 394, 396, 402, 406, 413], "actul": 17, "ad": [2, 6, 7, 8, 9, 13, 20, 22, 86, 92, 93, 98, 99, 114, 123, 172, 182, 222, 236, 244, 253, 304, 373, 378, 383, 388, 403, 421, 427, 428, 435, 436, 437, 438, 441, 461, 465, 466], "adam": 97, "adapt": [2, 10, 13, 14, 16, 38, 83, 85, 113, 114, 116, 123, 127, 205, 302, 401], "adata": 7, "add": [1, 3, 6, 7, 8, 9, 12, 20, 22, 25, 26, 29, 42, 58, 75, 76, 77, 88, 89, 90, 114, 123, 301, 388, 389, 390, 391, 392, 394, 397, 401, 402, 404, 405, 406, 410, 413, 414, 417, 419, 421, 429, 442, 443, 449, 450, 460, 462, 463, 467], "add_coordset": 114, "add_dataset": [123, 404], "add_mark": 4, "add_project": [123, 404], "add_script": 123, "add_valu": 9, "addit": [2, 6, 7, 9, 41, 54, 85, 92, 97, 101, 102, 114, 120, 122, 128, 148, 150, 161, 167, 176, 228, 229, 231, 232, 233, 235, 236, 237, 238, 256, 257, 276, 304, 343, 344, 363, 364, 383, 384, 392, 402, 403, 406, 411, 414, 421, 436, 458], "addition": [7, 84, 242, 396, 402, 411], "address": [2, 87, 114, 413], "addscript": 197, "adjac": [101, 114, 140], "adjust": [80, 114, 146, 294, 304, 405], "admin": 87, "administr": 87, "adob": 405, "adrian": 95, "adsorb": 95, "adsorpt": [20, 95, 385, 392, 397, 413], "advanc": [6, 9, 92, 95, 385, 392, 396, 400, 413], "advantag": 89, "advis": [3, 32, 114, 149, 186, 246, 248], "affect": [42, 92, 101, 114, 140, 388, 390, 392, 405, 412, 421, 445], "affn": [114, 308, 397], "after": [2, 6, 7, 9, 10, 11, 12, 26, 36, 97, 113, 114, 282, 285, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 379, 382, 383, 388, 389, 392, 394, 396, 397, 405, 408, 409, 413, 414, 416, 428, 443], "afterward": [120, 408], "ag": 95, "again": [6, 24, 36, 87, 89, 114, 302, 312, 313, 390, 397, 405], "against": [2, 6, 101, 114, 136, 137, 138, 139, 210, 212, 213, 299, 353, 354, 366], "agg": 405, "agg_path_chunks": 405, "aggreg": 403, "agir": 95, "agirdata": [114, 304, 324], "agre": 2, "agreement": 2, "ahap": [112, 118], "ahead": 7, "aim": 223, "ait": [95, 385, 395], "aka": 117, "akbari": 95, "al": [16, 26, 38, 76, 83, 93, 95, 97, 98, 101, 104, 105, 110, 113, 114, 117, 120, 127, 128, 244, 252, 302, 348, 383, 385, 387, 388, 391, 400, 417, 419, 428, 460, 466], "al2o3": 397, "alberto": 95, "alchem0x2a": 51, "alert": 401, "alessandro": 95, "alexandr": 95, "algorithm": [9, 36, 68, 75, 92, 95, 97, 98, 99, 104, 105, 110, 113, 114, 117, 120, 122, 127, 128, 144, 149, 165, 186, 244, 245, 246, 247, 248, 251, 252, 253, 289, 291, 292, 330, 333, 347, 348, 369, 383, 388, 390, 392, 414, 428, 465], "alia": [8, 9, 98, 99, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 175, 215, 216, 217, 218, 219, 220, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 253, 268, 288, 289, 290, 291, 292, 317, 319, 320, 333, 334, 336, 339, 343, 344, 347, 363, 364, 369, 372, 374, 375, 376, 407, 465, 466], "alias": 9, "align": [93, 114, 405, 412, 424, 426], "alinaghi": 95, "all": [2, 6, 7, 9, 10, 11, 14, 15, 23, 25, 33, 50, 51, 54, 75, 76, 86, 87, 88, 90, 91, 92, 93, 98, 99, 101, 102, 104, 105, 106, 110, 113, 114, 117, 119, 120, 122, 123, 127, 128, 135, 137, 138, 139, 147, 152, 153, 169, 171, 174, 176, 178, 185, 192, 197, 202, 207, 210, 213, 214, 243, 244, 253, 266, 295, 296, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 331, 350, 351, 352, 383, 384, 386, 387, 388, 389, 390, 392, 395, 396, 399, 400, 401, 402, 405, 407, 411, 413, 414, 422, 426, 454], "alladio": 95, "allevi": [114, 353, 366], "allitem": 123, "allnam": 123, "alloc": [101, 114, 178], "allow": [2, 3, 6, 7, 9, 11, 12, 14, 24, 41, 86, 87, 92, 97, 100, 101, 102, 104, 114, 146, 176, 178, 197, 294, 304, 349, 388, 389, 390, 394, 396, 397, 399, 402, 403, 404, 406, 407, 411, 416, 417, 419, 443, 445, 460, 465, 467], "allows_non": 114, "almost": [6, 10, 98, 99, 114, 144, 176, 192, 244, 245, 253, 393, 402], "alon": [14, 397], "along": [6, 46, 75, 76, 77, 93, 98, 101, 105, 107, 113, 114, 135, 136, 137, 138, 139, 141, 142, 144, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 160, 164, 165, 170, 176, 184, 186, 188, 189, 190, 210, 212, 213, 214, 243, 244, 245, 246, 247, 248, 251, 252, 256, 257, 258, 259, 260, 261, 262, 266, 267, 287, 288, 289, 291, 292, 295, 296, 299, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 330, 333, 335, 343, 344, 347, 348, 349, 350, 352, 353, 354, 363, 364, 365, 366, 369, 388, 397, 405, 412, 413, 414, 426], "alpha": [105, 114, 122, 184, 189, 190, 259, 261, 262], "alpha_h": 117, "alpha_w": 117, "alphabet": 102, "alreadi": [6, 14, 15, 17, 25, 89, 102, 105, 114, 384, 389, 396, 397, 399, 400, 411, 442, 463], "als2004dataset": [19, 21, 26, 390, 391], "also": [6, 7, 10, 11, 15, 19, 21, 24, 29, 36, 43, 46, 54, 64, 68, 75, 84, 88, 89, 90, 92, 93, 96, 97, 101, 104, 105, 113, 114, 117, 119, 120, 122, 127, 128, 135, 140, 165, 177, 208, 227, 234, 243, 247, 302, 312, 384, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 412, 414, 458, 461, 464, 465], "alt": 401, "alter": [2, 405], "altern": [6, 21, 71, 80, 85, 89, 95, 113, 114, 117, 123, 205, 224, 383, 385, 390, 400, 401, 402, 405, 409, 414], "although": 92, "alwai": [7, 9, 10, 92, 97, 98, 99, 100, 101, 112, 114, 118, 122, 176, 242, 244, 253, 353, 366, 384, 389, 391, 395, 396, 400, 405], "amax": [101, 114, 138, 210, 213], "ambigu": 402, "amend": 2, "amic": 2, "amin": [101, 114, 137, 210, 213], "among": [80, 92, 93, 97, 98, 99, 101, 102, 110, 111, 114, 165, 214, 228, 229, 230, 232, 233, 234, 238, 239, 240, 244, 247, 253, 349, 383, 392], "amount": [5, 7, 9, 24, 114, 120, 163, 170, 188, 214, 258, 260, 286, 383, 405, 408], "amp": 395, "ampl": [32, 76, 145, 183, 208, 242, 342, 367, 389], "amplitud": [114, 119, 176, 389, 405], "amplitude_mod": 119, "amsterdam": 22, "an": [1, 2, 5, 6, 7, 9, 10, 11, 20, 21, 22, 32, 41, 45, 48, 51, 60, 75, 76, 77, 80, 83, 85, 87, 88, 89, 90, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 159, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 193, 197, 209, 210, 213, 214, 221, 222, 225, 226, 232, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 294, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 330, 333, 343, 344, 347, 348, 350, 351, 353, 356, 357, 359, 360, 361, 363, 364, 365, 366, 369, 372, 374, 375, 376, 377, 378, 383, 385, 387, 388, 389, 390, 391, 395, 396, 397, 400, 401, 402, 403, 405, 406, 407, 410, 411, 413, 414, 415, 416, 461, 463, 466, 467], "ana": 95, "anaconda": [6, 84, 89, 90, 436], "anal": 414, "analog": 7, "analys": [92, 93, 390, 395], "analysi": [1, 16, 17, 22, 24, 26, 73, 74, 86, 92, 93, 95, 101, 102, 104, 105, 110, 111, 113, 114, 117, 119, 120, 127, 128, 170, 175, 225, 302, 312, 321, 348, 383, 385, 386, 388, 390, 394, 400, 429, 459, 463, 465, 466, 467], "analyt": 95, "analytica": [95, 388], "analyticalsciencejourn": 95, "analyz": [0, 400], "anamysi": 120, "andrea": 95, "ang": 2, "angle3": 392, "ani": [2, 6, 7, 9, 12, 14, 54, 86, 88, 89, 92, 93, 96, 98, 101, 104, 105, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 130, 136, 137, 138, 140, 146, 153, 165, 176, 197, 210, 213, 225, 227, 229, 232, 233, 238, 244, 247, 273, 288, 289, 291, 292, 294, 295, 296, 332, 333, 344, 347, 352, 369, 383, 388, 390, 392, 396, 397, 399, 400, 401, 405, 406, 461], "anim": 405, "anna": 95, "annal": 24, "annemi": 95, "annex": 2, "annot": [75, 76, 120, 392], "anomal": [114, 164, 287], "anoth": [6, 9, 58, 67, 68, 87, 88, 101, 114, 167, 198, 388, 391, 394, 397, 398, 402, 405, 413, 416], "answer": [388, 413], "antialias": 405, "anyio": 7, "anymor": [417, 419, 460], "anyth": [9, 197, 405], "anytim": 405, "anywai": 84, "apach": 92, "apart": [114, 176], "apcatb": [95, 385], "api": [6, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 80, 83, 88, 89, 90, 91, 92, 93, 101, 114, 182, 383, 387, 389, 390, 391, 392, 393, 394, 396, 397, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 421, 429, 434, 441, 454], "apod": [63, 64, 65, 93, 114, 148, 150, 170, 175, 184, 188, 189, 190, 193, 268, 270, 300, 346, 350, 365, 386, 409, 410, 412, 450], "apod_arr": [114, 148, 150, 170, 184, 188, 189, 190, 256, 257, 258, 259, 260, 261, 262, 266, 267, 350, 365], "appar": [67, 408], "appear": [6, 46, 75, 80, 88, 90, 114, 168, 197, 297, 383, 397, 406], "append": [75, 114, 116, 123, 197, 402, 414], "appl": [397, 405], "appli": [2, 7, 25, 43, 63, 64, 71, 76, 80, 95, 98, 102, 104, 105, 107, 110, 113, 114, 117, 119, 120, 122, 127, 128, 148, 150, 153, 154, 155, 159, 163, 164, 170, 175, 176, 179, 180, 184, 188, 189, 190, 193, 203, 209, 224, 225, 226, 227, 244, 249, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 295, 296, 327, 329, 333, 335, 347, 350, 352, 365, 369, 385, 388, 390, 392, 400, 402, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 465], "applic": [2, 6, 11, 77, 84, 87, 88, 91, 92, 95, 96, 101, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 383, 384, 388, 390, 400, 402, 403, 421], "approach": [10, 36, 92, 95, 98, 244, 385], "appropri": [4, 5, 6, 7, 114, 176, 402], "approxim": [22, 97, 105, 112, 114, 117, 118, 343, 344, 363, 364, 392], "apt": [6, 89, 397], "aq": [114, 266, 350, 407], "ar": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 43, 50, 54, 58, 63, 68, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 146, 147, 149, 151, 164, 165, 166, 168, 174, 175, 176, 177, 178, 184, 185, 186, 197, 198, 202, 207, 210, 212, 213, 214, 224, 228, 229, 232, 233, 238, 243, 244, 246, 247, 248, 253, 259, 266, 268, 287, 288, 289, 291, 294, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 333, 335, 344, 347, 349, 350, 353, 354, 358, 366, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "arang": [18, 97, 101, 114, 147, 177, 182, 185, 207, 222, 378, 391, 402, 411, 413], "arbitrari": [97, 105, 114, 171, 242, 389, 406, 467], "arbitrarili": [112, 118, 122], "arc3": 405, "archiv": [29, 85, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "area": [51, 75, 77, 113, 114, 119, 121, 228, 231, 235, 236, 237, 393], "arg": [5, 9, 102, 113, 114, 120, 123, 127, 130, 145, 162, 173, 183, 195, 208, 224, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 264, 290, 334, 342, 344, 345, 367, 368, 371, 372, 373, 374, 375, 376], "arg_err": 197, "arg_str": 197, "argmax": [101, 114, 137, 138, 210, 213, 383, 394], "argmin": [101, 114, 137, 138, 210, 213], "argnam": 123, "argsgetconc": [22, 113], "argsgetspec": 113, "argument": [4, 7, 9, 19, 21, 23, 33, 46, 97, 101, 102, 104, 105, 110, 113, 114, 117, 119, 120, 122, 123, 124, 127, 128, 133, 134, 135, 140, 153, 168, 176, 185, 197, 202, 207, 215, 216, 217, 218, 219, 220, 224, 227, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 295, 297, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 389, 394, 395, 396, 397, 402, 405, 411, 421, 431, 458, 465], "argv": 197, "ari": 95, "aris": [2, 402], "arithmet": [101, 114, 147, 185, 212, 353, 354, 366, 402], "armin": 95, "arnaud": [0, 95], "around": [7, 93, 101, 107, 114, 164, 287, 288, 289, 291, 328, 333, 347, 400, 402, 405, 408, 410, 416], "arpack": 120, "arr": [7, 9], "arrai": [7, 9, 18, 22, 25, 33, 41, 46, 75, 97, 98, 99, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 136, 137, 138, 139, 140, 147, 148, 150, 151, 152, 154, 155, 160, 161, 166, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 194, 202, 203, 204, 207, 210, 212, 213, 214, 221, 222, 224, 229, 230, 244, 249, 250, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 269, 276, 277, 278, 283, 284, 288, 289, 291, 292, 297, 301, 303, 304, 306, 310, 311, 325, 326, 333, 335, 347, 350, 351, 353, 354, 356, 358, 359, 360, 365, 366, 369, 377, 378, 380, 381, 383, 384, 397, 402, 404, 406, 410, 412, 413, 421, 463, 466], "arrang": [2, 214, 413], "array_lik": [97, 101, 114, 136, 137, 138, 139, 147, 151, 154, 155, 160, 165, 166, 202, 207, 210, 212, 213, 247, 353, 354, 366], "arrheniu": 97, "arrowprop": [392, 405], "arrowstyl": [392, 405], "art": [2, 92], "articl": [2, 6, 95, 385, 405], "artifact": [405, 415], "artifici": 411, "arxiv": 95, "asc": [114, 314, 422], "ascend": 413, "ascii_lowercas": 9, "asfortranarrai": 114, "ask": 6, "asl": [36, 80, 98, 99, 114, 149, 165, 186, 244, 246, 247, 248, 251, 252, 253, 330, 348, 383, 388, 465], "aspect": 9, "assert": [5, 7, 17, 33, 58, 114, 115, 116, 123], "assert_array_equ": 7, "assert_dataset_equ": 7, "assess": 392, "assign": [29, 114, 303, 396, 402, 413], "assist": 2, "associ": [2, 6, 102, 114, 123, 147, 383, 392], "assum": [9, 17, 51, 58, 75, 88, 90, 97, 98, 99, 102, 114, 147, 170, 188, 244, 253, 258, 260, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 335, 338, 391, 396, 400, 402, 406, 411], "assumpt": 120, "assymetri": 36, "asterisk": 401, "astyp": [7, 9, 101, 114, 409], "asym": [32, 145, 342, 389], "asymmetr": [36, 95, 98, 99, 114, 144, 145, 149, 165, 186, 244, 245, 246, 247, 248, 251, 252, 253, 330, 348, 383, 388, 389], "asymmetri": [36, 80, 98, 99, 114, 144, 244, 245, 253, 388], "asymmetricvoigtmodel": [32, 389], "atleast_2d": 114, "atmospher": [95, 385], "atol": 97, "atom": 95, "atomiqu": 2, "atr": [95, 385], "attach": [2, 12, 401], "attack": 2, "attempt": [114, 168, 297, 302, 312, 396, 400], "attent": [2, 9], "attribut": [2, 5, 17, 20, 24, 25, 26, 36, 42, 43, 58, 80, 91, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 130, 145, 183, 197, 208, 242, 244, 253, 288, 289, 291, 292, 333, 342, 347, 358, 367, 369, 388, 390, 391, 392, 394, 397, 403, 404, 405, 406, 410, 445, 450, 459, 461], "aug": 95, "augment": 387, "authent": 2, "author": [0, 2, 7, 20, 22, 24, 25, 41, 46, 75, 76, 77, 91, 92, 114, 390, 391, 393, 395, 397, 400, 402, 404, 407, 409, 411, 413, 416], "auto": [7, 10, 114, 120, 135, 228, 231, 234, 235, 236, 237, 243, 405], "auto_examples_analysi": [27, 30, 34, 37, 39], "auto_examples_cor": [44, 52, 56, 58, 59, 61], "auto_examples_process": [65, 69, 72, 78, 81, 82], "autoampl": 119, "autobas": [32, 119, 389], "autohint": 405, "autolayout": [114, 229, 230, 232, 233, 238, 239, 240, 390, 391, 405], "autoload": 197, "autom": [5, 7, 20, 387], "automat": [2, 4, 7, 9, 10, 24, 26, 46, 92, 93, 97, 98, 99, 101, 110, 114, 119, 123, 135, 144, 146, 149, 163, 165, 186, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 273, 274, 286, 294, 296, 330, 348, 352, 373, 388, 389, 392, 402, 404, 405, 409, 410, 428, 445, 447, 454, 461, 463], "automatiqu": 2, "automobil": [95, 385], "autoposit": 405, "autoscal": [32, 76, 389], "autosub": [98, 114, 144, 149, 165, 186, 244, 245, 246, 247, 248, 251, 252, 330, 348], "avail": [2, 5, 6, 7, 29, 32, 54, 68, 75, 76, 84, 107, 114, 122, 169, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 288, 361, 373, 388, 396, 402, 405, 408, 461, 465, 467], "available_nam": 102, "available_styl": [114, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 405], "avant": 405, "averag": [105, 107, 114, 117, 164, 212, 214, 287, 288, 291, 344, 347, 353, 366, 405, 412], "avers": 92, "avg": [107, 114, 147, 288, 291, 344, 347, 414], "avoid": [7, 9, 11, 46, 76, 87, 102, 113, 114, 176, 392, 395, 396, 402, 405, 407, 411, 413, 430, 458], "awar": [114, 289, 333, 384, 402, 403, 404, 406, 445], "ax": [9, 20, 23, 24, 25, 29, 32, 36, 55, 71, 75, 76, 98, 99, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 136, 137, 139, 210, 214, 220, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 253, 388, 389, 390, 391, 392, 394, 397, 402, 405, 409, 410, 411, 413, 414, 416, 431], "ax1": 405, "axe21": 388, "axec": 114, "axect": 114, "axei": 114, "axes3d_grid": 405, "axes_autolimit_mod": 405, "axes_axisbelow": 405, "axes_edgecolor": 405, "axes_facecolor": 405, "axes_formatter_limit": 405, "axes_formatter_offset_threshold": 405, "axes_formatter_use_local": 405, "axes_formatter_use_mathtext": 405, "axes_formatter_useoffset": 405, "axes_grid": 405, "axes_grid_axi": 405, "axes_grid_which": 405, "axes_labelcolor": 405, "axes_labelpad": 405, "axes_labels": 405, "axes_labelweight": 405, "axes_linewidth": 405, "axes_prop_cycl": 405, "axes_spines_bottom": 405, "axes_spines_left": 405, "axes_spines_right": 405, "axes_spines_top": 405, "axes_titlei": 405, "axes_titlepad": 405, "axes_titles": 405, "axes_titleweight": 405, "axes_unicode_minu": 405, "axes_xmargin": 405, "axes_ymargin": 405, "axessubplot": [9, 413], "axex": 114, "axhlin": 392, "axi": [5, 9, 17, 21, 22, 32, 41, 47, 51, 76, 100, 101, 102, 105, 107, 114, 120, 124, 135, 136, 139, 141, 142, 146, 147, 148, 150, 153, 156, 157, 159, 160, 163, 170, 175, 179, 180, 184, 188, 189, 190, 193, 196, 209, 212, 214, 225, 226, 228, 231, 235, 236, 237, 243, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 293, 294, 295, 296, 327, 329, 333, 343, 344, 347, 349, 350, 352, 353, 354, 355, 363, 364, 365, 366, 369, 388, 389, 390, 391, 405, 410, 411, 413, 416, 423, 467], "axrrai": [114, 361], "axt": 114, "axvlin": [75, 392], "az1118": [], "az1120": [], "az1390": [20, 24, 25, 46, 75, 76, 77, 91, 390, 391, 393, 397, 400, 402, 404, 407, 409, 411, 413, 416], "az1393": [], "az1694": [], "az1755": [], "az1911": [], "az789": [], "az798": [], "az810": [], "azzolina": 95, "b": [0, 2, 6, 17, 22, 50, 54, 63, 64, 71, 80, 92, 95, 97, 101, 114, 124, 133, 134, 145, 146, 153, 168, 294, 295, 296, 297, 301, 304, 306, 352, 389, 395, 398, 401, 402, 405, 407, 414], "b1": [2, 54], "b2": [18, 54], "b3": 54, "b350": 58, "b4": 54, "b978": 95, "b9780444527011000478": 95, "b_1": 97, "b_crossdecomposit": [30, 386], "b_ev": [17, 18, 104], "b_n": 97, "ba": 80, "back": [101, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 177, 395, 401, 405, 407], "backend": [85, 100, 405, 443], "background": [4, 95, 114, 303, 305, 307, 315, 316, 320, 397, 405, 443], "backgroung": [114, 305, 307, 315, 316], "backslash": [87, 396], "backtick": 9, "backward": [17, 18, 97, 104, 114, 343, 364, 397, 405, 413, 465], "bad": [9, 122, 463], "badli": [68, 408], "bai": 392, "balan": 95, "balanc": 414, "band": 410, "bar": [9, 15, 19, 87, 105, 114, 120, 228, 231, 396, 405, 442], "bare": 7, "barrier": [95, 385], "bartlett": [107, 114, 170, 184, 188, 258, 259, 260, 263, 264, 265, 266, 267, 288, 291, 300, 345, 346, 347, 350, 365, 414], "basc": [36, 98, 114, 131, 132, 144, 165, 186, 244, 245, 247, 248, 251, 252, 254, 255, 330, 348, 389, 427, 465], "base": [1, 2, 3, 6, 9, 18, 36, 75, 85, 87, 88, 89, 90, 95, 97, 98, 101, 104, 114, 120, 144, 164, 176, 185, 200, 207, 223, 244, 245, 287, 289, 291, 292, 302, 333, 347, 359, 369, 385, 388, 391, 392, 394, 396, 397, 400, 405, 408, 409, 411, 414, 422, 465, 466, 467], "base64": [105, 113], "basefileselector": [417, 419, 460], "baseformatt": 404, "baselin": [68, 73, 74, 75, 76, 92, 93, 95, 99, 100, 114, 119, 144, 146, 149, 161, 165, 186, 203, 228, 231, 235, 236, 237, 242, 253, 276, 294, 321, 330, 348, 383, 387, 393, 400, 408, 412, 421, 424, 426, 427, 428, 465], "baselinecorrect": [100, 465], "baselinecorrector": 443, "baseobject": 404, "bash": 7, "bash_profil": 88, "bashrc": 88, "basi": [2, 7, 114, 228, 231, 235, 236, 237, 383], "basic": [6, 9, 36, 54, 67, 92, 388, 395, 400, 402, 405, 412], "basinhop": 119, "bastl": 95, "bat": 90, "batch": 90, "bazin": 95, "bbox": [392, 405], "bd": 80, "bdf": 97, "beadapt": 90, "beam": [95, 397], "beata": 95, "becaus": [7, 10, 92, 112, 114, 118, 122, 136, 176, 392, 396, 397, 399, 402, 405, 406, 413, 414], "becom": [2, 9, 114, 151, 411], "bee": [114, 227], "been": [2, 5, 6, 10, 11, 13, 14, 20, 46, 51, 75, 84, 87, 88, 90, 92, 100, 101, 102, 114, 167, 191, 269, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 388, 390, 392, 396, 397, 400, 402, 404, 405, 407, 409, 410, 411, 413, 416, 423, 441, 445, 461, 463, 465, 466, 467], "beequal": 402, "befor": [6, 7, 9, 11, 14, 80, 87, 88, 90, 91, 92, 98, 101, 105, 113, 114, 117, 122, 137, 138, 147, 148, 150, 170, 176, 184, 188, 189, 190, 197, 210, 213, 244, 256, 257, 258, 259, 260, 261, 262, 266, 267, 335, 350, 353, 365, 366, 388, 390, 394, 397, 400, 401, 405, 407, 409, 410, 413, 414, 415, 424, 459], "beforehand": 7, "begin": [9, 75, 389], "beginn": 400, "behav": [389, 396, 402, 404], "behavior": [4, 7, 9, 14, 21, 101, 114, 158, 395, 421, 434, 445, 455, 463], "behaviour": [114, 266, 350, 395, 402, 407, 440, 467], "behind": 2, "being": [2, 4, 7, 9, 11, 33, 87, 92, 114, 351, 392], "belarra": 95, "bell": [62, 73, 83, 114, 263, 265, 266, 300, 321, 346, 350, 407, 414], "belong": [98, 99, 244, 253, 388], "below": [5, 6, 9, 32, 76, 88, 89, 90, 101, 114, 166, 207, 223, 242, 266, 350, 353, 366, 384, 388, 389, 390, 392, 393, 395, 396, 397, 399, 402, 405, 407, 411, 414], "benefici": 97, "benzen": [5, 114, 318], "bernstein": 95, "bert": 95, "besid": [2, 9, 395, 414], "best": [2, 6, 36, 54, 55, 64, 71, 75, 86, 112, 114, 118, 122, 165, 247, 389, 391, 393, 405, 414], "beta": 117, "beta_loss": 117, "better": [9, 11, 22, 24, 36, 54, 75, 80, 98, 99, 114, 117, 144, 244, 245, 253, 388, 392, 394, 403, 405, 408, 414, 421], "between": [2, 6, 9, 24, 25, 68, 97, 98, 99, 101, 103, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 127, 128, 135, 140, 144, 164, 176, 202, 207, 214, 234, 243, 244, 245, 253, 287, 303, 390, 392, 393, 403, 405, 413, 414, 415, 418], "bevel": 405, "bewar": [7, 405], "beyond": [84, 397, 413, 414], "beyramysoltan": 95, "bhat": 95, "bi": 5, "bibliographi": 93, "bibtex": 0, "bidimension": 120, "big": [84, 402], "bijlsma": [22, 95], "bilinear": 405, "billion": 397, "bin": [88, 405], "binari": [2, 114, 123, 205, 384, 397, 402, 403, 406, 407, 409, 412], "bind": [2, 87], "biomol": 1, "biosystem": 22, "bird": 9, "bit": [88, 90], "bitbucket": [6, 89], "black": [4, 6, 33, 54, 75, 76, 389, 392, 405], "blackman": [107, 114, 150, 257, 288, 291, 347, 414], "blackmanharri": [114, 170, 184, 188, 258, 259, 260, 263, 264, 265, 266, 267, 300, 345, 346, 350, 365], "blake": [41, 402], "blal": [95, 385, 395], "blank": [6, 9, 51, 214, 401, 405], "blc": [36, 80, 91, 388, 393], "blend": 122, "blob": 51, "block": [7, 9, 32, 76, 86, 92, 389, 397, 401], "blocker": 10, "blue": [9, 54, 390, 392, 401, 405], "bm": [397, 405], "bmh": 405, "bodi": 6, "boelen": [36, 95, 98, 114, 144, 244, 245], "bogaert": 95, "bokeh": 3, "bokhoven": 95, "bold": [9, 401, 405], "bolder": 405, "bole": 95, "bookman": 405, "bool": [9, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 127, 128, 130, 135, 136, 137, 138, 139, 146, 148, 150, 158, 159, 168, 170, 175, 176, 179, 180, 184, 185, 188, 189, 190, 193, 197, 199, 202, 207, 209, 210, 212, 213, 214, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 294, 297, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 335, 349, 350, 351, 353, 354, 355, 357, 359, 360, 362, 365, 366, 379, 380, 381, 382, 413], "boolean": [9, 98, 105, 114, 130, 136, 139, 244, 411], "border": [114, 176, 392, 405], "both": [2, 6, 9, 18, 21, 29, 98, 100, 102, 113, 114, 122, 126, 175, 184, 197, 228, 231, 235, 236, 237, 244, 259, 268, 383, 388, 390, 391, 393, 394, 397, 402, 405, 406, 408, 409, 414, 464], "bottom": [80, 83, 214, 404, 405], "bound": 463, "boundari": [122, 405, 414], "boussard": 95, "box": [114, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 392, 398, 405], "boxstyl": 392, "bp": [2, 388], "br": 401, "bracket": [9, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 402], "braga": 95, "braket": [114, 312], "branch": [89, 113], "braun": [145, 389], "breach": 2, "break": [7, 388, 418, 440], "breakag": 7, "breakpoint": [98, 99, 114, 165, 244, 247, 253, 388], "brian": 396, "brief": [392, 405], "bright": 405, "bring": 6, "broad": [2, 9], "broadcast": [101, 114, 136, 137, 138, 139, 151, 210, 212, 213, 299, 353, 354, 366, 406, 411], "broaden": [63, 114, 170, 188, 258, 260, 408, 412], "broken": 428, "brought": 2, "brown": 95, "browser": [10, 86, 87, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "bruker": [45, 49, 60, 63, 64, 75, 76, 77, 83, 114, 266, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 350, 396, 398, 402, 404, 407, 409, 415, 421], "brukeropusread": [1, 397], "bsd": 92, "bsd3": [114, 191, 269], "bug": [6, 14, 92, 93, 395, 397, 413, 418, 441], "buggi": 4, "build": [6, 7, 9, 13, 20, 428, 435, 454, 457], "built": [9, 10, 14, 75, 77], "builtin": 414, "bunch": 97, "burden": 92, "busi": 2, "buten": [95, 385], "butt": 405, "button": [6, 15, 87, 90, 100, 106], "byte": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "bytesio": 5, "b\u00f6r": 95, "c": [1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 95, 96, 97, 101, 102, 104, 105, 110, 113, 114, 117, 120, 122, 127, 128, 153, 168, 179, 180, 228, 231, 235, 236, 237, 277, 278, 280, 295, 296, 297, 327, 352, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 421, 459, 460], "c0": [22, 41, 101, 390, 402], "c1": [17, 41, 101, 402], "c2": [17, 41], "c3": 17, "c3cp51146d": 95, "c_": 113, "c_0": 390, "c_10": 242, "c_2": [242, 389], "c_3": [242, 389], "c_4": [242, 389], "c_5": 242, "c_6": 242, "c_7": 242, "c_8": 242, "c_9": 242, "c_constrain": [22, 113], "c_constrained_list": 113, "c_curvefit": [34, 386], "c_exp": 97, "c_i": [242, 389], "c_import": [52, 386], "c_l": 113, "c_ls_list": 113, "c_name": 97, "c_pressur": [20, 42], "c_t": 113, "c_time": [20, 42], "c_wavelength": 42, "c_wavenumb": 42, "ca": [111, 114, 169, 388], "cach": 11, "cadmium": 415, "calc": 392, "calcul": [18, 33, 43, 80, 101, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 133, 134, 147, 148, 150, 160, 164, 170, 175, 176, 184, 186, 188, 189, 202, 211, 242, 248, 256, 257, 258, 259, 260, 261, 266, 267, 268, 271, 272, 287, 298, 350, 353, 354, 365, 366, 389, 392, 402, 410, 411, 412, 413], "calibr": [29, 394], "call": [2, 7, 9, 24, 85, 90, 98, 101, 104, 105, 106, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 177, 182, 197, 205, 244, 302, 312, 313, 357, 383, 388, 391, 394, 396, 397, 400, 401, 404, 410, 411, 453, 459], "callabl": [97, 101, 105, 111, 113, 114, 177, 224], "callback": 119, "callback_everi": 119, "callegaro": 95, "can": [2, 5, 6, 7, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 104, 105, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 133, 134, 136, 137, 138, 139, 147, 151, 153, 154, 155, 164, 165, 167, 169, 172, 176, 182, 197, 202, 203, 205, 210, 213, 222, 227, 228, 229, 236, 244, 247, 249, 287, 288, 289, 291, 292, 295, 296, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 333, 338, 347, 352, 353, 357, 366, 369, 378, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 426, 427, 431, 447, 452, 453, 467], "cancel": [2, 396], "cannot": [24, 43, 49, 92, 101, 114, 117, 124, 357, 390, 392, 395, 397, 401, 402, 404, 405, 406, 411, 415, 416], "cantera": [6, 7, 88, 90, 417, 419, 428, 435], "cantera_util": 85, "cap": 405, "capabl": [93, 114, 384, 388, 402, 403, 405], "capit": [2, 9], "caption": 401, "captur": [4, 95, 383, 385], "care": [7, 68, 101, 114, 140, 408], "carefulli": [75, 401], "cargil": 29, "carlson": 95, "carmen": 95, "carolin": 95, "carri": [2, 127, 383, 390], "carriag": 401, "carrier": 95, "carroucel": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 383], "carroucell_samp": [114, 303], "casali": 95, "case": [2, 5, 6, 7, 9, 24, 41, 46, 75, 76, 85, 87, 92, 97, 98, 99, 101, 104, 105, 107, 110, 113, 114, 117, 119, 120, 122, 127, 128, 136, 139, 140, 146, 147, 176, 184, 185, 202, 207, 244, 253, 259, 288, 289, 294, 301, 333, 383, 388, 389, 392, 393, 395, 397, 399, 400, 402, 408, 409, 410, 414, 416, 464], "cast": [7, 9, 101, 112, 114, 118, 411], "castillejo": 95, "cat": 9, "catal": 95, "catalina": 88, "catalysi": [95, 385], "catalyst": [20, 95, 385, 392], "catalyt": [95, 385], "catch": [7, 114, 146, 294, 392, 395], "categor": 395, "categori": 387, "catherin": 95, "cauchi": [208, 389], "caught": 395, "caus": [2, 7, 114, 353, 366, 395, 405], "caution": [114, 171], "caveat": 7, "cc79a7": 405, "ccount": [390, 391, 405], "ccurr": 113, "cd": [6, 11, 89, 90, 96, 117, 399], "cdot": [105, 113, 383, 393, 417, 419, 460], "ce": 2, "cea": 2, "cecil": [0, 2, 92, 395], "cedex": 2, "ceil": [101, 114, 143, 328], "cell": [20, 42, 86, 95, 197, 383, 385, 388, 395, 396, 399, 401, 405], "cem": 95, "center": [17, 18, 20, 26, 33, 112, 118, 389, 391, 392, 405, 429], "centerednorm": 405, "centimet": [114, 176, 392], "centr": [2, 95], "central": [405, 414], "centuri": 405, "certain": 405, "certainli": [396, 400], "cexp": 97, "cfbruker": [114, 266, 350, 407], "chain": [114, 224, 390], "chanc": [6, 414], "chanceri": 405, "chang": [10, 13, 17, 20, 21, 22, 36, 42, 43, 47, 58, 75, 87, 88, 89, 92, 93, 96, 97, 98, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 176, 199, 202, 228, 229, 244, 288, 289, 291, 292, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 347, 357, 369, 388, 390, 392, 395, 396, 397, 402, 404, 411, 412, 414, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 462, 464, 465, 466, 468], "changelog": [7, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "channel": [6, 20, 88, 90, 114, 314, 436], "channel_prior": 6, "char": [6, 101, 102, 389], "charact": [223, 396, 401, 404], "character_cod": 405, "characterist": [2, 80, 400], "charg": 2, "charlott": 95, "charter": 405, "check": [4, 6, 7, 10, 19, 23, 36, 55, 84, 87, 89, 92, 93, 101, 114, 115, 116, 119, 123, 124, 130, 151, 198, 289, 314, 333, 349, 383, 388, 392, 396, 400, 402, 404, 436, 437, 445, 448, 457], "check_upd": 440, "checkout": 6, "chellaboina": [95, 97], "chem": [93, 95, 414], "chemic": [85, 92, 95, 97, 110, 111, 385], "chemistri": [0, 95, 395], "chemolab": [95, 390, 391], "chemometr": [18, 26, 95, 400], "chemrxiv": [95, 385], "chen": 95, "chesnai": 2, "chevali": 95, "chimica": [95, 388], "chn": 397, "choic": [3, 9, 36, 85, 89, 97, 391], "choos": [2, 71, 84, 388, 392, 399, 400, 414], "chose": 88, "chosen": [68, 87, 111, 114, 163, 228, 231, 234, 235, 236, 237, 286, 383, 396, 408], "christian": [0, 95], "chromatograph": 95, "chromatographi": 95, "chrome": 86, "ci": [6, 11, 428], "circular": [114, 159, 275, 401], "circumcircl": 110, "circumst": 2, "citat": 92, "cite": [93, 110, 408, 428], "ckin": 22, "cl": [101, 114, 124, 177, 202, 207], "claim": [2, 400], "clarifi": 6, "clariti": [388, 390, 391], "class": [9, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 136, 139, 144, 145, 149, 165, 183, 186, 197, 205, 208, 242, 244, 245, 246, 247, 248, 251, 252, 253, 288, 302, 312, 313, 330, 342, 348, 367, 384, 387, 388, 390, 401, 402, 463, 465, 467], "classic": [9, 24, 55, 101, 114, 206, 388, 390, 396, 405, 413], "classif": 24, "classmethod": [114, 123, 124, 182, 302, 312, 313], "clayton": 95, "clean": [10, 98, 99, 223, 244, 253, 421, 456], "cleanup": 6, "clear": [6, 22, 29, 32, 33, 36, 63, 64, 68, 71, 75, 76, 80, 114, 122, 228, 229, 231, 232, 233, 235, 236, 237, 238, 388, 389, 390, 392, 394, 405, 407, 408, 409, 410, 414, 416], "clearli": [7, 388, 390, 391, 408, 414], "click": [6, 7, 15, 87, 92, 106, 399], "climat": 430, "clip": 114, "clock": [114, 303], "clone": [6, 7, 15, 86], "close": [5, 9, 32, 97, 101, 114, 176, 202, 383, 388, 392, 393, 410, 414, 465], "close_figur": 114, "closer": [114, 176, 388], "closest": [96, 114, 175, 193, 268, 270, 413], "closur": [95, 113, 383], "closureconc": 113, "closuremethod": 113, "closuretarget": 113, "cloud": [84, 436], "cm": [17, 19, 20, 22, 25, 41, 42, 43, 46, 54, 75, 91, 101, 114, 147, 212, 312, 343, 344, 363, 364, 388, 389, 392, 393, 397, 402, 405, 410, 413, 414, 416], "cmap": [22, 29, 54, 122, 388, 390, 394, 405, 452, 458], "cmd": 90, "cnr": 2, "co": [20, 42, 91, 95, 114, 184, 189, 190, 259, 261, 262, 385, 392, 397, 413], "co2": 95, "cobalt": [95, 385], "coca": [95, 385], "code": [2, 9, 10, 13, 14, 15, 86, 89, 92, 197, 384, 399, 401, 402, 414, 430, 454, 456], "codeclim": [428, 433], "coef": [33, 112, 114, 118, 146, 294, 389], "coeffici": [95, 112, 114, 118, 122, 146, 184, 259, 294, 414], "coerc": 411, "coher": 2, "col": 214, "colab": [84, 417, 419, 422, 428, 448, 460], "colaboratori": [84, 437, 448], "cold": [41, 402], "colleagu": 92, "collect": [4, 7, 102, 114, 312, 383, 450], "collection_length": 450, "collis": 405, "colomap": 405, "colon": [9, 404, 413], "color": [9, 33, 36, 54, 63, 64, 71, 75, 76, 80, 98, 99, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 214, 228, 231, 234, 235, 236, 237, 244, 253, 388, 389, 390, 392, 405, 407, 414, 421, 458], "color_map": [24, 120], "colorbar": [20, 42, 50, 75, 91, 114, 214, 229, 230, 232, 233, 238, 239, 240, 392, 393, 405, 406, 411, 416], "colorblind": [98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253, 405], "colorblind10": 405, "colormap": [19, 23, 54, 75, 91, 98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253, 388, 392, 393, 405, 406, 411, 416, 467], "colorscal": 421, "colorspec": 405, "column": [9, 17, 21, 22, 23, 25, 51, 76, 97, 114, 120, 168, 174, 192, 214, 297, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 383, 390, 391, 405, 413, 416], "columnwis": 390, "com": [6, 29, 46, 51, 89, 95, 388, 390, 394, 401, 414, 461], "combin": [4, 6, 95, 117, 385, 396, 405], "come": [2, 5, 101, 114, 299, 389, 395, 396, 397], "comfort": 399, "comma": [9, 404, 405, 413], "command": [6, 7, 11, 17, 41, 84, 87, 88, 89, 90, 92, 96, 114, 197, 228, 231, 235, 236, 237, 388, 395, 396, 399, 405, 415, 417, 419], "commenc": 2, "comment": [6, 9, 10, 14, 19, 32, 75, 76, 77, 80, 114, 176, 389, 402], "commerci": [2, 92], "commissariat": 2, "commit": [2, 4, 13, 418], "common": [4, 6, 7, 9, 32, 76, 89, 114, 184, 228, 231, 235, 236, 237, 259, 389, 397, 402, 406], "commonli": [128, 367, 389], "commonratio": 76, "commonwidth": 76, "commun": [2, 6, 14, 92, 95], "como": [392, 397], "compact": 124, "compani": 92, "compar": [6, 7, 17, 21, 22, 29, 101, 114, 164, 198, 287, 388, 390, 394, 405, 409, 410, 414, 429], "comparison": [7, 36, 67, 114, 176, 391, 406, 408, 412, 421, 424, 427], "compart": 397, "comparti": 397, "compat": [2, 9, 46, 101, 102, 111, 114, 124, 130, 135, 153, 198, 223, 225, 243, 273, 295, 296, 302, 306, 312, 313, 343, 352, 364, 384, 390, 397, 402, 403, 405, 406, 416, 417, 419, 421, 428, 429, 436, 437, 444, 448, 449, 452, 455, 460, 465, 467], "compens": 2, "compil": 2, "complementari": 9, "complet": [6, 7, 8, 84, 85, 87, 92, 93, 101, 113, 114, 119, 122, 177, 388, 397, 402, 454], "complex": [7, 9, 10, 75, 76, 77, 101, 114, 133, 134, 137, 143, 152, 175, 210, 228, 231, 235, 236, 237, 268, 328, 335, 353, 366, 389, 402, 403, 404, 407, 409, 412, 466], "complex128": [7, 101, 114, 158, 198, 409], "complex64": 409, "complexwarn": 7, "compli": 2, "complianc": 2, "complic": 2, "compon": [2, 9, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 32, 36, 76, 80, 92, 97, 98, 99, 104, 105, 108, 109, 110, 113, 114, 117, 119, 120, 122, 125, 126, 127, 128, 163, 191, 194, 228, 231, 235, 236, 237, 244, 253, 269, 286, 325, 383, 387, 388, 389, 390, 394, 396], "components_": 120, "componr": 87, "compos": [75, 124, 397], "composit": [114, 121, 160, 343, 344, 354, 363, 364, 383, 405], "compound": [18, 95, 101, 114, 124, 127, 169, 201, 360, 385], "comprehens": 95, "compress": [9, 46, 98, 99, 114, 123, 203, 244, 249, 253, 461], "compris": [2, 392], "compui": [104, 105, 113, 117, 119, 120, 122, 127, 128], "comput": [2, 20, 21, 22, 24, 86, 92, 95, 97, 98, 99, 100, 104, 105, 107, 113, 114, 117, 119, 120, 122, 124, 127, 128, 147, 149, 160, 165, 168, 186, 212, 244, 246, 247, 248, 253, 288, 289, 297, 333, 353, 354, 366, 388, 390, 391, 392, 396, 402, 405, 411, 414], "compute_uv": 128, "compuut": [98, 114, 144, 149, 165, 244, 245, 246, 247, 251, 252, 330, 348], "concaten": [18, 75, 93, 114, 352, 396, 397, 400, 446, 467], "concent": 383, "concentr": [17, 18, 21, 22, 23, 26, 97, 104, 110, 113, 121, 127, 383, 428], "concept": [9, 392, 413], "concern": [2, 6, 92], "concis": 9, "conda": [6, 422, 428, 447, 450], "condid": 388, "condit": [2, 22, 97, 114, 117, 120, 168, 176, 297, 395, 466, 467], "config": [6, 88, 90, 96, 98, 99, 104, 105, 107, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 197, 244, 253, 288, 455], "configfil": 7, "configur": [2, 6, 88, 98, 99, 104, 105, 107, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 197, 244, 253, 288, 421, 428, 448, 455, 465], "confirm": [24, 114, 115, 123, 397, 442], "conflict": [2, 6, 102], "conform": 2, "confus": [114, 392, 397], "conj": [114, 155, 411], "conjug": [114, 154, 411], "connect": [2, 6, 7, 86, 89, 440, 461], "connectionstyl": [392, 405], "consecut": [101, 114, 164, 287, 411], "consequenti": 2, "consid": [7, 9, 18, 97, 105, 110, 113, 114, 168, 176, 297, 388, 390, 392, 408, 414], "consider": [2, 92], "consist": [4, 5, 7, 10, 29, 98, 99, 101, 107, 114, 202, 244, 253, 288, 388, 390, 394, 396, 405, 467], "consol": [10, 455], "constant": [22, 75, 80, 95, 97, 98, 99, 101, 107, 112, 114, 117, 118, 122, 165, 185, 225, 226, 244, 247, 253, 273, 274, 288, 289, 291, 333, 347], "constantli": 400, "constantsum": 113, "constitu": 2, "constitut": 2, "constrain": [113, 114, 176, 319, 320], "constraint": [16, 38, 83, 92, 95, 97, 101, 104, 113, 114, 119, 147, 302, 383, 387, 390, 417, 419, 449, 460], "construct": [7, 101, 114, 166, 167, 177, 178, 367, 389], "constructor": [19, 23, 101, 114, 167, 174, 177, 178, 192, 384, 403, 431], "consult": [6, 89, 91], "contact": 75, "contain": [2, 5, 6, 7, 21, 22, 29, 46, 49, 58, 84, 91, 92, 97, 98, 99, 101, 102, 105, 111, 114, 117, 120, 121, 123, 128, 129, 143, 147, 160, 164, 165, 176, 212, 223, 229, 232, 233, 238, 244, 247, 253, 287, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 353, 354, 366, 388, 389, 390, 391, 392, 394, 397, 399, 402, 404, 407, 427, 461, 468], "conten": [114, 153, 295], "content": [10, 13, 29, 46, 92, 114, 123, 129, 176, 197, 205, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 390, 391, 394, 399, 402, 413, 461], "content1": [114, 312], "content2": [114, 312], "context": [9, 95, 101, 114, 124, 130, 176, 203, 249, 332, 338, 383, 385, 396, 399], "contigu": [114, 168, 297], "continu": [6, 9, 13, 32, 95, 114, 301, 385, 389, 390], "contour": [41, 114, 214, 233, 392, 405], "contour_alpha": 405, "contour_corner_mask": 405, "contour_negative_linestyl": 405, "contour_start": 405, "contrain": [114, 317], "contrast": 384, "contribut": [2, 5, 13, 14, 89, 92, 110, 114, 147], "contributor": [2, 5, 7, 114, 395], "control": [36, 80, 89, 95, 97, 114, 214, 251, 330, 344, 405], "conveni": [7, 21, 22, 41, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 390, 391, 397, 402], "convenin": 388, "convent": [6, 41, 98, 114, 197, 223, 244, 395, 396, 402, 414], "converg": [21, 22, 23, 36, 80, 105, 113, 122, 127, 390], "convergencewarn": 23, "convers": [43, 96, 97, 101, 114, 357, 397, 402, 410, 412, 463], "convert": [98, 99, 101, 103, 114, 124, 130, 133, 134, 136, 137, 138, 139, 151, 154, 155, 210, 213, 244, 253, 357, 361, 411, 416, 463], "convert_to_html": 404, "convex": [95, 114, 164, 287], "convolut": [107, 114, 288, 291, 347, 367, 389, 412], "coo_matrix": 9, "coord": [5, 9, 18, 20, 22, 33, 41, 42, 43, 58, 76, 91, 96, 102, 111, 114, 121, 135, 146, 147, 176, 177, 212, 243, 294, 314, 349, 384, 389, 391, 392, 397, 402, 403, 413, 421, 423, 463], "coord0": [41, 102, 402], "coord1": [41, 102, 402], "coord1b": [102, 402], "coord2": [41, 102, 402], "coord_pc": 26, "coordin": [3, 5, 17, 18, 21, 22, 23, 25, 33, 40, 43, 46, 54, 60, 75, 76, 77, 80, 83, 91, 93, 98, 99, 100, 101, 102, 114, 117, 135, 137, 138, 156, 165, 167, 171, 172, 176, 177, 178, 181, 182, 210, 213, 221, 222, 225, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 247, 253, 273, 289, 302, 321, 333, 349, 377, 378, 388, 389, 390, 391, 392, 393, 397, 403, 404, 405, 406, 407, 409, 412, 416, 421, 424, 426, 429, 436, 464, 466, 467], "coordinated_universal_tim": 402, "coordmax": 114, "coordmin": 114, "coordnam": 114, "coordrang": 434, "coordset": [9, 20, 33, 41, 42, 75, 101, 114, 171, 172, 174, 177, 181, 182, 192, 221, 222, 377, 378, 384, 389, 402, 467], "coordtitl": 114, "coordunit": 114, "coordx": 402, "copi": [2, 6, 7, 9, 10, 13, 20, 42, 63, 75, 80, 87, 92, 101, 102, 114, 123, 135, 154, 155, 166, 171, 172, 181, 182, 191, 221, 222, 243, 269, 335, 377, 378, 390, 401, 403, 407, 411, 461], "copyright": [12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 90, 91, 114, 292, 369, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 421], "core": [5, 7, 93, 338, 386, 400, 404, 407, 410], "corn": [29, 46, 388, 394, 461], "corner": [95, 428], "corp": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 449], "corr": 80, "correct": [2, 4, 6, 7, 10, 35, 38, 68, 73, 74, 75, 76, 83, 88, 90, 92, 93, 95, 97, 98, 99, 100, 113, 114, 119, 127, 144, 146, 149, 161, 165, 179, 180, 186, 203, 225, 226, 244, 245, 246, 247, 248, 249, 251, 252, 253, 273, 274, 276, 277, 278, 294, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 330, 348, 370, 371, 373, 383, 387, 392, 393, 397, 408, 412, 421, 422, 423, 424, 426, 427, 428, 450, 457, 465, 466], "correctli": [5, 6, 75, 89, 101, 114, 123, 136, 137, 138, 139, 210, 212, 213, 299, 353, 354, 366, 391, 400, 401, 426, 444, 446, 458, 464, 466], "correl": 388, "correspond": [5, 7, 15, 17, 18, 20, 21, 23, 42, 64, 75, 96, 97, 101, 102, 113, 114, 120, 121, 122, 128, 135, 153, 169, 243, 295, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 383, 390, 391, 392, 394, 395, 397, 405, 406, 413, 414, 416], "cosin": [64, 114, 266, 350, 407, 411], "cosmic": [66, 67, 73, 83, 114, 164, 287, 302], "cost": [2, 92], "coudrai": 95, "could": [3, 5, 7, 9, 68, 75, 105, 390, 391, 392, 395, 402, 406, 408], "count": [54, 92, 101, 114, 136, 139, 178, 413], "counter": 9, "countri": 92, "coupard": 95, "courier": 405, "cours": [6, 12, 32, 43, 54, 86, 88, 89, 90, 388, 396, 407], "court": 2, "cousen": 95, "cov": [24, 383, 390, 394], "covari": [383, 394], "cover": [92, 93, 122, 400], "coverag": [20, 428], "cp": [73, 74, 83, 101, 102, 114, 119, 170, 175, 225, 321, 348, 467], "cp_model": 75, "cpu": 9, "cpure": [21, 26, 390, 391], "crack": [92, 95, 385], "crash": [93, 395], "creat": [8, 9, 10, 12, 14, 20, 24, 25, 29, 32, 41, 46, 58, 75, 76, 77, 83, 86, 87, 88, 90, 91, 101, 102, 105, 107, 113, 114, 124, 140, 153, 177, 178, 185, 197, 202, 207, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 288, 289, 291, 295, 296, 301, 309, 322, 323, 333, 347, 352, 388, 389, 390, 391, 393, 394, 397, 400, 401, 403, 404, 407, 409, 411, 413, 414, 416, 445, 467], "creation": [2, 40, 57, 60, 83, 87, 101, 114, 123, 129, 238, 332, 390, 397, 402, 403, 421, 434], "creator": [114, 397], "credit": 2, "criteria": [122, 405], "criterion": [113, 127, 390, 392], "critic": [92, 395], "crop": 80, "cross": [9, 92, 93, 106, 383], "cross_decomposit": 122, "crucial": [68, 408], "csel_matrix": [21, 26, 390, 391], "cstr": 121, "csv": [93, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 396, 397], "csv_delimit": [114, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370], "cti": 121, "cti_fil": 121, "ctx_kwarg": [124, 130], "cube": [105, 411], "cubic": [36, 80, 95, 98, 99, 114, 165, 244, 247, 253, 388], "cuccioloni": 95, "cultrera": [95, 110], "cultrera_callegaro": 110, "cumbersom": 9, "cumsum": 114, "cumul": [24, 114, 120, 128, 160, 390], "cumulative_explained_vari": [24, 128, 391], "curli": 9, "current": [2, 7, 9, 14, 20, 22, 42, 46, 83, 92, 93, 98, 99, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 127, 128, 153, 158, 197, 199, 200, 201, 205, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 253, 288, 295, 296, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 338, 352, 357, 370, 371, 373, 395, 396, 397, 399, 405], "cursiv": 405, "curv": [18, 20, 21, 36, 92, 93, 95, 110, 113, 119, 383, 385, 390, 391, 407, 428, 467], "curvatur": [20, 110], "curve1": [63, 64], "curve2": [63, 64], "curve3": 64, "curve4": 64, "curve5": 64, "custom": [2, 15, 54, 111, 114, 117, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 405, 431, 448], "cut": [17, 18, 104, 389], "cutoff": [17, 18, 104], "cval": [107, 114, 288, 289, 291, 333, 347], "cwd": 396, "cycl": [7, 405], "cycler": 405, "cyclohexan": [95, 385], "c\u00e9dric": 95, "d": [2, 6, 7, 21, 22, 26, 33, 41, 43, 54, 77, 80, 91, 95, 97, 101, 114, 123, 145, 147, 153, 166, 168, 174, 177, 178, 183, 192, 208, 242, 295, 297, 342, 367, 371, 385, 389, 392, 393, 401, 402, 405, 416, 452], "d0": [33, 389], "d1d": [402, 405], "d2": 389, "d2cy00311b": [95, 385], "d2d": 411, "d3cp01585h": [95, 385], "d3d": 402, "d3d_copi": 402, "d3dduplic": 402, "d3mr00013c": [95, 385], "d4nj03440f": [95, 385], "d55e00": 405, "d_0": 389, "d_baselin": [37, 386], "d_plot": [56, 386], "da": 411, "daatset": [114, 161, 276], "dac": 411, "dad": [21, 390, 391], "dael": [95, 385], "dai": [2, 6, 396, 448], "daili": 6, "damag": 2, "dan": [95, 385], "danger": 401, "daniel": 95, "daq": 411, "dario": 95, "dark": 405, "dark2": [392, 393, 416], "dark_background": 405, "darkgrid": 405, "darren": 95, "darwin": 7, "dash": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 399, 405, 458], "dash_capstyl": 405, "dash_joinstyl": 405, "dashdot_pattern": 405, "dashed_pattern": 405, "dask": 124, "data": [0, 1, 2, 3, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 29, 33, 36, 43, 45, 46, 51, 54, 58, 60, 63, 64, 67, 68, 75, 76, 80, 83, 87, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 156, 157, 160, 161, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 221, 222, 227, 228, 231, 235, 236, 237, 243, 244, 245, 247, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 276, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 330, 333, 335, 347, 348, 350, 352, 353, 354, 357, 358, 365, 366, 369, 377, 378, 379, 380, 381, 382, 383, 385, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 408, 409, 410, 412, 413, 414, 421, 422, 431, 437, 447, 463, 466, 467], "data_keyword": [114, 224], "data_onli": [64, 75, 76, 114, 228, 229, 231, 232, 233, 235, 236, 237, 238, 389, 392, 407], "dataarrai": [114, 361], "datadir": [5, 17, 21, 22, 36, 46, 47, 49, 50, 55, 63, 64, 75, 76, 77, 80, 96, 114, 302, 312, 313, 370, 390, 391, 397, 398, 402, 404, 409, 415, 447, 461], "datafil": [86, 396, 397], "datafram": 9, "datain": [107, 288], "datapoint": 101, "datas": [114, 150, 257], "dataset": [3, 5, 7, 9, 16, 17, 22, 25, 26, 29, 31, 33, 36, 38, 45, 47, 49, 51, 55, 58, 63, 64, 67, 68, 75, 77, 80, 93, 95, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 172, 175, 176, 177, 179, 180, 182, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 333, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 363, 364, 365, 366, 369, 370, 371, 373, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 393, 396, 397, 400, 403, 404, 407, 408, 409, 412, 414, 415, 416, 417, 419, 421, 425, 427, 428, 429, 434, 436, 438, 442, 445, 459, 460, 464, 465, 466, 467], "dataset1d": [63, 64], "dataset2": 411, "dataset_1": 123, "dataset_list": 46, "dataset_pca": 24, "datasets_nam": 123, "datasett": 416, "datastet": 383, "datatyp": 411, "date": [2, 5, 6, 7, 9, 10, 46, 89, 91, 114, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 393, 403, 413, 416, 445, 452], "date_autoformatter_dai": 405, "date_autoformatter_hour": 405, "date_autoformatter_microsecond": 405, "date_autoformatter_minut": 405, "date_autoformatter_month": 405, "date_autoformatter_second": 405, "date_autoformatter_year": 405, "datetim": [5, 9, 101, 114, 384, 402, 403, 404], "dattaset": 29, "daturi": 95, "david": 95, "dc": [114, 410, 415], "dc_corrected_fid": 415, "dc_corrected_fid2": 415, "dcolor": 63, "ddof": [114, 353, 366], "ddr": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "de": [2, 20, 42, 95, 203, 249, 383, 385, 397, 413], "deactiv": [6, 89], "deal": [9, 88, 90, 98, 244, 383, 397], "debian": [6, 89], "debug": [98, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 162, 244, 288, 289, 291, 292, 333, 347, 369, 395, 400], "debug_": 395, "decai": [114, 225, 226, 273, 274, 409], "decemb": 95, "decid": [2, 9], "decim": [9, 97, 101, 114, 143, 328, 401, 405, 413, 463], "declar": 119, "decompos": 383, "decomposit": [18, 20, 22, 24, 25, 26, 97, 98, 99, 104, 105, 110, 113, 117, 120, 127, 128, 244, 253, 383, 388, 390, 391, 394, 461], "decompositionanalysi": 390, "deconvolut": 75, "decor": [4, 7], "decreas": [113, 410], "dedic": [88, 90, 92, 396, 409], "deduc": [114, 229, 232, 233, 238, 397], "deem": 2, "deep": [101, 114, 158, 405], "deepcopi": [101, 114, 158], "def": [4, 5, 7, 9, 75, 76, 77, 80, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 131, 132, 148, 150, 170, 184, 188, 197, 228, 229, 230, 244, 253, 254, 255, 256, 257, 258, 259, 260, 266, 267, 288, 343, 350, 364, 365, 389, 397, 402, 404, 414], "default": [5, 6, 9, 20, 41, 42, 46, 49, 55, 63, 67, 71, 75, 76, 87, 88, 90, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 188, 189, 190, 192, 193, 197, 199, 202, 207, 209, 210, 212, 213, 214, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 247, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 294, 295, 297, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 333, 335, 341, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 357, 362, 363, 364, 365, 366, 369, 370, 371, 377, 388, 389, 390, 391, 395, 397, 398, 399, 402, 406, 407, 408, 410, 413, 414, 417, 419, 424, 426, 428, 443, 447, 460, 465, 467], "default_dim_nam": 102, "default_format": [124, 130], "default_opt": 197, "defect": 2, "defens": 2, "defin": [2, 6, 7, 9, 19, 22, 23, 25, 32, 33, 36, 43, 46, 50, 75, 76, 77, 80, 97, 98, 99, 101, 102, 111, 112, 113, 114, 118, 119, 122, 123, 135, 148, 153, 165, 176, 227, 228, 231, 235, 236, 237, 243, 244, 247, 253, 256, 289, 291, 292, 295, 296, 303, 304, 333, 347, 349, 352, 356, 369, 388, 389, 390, 392, 393, 396, 402, 405, 414, 464, 465, 467], "definit": [2, 9, 32, 76, 88, 89, 90, 114, 228, 231, 234, 235, 236, 237, 266, 343, 344, 350, 363, 364, 396, 397, 411, 467], "deflat": 105, "deg": 77, "degener": 105, "degrad": [95, 385], "degre": [36, 80, 98, 99, 107, 114, 165, 225, 226, 242, 244, 247, 253, 273, 274, 288, 289, 291, 333, 347, 353, 366, 388, 389, 411], "dehydr": 23, "dehydrat": 91, "dehydrogen": [95, 385], "dejavu": 405, "dejavusan": 405, "dejavuserif": 405, "delai": 2, "deleg": [114, 227], "delet": [7, 114, 455], "delete_coordset": 114, "delic": 391, "delimit": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371], "delimiteur": [114, 304], "deliv": 395, "delphin": 95, "delta": [68, 75, 76, 107, 114, 164, 287, 288, 289, 333, 353, 366, 408, 409], "delta_": [20, 383], "delta_clock": [114, 303], "demand": [101, 114, 178], "demonstr": [54, 75, 80, 388, 393, 405, 406, 408, 409, 411, 414], "denni": 95, "denois": [69, 114, 302, 337, 386, 412, 465], "denot": [102, 389], "dense_output": 97, "depend": [6, 13, 84, 88, 89, 90, 98, 101, 105, 110, 114, 117, 119, 120, 127, 128, 154, 155, 165, 166, 202, 244, 247, 306, 335, 341, 353, 366, 383, 389, 394, 396, 397, 405, 406, 408, 413, 418, 421, 443, 460, 461, 467], "deprec": [7, 26, 91, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 344, 410, 418, 421, 449, 452, 458], "deprecationwarn": [26, 91, 410], "depth": [2, 51, 89, 405], "der": 95, "deriv": [2, 71, 86, 95, 97, 105, 107, 114, 288, 289, 333, 383, 385, 390, 392, 414], "desc": 114, "descend": [114, 349, 383, 413], "descent": 117, "describ": [2, 5, 6, 9, 102, 114, 123, 164, 287, 383, 388, 391, 397, 400, 401, 402, 405, 414], "descript": [5, 6, 7, 9, 41, 46, 75, 77, 87, 91, 93, 97, 112, 114, 118, 119, 130, 176, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 393, 395, 397, 400, 402, 404, 413, 416], "descriptor": [95, 385], "design": [2, 5, 93, 387, 400, 405], "desir": [4, 7, 14, 17, 68, 97, 101, 114, 117, 171, 181, 212, 221, 301, 366, 377, 391, 392, 396, 405, 408], "desktop": [6, 87], "despik": [67, 68, 95, 114, 417, 419, 460, 465], "despit": [9, 400], "destin": [101, 114, 124, 199, 357], "destroi": 42, "detail": [9, 10, 20, 22, 36, 46, 68, 91, 92, 93, 100, 107, 114, 119, 120, 122, 149, 166, 186, 246, 248, 288, 289, 291, 333, 347, 383, 388, 392, 396, 397, 400, 416, 418, 465], "detect": [2, 68, 87, 92, 97, 98, 99, 114, 144, 149, 164, 165, 186, 244, 245, 246, 247, 248, 251, 252, 253, 287, 330, 348, 388, 392, 405, 408], "determin": [2, 5, 17, 24, 95, 98, 99, 101, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 135, 177, 229, 230, 243, 244, 252, 253, 303, 348, 383, 388, 391, 392, 393, 401, 402, 410, 414], "determinist": [9, 10], "detrend": [54, 67, 98, 99, 114, 144, 149, 186, 244, 245, 246, 248, 251, 252, 253, 330, 348, 394], "dev": [6, 85, 88, 90, 397, 417, 418], "dev1008": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 91, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "dev3": [], "dev4": [], "dev5": [], "develop": [2, 5, 10, 11, 12, 84, 85, 88, 90, 92, 93, 104, 110, 384, 395, 397, 399, 400, 417, 419, 420], "deviat": [68, 113, 114, 120, 127, 160, 164, 212, 287, 353, 354, 366, 383, 390, 400], "devot": 86, "df": [9, 402], "dfit": 389, "diag": [113, 114, 128, 167, 174, 192, 402], "diagnos": 395, "diagon": [114, 166, 174, 192, 383], "dialog": [50, 114, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 370, 371, 373, 397, 398, 405, 431, 442, 444], "dict": [7, 9, 97, 98, 99, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 161, 176, 244, 253, 276, 288, 332, 392, 405], "dict_param_to_optim": 97, "dictionari": [97, 98, 99, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 176, 244, 253, 288, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 392, 397, 402, 404, 405], "did": [2, 388, 396, 404], "dielectr": [95, 385], "diff": [7, 71, 114, 160, 393, 397, 413, 414], "differ": [6, 9, 17, 22, 29, 46, 50, 54, 67, 68, 71, 80, 84, 87, 88, 89, 97, 98, 99, 101, 107, 114, 115, 116, 117, 121, 123, 124, 135, 146, 160, 164, 165, 199, 200, 201, 243, 244, 247, 253, 287, 288, 292, 294, 303, 357, 369, 388, 392, 393, 394, 397, 399, 402, 403, 405, 406, 409, 410, 411, 414, 415, 424, 436, 444, 465], "differenti": [97, 107, 114, 288, 289, 333, 428], "difficult": [92, 390, 391], "difficulti": 6, "diffract": [95, 385], "diffus": [95, 111, 385, 428], "digit": [1, 97, 101, 397, 405, 463], "dilig": 2, "dill": [105, 113], "dim": [7, 17, 19, 22, 51, 71, 75, 77, 101, 102, 107, 114, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 150, 153, 154, 155, 156, 157, 159, 160, 163, 167, 170, 175, 177, 179, 180, 184, 188, 189, 190, 193, 209, 210, 212, 213, 225, 226, 243, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 294, 295, 299, 327, 329, 333, 343, 344, 347, 349, 350, 351, 353, 354, 362, 363, 364, 365, 366, 369, 393, 394, 397, 402, 406, 414, 434, 446], "dim1": [103, 114, 355], "dim2": [103, 114, 355], "dimens": [5, 7, 18, 20, 24, 25, 42, 46, 75, 76, 77, 91, 93, 98, 100, 101, 102, 105, 107, 110, 114, 120, 124, 126, 135, 136, 137, 138, 139, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 160, 163, 165, 167, 170, 175, 177, 179, 180, 184, 186, 188, 189, 190, 193, 201, 209, 210, 212, 213, 225, 226, 228, 231, 235, 236, 237, 243, 244, 245, 246, 247, 248, 251, 252, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 294, 295, 296, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 330, 333, 335, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 362, 363, 364, 365, 366, 369, 371, 388, 390, 391, 392, 393, 394, 396, 397, 403, 404, 407, 409, 411, 412, 413, 416, 421, 426, 430, 466], "dimension": [5, 24, 25, 26, 95, 98, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 124, 127, 128, 130, 178, 228, 244, 335, 351, 383, 384, 388, 391, 402, 411, 412], "dimensionalityerror": [43, 101, 114, 124, 130, 357, 411, 416], "dimensionless": [41, 101, 114, 124, 130, 148, 150, 184, 189, 190, 256, 257, 259, 261, 262, 267, 365, 412, 416], "dir": 438, "direct": [2, 7, 9, 86, 114, 176, 193, 270, 338, 349, 388, 390, 396, 397, 405], "directli": [2, 7, 9, 33, 87, 92, 101, 105, 113, 114, 176, 177, 185, 207, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 383, 388, 389, 390, 391, 397, 400, 401, 402, 405, 414], "directori": [2, 6, 7, 10, 11, 21, 46, 48, 49, 50, 51, 75, 80, 85, 87, 89, 90, 96, 114, 115, 116, 123, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 397, 398, 402, 405, 461], "disabl": 405, "disagr": 2, "disappear": 383, "disast": 2, "disc": 84, "discard": [7, 80, 101], "discardbg": [114, 303], "discharg": [95, 385], "disclaim": 2, "disclos": 92, "disconnect": [101, 102, 114, 158], "discourag": [384, 400], "discov": [9, 14], "discret": [114, 160], "discrimin": [95, 385], "discuss": [2, 6, 9, 12, 83, 400, 441], "disk": [58, 84], "dism": 87, "displai": [2, 9, 20, 24, 25, 26, 41, 42, 54, 87, 98, 99, 101, 102, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 214, 228, 231, 235, 236, 237, 244, 253, 340, 388, 390, 391, 395, 396, 397, 399, 400, 401, 402, 404, 405, 407, 410, 413, 414, 416, 431, 438, 439, 445, 454, 461, 467], "disput": [2, 92], "disregard": [112, 118, 122], "distanc": [33, 76, 101, 102, 114, 117, 140, 176, 389, 392, 402, 405], "distance_fit": 33, "distance_fitted2": 33, "distance_fitted3": 33, "distant": 9, "distinct": [114, 306], "distinguish": 24, "distort": 414, "distribut": [2, 6, 9, 84, 87, 89, 90, 101, 105, 110, 114, 207, 208, 301, 353, 366, 389], "disturb": 2, "div": 401, "diverg": [97, 117, 390], "divid": [114, 120, 212, 400, 410], "divis": 411, "divisor": [114, 353, 366], "dlabel": [101, 114], "do": [2, 6, 7, 9, 10, 11, 12, 14, 15, 17, 22, 24, 25, 36, 42, 43, 55, 58, 80, 86, 87, 88, 89, 90, 92, 96, 114, 120, 146, 172, 197, 294, 303, 383, 390, 391, 392, 393, 396, 397, 399, 402, 405, 416, 442], "doc": [4, 6, 7, 10, 58, 119, 397, 404, 428, 431, 441, 445, 454, 465], "docker": [84, 435], "dockerfil": 11, "docstr": [13, 197], "doctest": 10, "doctestplu": 7, "document": [2, 6, 9, 13, 33, 46, 68, 84, 85, 88, 90, 92, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 145, 166, 176, 183, 197, 208, 242, 244, 253, 288, 289, 333, 342, 367, 392, 399, 400, 403, 405, 428, 429, 430, 434, 435, 449, 453, 454, 457, 461], "doe": [2, 4, 7, 9, 21, 25, 26, 92, 93, 100, 101, 113, 114, 123, 136, 139, 140, 148, 171, 172, 256, 388, 390, 391, 395, 396, 397, 400, 401, 411], "doesn": [9, 10, 402, 411], "dog": 9, "doi": [0, 1, 95, 385, 397], "dollar": 401, "domain": [2, 63, 64, 114, 148, 150, 161, 170, 175, 184, 189, 190, 193, 256, 257, 258, 259, 261, 262, 267, 268, 270, 276, 365, 407, 412], "domenico": 95, "domin": 97, "dominguez": 95, "don": [6, 7, 10, 36, 75, 76, 83, 92, 389, 392, 399, 400, 401, 405], "done": [6, 7, 11, 20, 42, 87, 89, 91, 101, 114, 146, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 294, 357, 359, 360, 388, 391, 396, 402, 405, 408, 424, 434, 459, 463, 464], "done_callback": 106, "donn": [95, 385], "dop853": 97, "dorresteijn": 95, "dot": [9, 18, 19, 114, 117, 124, 214, 229, 230, 232, 233, 238, 239, 240, 391, 404, 405], "dotted_pattern": 405, "doubl": [9, 114, 117, 284, 381, 396], "down": [114, 176, 421], "download": [2, 6, 9, 11, 15, 21, 29, 46, 51, 83, 84, 85, 87, 88, 89, 90, 114, 302, 390, 415, 443, 447, 461], "download_iri": 9, "download_nist_ir": [114, 443], "download_onli": [114, 302], "downlod": 22, "downstream": 120, "dpi": [114, 214, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 388, 406], "dq": 110, "dr": 95, "draft": 2, "drag": [92, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 401], "draw": [114, 214, 228, 234, 405], "drawn": [2, 105, 114, 122, 228, 301], "drift": [54, 114, 165, 247, 388], "drive": [86, 396], "driven": [5, 13], "drop": [88, 90, 92, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 401], "dropdown": [100, 396, 399], "dropna": 9, "dry": [32, 95, 119, 385], "ds1": [123, 405], "ds2": [123, 405], "ds3": 123, "ds_list": 29, "dsc": 18, "dsint": 77, "dso": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "dss": 18, "dtc": 397, "dtype": [7, 9, 18, 25, 101, 112, 114, 118, 124, 133, 134, 140, 160, 167, 168, 171, 172, 174, 177, 178, 181, 182, 185, 192, 202, 207, 212, 221, 222, 297, 301, 353, 354, 366, 377, 378, 402, 409, 411, 421], "due": [2, 4, 11, 18, 36, 87, 114, 146, 223, 294, 392, 406, 415, 416, 463], "duli": 2, "dump": [114, 123, 450], "duplic": [2, 402, 430], "durat": 2, "dure": [2, 4, 7, 10, 19, 23, 87, 98, 99, 101, 112, 114, 118, 121, 176, 244, 253, 357, 384, 389, 390, 395, 402, 403, 405, 421, 463], "dusan": 95, "dx": [93, 95, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 373, 396, 398, 411], "dynam": [75, 92, 95, 98, 99, 114, 122, 176, 203, 244, 249, 253, 385], "dz": 402, "e": [2, 5, 6, 7, 9, 20, 21, 22, 42, 43, 54, 67, 84, 85, 88, 89, 90, 92, 95, 98, 99, 100, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 130, 145, 153, 170, 175, 176, 181, 188, 193, 201, 214, 221, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 253, 258, 260, 268, 270, 295, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 353, 360, 366, 377, 383, 384, 385, 388, 389, 390, 391, 392, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 408, 410, 411, 413, 414, 416, 417, 419, 458, 467], "e2975": 95, "e402": 397, "e_i": [383, 394], "e_project": [58, 59, 386], "e_x": [383, 394], "ea": 97, "ea_1": 97, "ea_n": 97, "each": [2, 7, 9, 20, 25, 29, 42, 75, 80, 83, 86, 97, 98, 99, 100, 101, 102, 105, 110, 112, 113, 114, 118, 119, 120, 123, 133, 134, 147, 152, 164, 176, 177, 178, 185, 214, 244, 253, 287, 303, 383, 384, 388, 389, 390, 391, 392, 393, 394, 396, 397, 401, 402, 403, 408, 411, 413, 414, 417, 418, 419, 460], "earthquak": 2, "eas": 399, "easi": [6, 9, 92, 396, 397, 399], "easier": [9, 67, 400, 408, 448], "easiest": [6, 7, 88, 90, 405], "easili": [2, 7, 9, 26, 58, 89, 90, 92, 197, 389, 390, 392, 396, 400, 402, 404, 411, 413], "echantillon": 397, "econom": 2, "edg": [107, 114, 122, 151, 176, 214, 288, 289, 291, 333, 347, 405], "edgecolor": [122, 214, 405], "edit": [7, 88, 92, 96, 417, 419], "editor": [7, 95], "eelco": 95, "efa": [16, 22, 38, 83, 93, 101, 105, 110, 113, 114, 117, 120, 127, 128, 153, 168, 312, 383, 391, 400, 428, 456, 461], "efa1": 17, "efa2": 17, "effect": [2, 6, 67, 95, 114, 175, 176, 266, 268, 302, 312, 313, 350, 385, 387, 390, 402, 405, 407, 408, 414], "effici": [95, 105, 120, 385, 396], "effort": 2, "eibar": 95, "eigenvalu": [24, 104, 120, 390], "eigenvector": [29, 46, 114, 310, 311, 388, 394, 461], "eigh": 105, "eignenvector": 388, "eiler": [36, 70, 73, 83, 95, 98, 107, 114, 144, 244, 245, 288, 289, 291, 292, 302, 333, 347, 369, 412], "eingenvector": 396, "either": [2, 6, 7, 20, 21, 46, 80, 89, 92, 97, 98, 101, 105, 114, 122, 146, 147, 176, 197, 244, 294, 312, 335, 383, 390, 391, 396, 402, 405], "elaps": [102, 397, 402], "elect": 2, "electr": 2, "electrolyt": [95, 385], "element": [2, 101, 114, 117, 124, 133, 134, 136, 137, 138, 139, 151, 160, 174, 176, 192, 197, 207, 210, 212, 213, 353, 354, 356, 366, 383, 397, 401, 403, 405, 410, 411, 413], "elementari": 97, "elementwis": 117, "elimin": [67, 408], "elizabeth": 95, "elnaz": 95, "els": [5, 7, 10, 46, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 152, 197, 244, 253, 288, 302, 312, 313, 392, 404, 405, 411], "elsevi": 95, "elsewher": [114, 174], "elut": [19, 26, 390, 391], "el\u017cbieta": 95, "em": [63, 75, 77, 114, 188, 260, 263, 264, 265, 266, 300, 345, 346, 350, 407, 409], "emb": 93, "embrac": [5, 7], "emerg": 2, "emit": 405, "emmerl": 95, "emphas": [98, 99, 244, 253, 401], "emploi": [114, 164, 287], "empti": [101, 105, 114, 124, 172, 181, 182, 197, 221, 222, 377, 378, 392, 400, 402, 404, 405], "empty_lik": [114, 171, 181, 182, 221, 222, 377, 378], "emptylik": [114, 172], "en": [2, 4, 7, 392, 405], "enabl": [2, 32, 76, 87, 114, 120, 176, 292, 369, 389, 400, 448], "enclos": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324], "encod": [9, 114, 308, 397], "encount": [2, 6, 388, 410, 411], "encourag": [2, 4, 5, 6, 7, 10], "end": [7, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 75, 76, 77, 80, 87, 88, 97, 98, 99, 100, 101, 106, 107, 114, 140, 148, 161, 202, 207, 244, 253, 256, 276, 288, 289, 291, 333, 347, 388, 392, 397, 405, 413, 414], "endeavor": 2, "endpoint": [101, 114, 140, 185, 202, 207], "energi": [2, 43, 383, 402], "enforc": [2, 113], "engin": [87, 397], "english": [2, 10], "enh": 6, "enhanc": [6, 7, 14, 397], "enough": [391, 413], "ensicaen": 400, "ensur": [2, 4, 5, 7, 87, 105, 114, 120, 151, 197, 410, 465], "enter": [86, 100, 388, 399, 401], "entir": [2, 7, 92, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "entireti": 2, "entiti": 2, "entitl": 2, "entri": [7, 100, 114, 123, 171, 197, 351, 401, 405, 414, 445], "entropi": 105, "enum": [114, 135, 243, 266, 350], "enumer": [75, 124, 414], "env": [6, 88, 89, 90, 395, 404, 405, 421], "env_creat": 6, "environ": [10, 87, 88, 90, 92, 95, 96, 100, 385, 399], "environment": 95, "environment_nam": 88, "eq": 414, "equal": [25, 98, 99, 101, 113, 114, 136, 147, 174, 175, 176, 185, 202, 207, 214, 234, 242, 244, 253, 266, 268, 350, 383, 389, 390, 391, 402, 405, 407, 411], "equat": [31, 32, 38, 83, 97, 101, 105, 110, 111, 112, 113, 114, 383, 387, 390, 391, 394], "equip": [2, 400], "equiv": [22, 383], "equival": [9, 19, 24, 64, 71, 86, 98, 99, 107, 113, 114, 126, 148, 150, 159, 163, 168, 170, 174, 175, 179, 180, 184, 188, 189, 190, 192, 193, 209, 214, 225, 226, 227, 244, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 297, 300, 327, 329, 333, 343, 344, 345, 346, 347, 350, 358, 363, 364, 365, 369, 384, 388, 395, 396, 402, 405, 407, 411, 413, 414], "eras": 402, "ermit": 388, "error": [2, 4, 7, 10, 75, 92, 97, 98, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 147, 148, 150, 170, 173, 175, 184, 189, 190, 193, 244, 256, 257, 258, 259, 261, 262, 267, 268, 270, 288, 289, 291, 292, 306, 312, 313, 333, 347, 351, 357, 365, 369, 383, 390, 391, 394, 396, 397, 402, 405, 406, 410, 411, 413, 415, 416, 421, 445, 455, 458, 467, 468], "error_": [43, 395, 402, 406, 411, 416], "errorbar_caps": 405, "esc": 399, "escap": [223, 396], "especi": [9, 114, 353, 366, 383, 400, 405], "essenti": [6, 92, 397, 400], "est": 402, "establish": [2, 383], "estim": [22, 80, 97, 98, 112, 114, 118, 120, 164, 244, 287, 353, 366, 383, 392, 394, 408], "et": [2, 16, 26, 38, 83, 97, 98, 110, 113, 114, 120, 244, 252, 302, 348, 383, 385, 388, 390, 391], "etc": [2, 5, 9, 10, 41, 75, 76, 92, 102, 113, 114, 122, 135, 197, 242, 243, 301, 306, 383, 384, 389, 391, 392, 396, 400, 402, 403, 404, 405], "etienn": 95, "euclid": [113, 390], "euclidean": 390, "eugen": 24, "eugenio": 95, "euler": 405, "europ": 405, "ev": [18, 43, 128, 402], "ev_cum": 128, "ev_ratio": 128, "evalu": [6, 22, 97, 98, 107, 114, 136, 139, 176, 244, 288, 289, 291, 332, 333, 347], "even": [5, 22, 90, 97, 101, 114, 176, 199, 289, 333, 335, 344, 353, 357, 396, 397, 402, 416, 446], "evenli": [101, 110, 114, 140, 143, 185, 202, 207, 328, 463], "event": [2, 97], "eventu": [6, 89, 98, 99, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 244, 253, 313, 393], "everi": [6, 9, 120, 448], "everybodi": 2, "everyth": [6, 390], "everytim": [101, 463], "evid": 2, "evoc": 10, "evol": 392, "evolut": [17, 383, 392, 428], "evolv": [17, 95, 104, 105, 110, 113, 117, 120, 127, 128, 383, 390], "ev\u00b2": 402, "ev\u2070": 402, "ex": [32, 87, 90, 389], "exact": [6, 9, 88, 96, 101, 102, 114, 120, 123, 158, 168, 297, 383, 392], "exactli": [21, 388, 389, 397, 416], "exagger": 392, "examin": [383, 388, 390, 391, 392, 414], "exampl": [5, 6, 7, 10, 16, 22, 27, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 140, 145, 146, 147, 151, 158, 160, 167, 171, 174, 176, 177, 178, 181, 182, 183, 192, 197, 198, 205, 208, 212, 221, 222, 223, 242, 244, 253, 266, 288, 294, 295, 296, 303, 304, 306, 310, 314, 317, 318, 319, 320, 324, 338, 342, 343, 344, 352, 353, 354, 357, 358, 363, 364, 366, 367, 370, 371, 373, 377, 378, 384, 386, 387, 389, 390, 392, 397, 400, 401, 402, 404, 405, 407, 408, 411, 412, 413, 415, 416, 422, 428, 456, 459, 461, 465, 466, 467], "exce": 2, "excel": [1, 10, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373], "exceot": 388, "except": [4, 9, 43, 84, 87, 97, 101, 103, 114, 123, 124, 130, 136, 139, 140, 152, 153, 168, 174, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 295, 297, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 349, 388, 392, 395, 400, 402, 405, 406, 411, 416, 424, 431, 442], "excess": 9, "exchang": [92, 95, 397, 416], "exclud": [101, 114, 123, 164, 176, 202, 287], "exclus": [2, 114, 176], "excus": 2, "exectut": 87, "execut": [2, 21, 27, 30, 34, 37, 39, 44, 52, 56, 58, 59, 61, 65, 69, 72, 78, 81, 82, 86, 88, 90, 97, 101, 114, 123, 129, 177, 178, 228, 231, 235, 236, 237, 331, 332, 386, 395, 396, 417, 419, 460], "exemplifi": 392, "exercis": [2, 388], "exhaust": [7, 384], "exhibit": 4, "exist": [2, 5, 6, 7, 9, 14, 88, 89, 90, 96, 98, 104, 105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 127, 128, 135, 176, 243, 244, 302, 388, 391, 395, 397, 399, 403, 442], "exit": [6, 88, 89], "exp": [21, 22, 41, 75, 77, 105, 114, 170, 183, 188, 258, 260, 342, 389, 390], "exp_conc": 121, "exp_idx": 121, "expand": [114, 197], "expand_dim": 5, "expandus": 396, "expans": 409, "expect": [5, 7, 14, 32, 76, 106, 112, 114, 118, 122, 224, 303, 388, 389, 390, 392, 393, 394, 395, 397, 406, 413, 417, 419, 424], "experi": [42, 91, 93, 104, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 396, 402], "experienc": [2, 9, 400], "experiment": [9, 21, 22, 43, 45, 48, 60, 83, 93, 97, 101, 104, 110, 111, 114, 121, 169, 206, 227, 302, 309, 312, 321, 349, 384, 387, 390, 391, 397, 402, 406, 407, 411, 421, 425, 467], "expert": 10, "explain": [9, 14, 17, 24, 25, 100, 114, 120, 128, 163, 286, 383, 389, 391, 397, 400], "explained_vari": 128, "explained_variance_ratio": [128, 391], "explan": [6, 9, 10, 415], "explanatori": [6, 383, 394], "explicit": [2, 97, 101, 102, 114, 122, 398], "explicitli": [7, 9, 87, 101, 114, 392, 396, 405], "exploit": 2, "explor": [86, 93, 392], "exploratori": 93, "explos": 2, "expno": [49, 63, 64, 75, 76, 77, 114, 321, 402, 404, 407, 409, 415], "expon": [97, 114, 266, 350, 407], "exponenti": [62, 73, 75, 83, 97, 114, 170, 188, 225, 226, 258, 260, 273, 274, 321, 409, 411, 412], "export": [9, 93, 114, 115, 116, 123, 396, 400, 421], "expos": [95, 384, 385, 400], "express": [2, 9, 17, 43, 80, 110, 114, 124, 170, 188, 214, 229, 230, 232, 233, 238, 239, 240, 258, 260, 394, 405, 411], "expressli": 2, "exptc": [114, 225, 226, 273, 274, 409], "extend": [392, 397, 413], "extens": [5, 7, 9, 21, 46, 51, 87, 92, 106, 107, 114, 115, 123, 176, 197, 229, 232, 233, 238, 288, 289, 291, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 347, 370, 371, 373, 392, 396, 397], "extent": 383, "extern": [2, 6, 95, 97, 104, 105, 110, 111, 113, 117, 119, 120, 122, 127, 128, 385, 403, 414, 422, 428], "extra": [7, 113, 120, 389, 402], "extra_msg": 103, "extract": [51, 76, 105, 114, 117, 120, 166, 167, 313, 387, 388, 392, 397, 400, 410, 443], "extraoutputgetconc": 113, "extraoutputgetspec": 113, "extrem": [92, 114, 267, 365, 390, 393, 414], "extrema": 388, "ey": [114, 192], "f": [6, 7, 17, 21, 32, 33, 46, 71, 75, 76, 89, 95, 97, 101, 110, 114, 123, 183, 205, 208, 242, 342, 370, 389, 390, 391, 392, 394, 395, 397, 405, 414], "f0e442": 405, "f0f0f0": 405, "f1": [32, 64, 75, 76, 114, 371, 389, 404, 407, 409], "f2": [18, 77, 114, 371, 404], "f401": 395, "f811": 395, "f_ev": [17, 18, 104], "fabrizia": 95, "face": [122, 416], "facecolor": [122, 214, 405], "fact": [2, 36, 390, 400], "factor": [17, 95, 97, 98, 99, 104, 105, 110, 113, 117, 120, 127, 128, 244, 253, 383, 405, 411], "factoris": 391, "fail": [2, 5, 6, 7, 9, 10, 97, 388, 406, 429], "failur": [2, 4, 405], "faith": 2, "fall": 405, "fals": [4, 5, 7, 22, 26, 29, 32, 33, 36, 46, 58, 63, 64, 68, 71, 75, 76, 80, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 130, 135, 136, 137, 138, 139, 146, 147, 148, 150, 158, 159, 168, 170, 175, 179, 180, 184, 185, 188, 189, 190, 193, 197, 198, 199, 202, 207, 209, 210, 212, 213, 214, 221, 225, 226, 228, 229, 231, 232, 233, 235, 236, 237, 238, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 294, 297, 299, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 335, 336, 339, 349, 350, 351, 353, 354, 355, 357, 359, 360, 362, 365, 366, 379, 380, 381, 382, 388, 389, 390, 391, 392, 394, 397, 402, 405, 407, 408, 409, 410, 411, 414, 463], "famili": [97, 405], "familiar": [9, 405], "fanci": [75, 405, 464, 467], "fantasi": 405, "far": 97, "farid": 95, "fashion": 411, "fast": [68, 104, 105, 110, 113, 114, 117, 120, 127, 128, 175, 193, 268, 270, 397, 399, 405, 409, 467], "faster": [6, 11, 80, 97, 105, 114, 117, 171, 172, 176, 251, 330, 467], "fastest": [6, 89, 114, 176, 389], "fastica": [16, 38, 83, 104, 110, 113, 114, 117, 120, 127, 128, 168, 302, 463, 467], "fault": 2, "favor": 465, "favorit": [399, 400], "fc": 392, "feasibl": 95, "featur": [4, 5, 6, 7, 14, 23, 24, 87, 92, 93, 95, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 149, 168, 186, 244, 246, 248, 253, 288, 289, 291, 292, 297, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 347, 369, 383, 387, 391, 397, 400, 402, 405, 411, 416, 418], "featurenam": 87, "federico": 95, "fee": 2, "feedback": 6, "feel": 9, "felipa": 405, "fer": [95, 385], "fern": 95, "fernandez": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 90, 91, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "ferrihydrit": [95, 385], "ferrit": [95, 385], "fetch": 6, "few": [6, 21, 29, 54, 91, 114, 122, 314, 390, 394, 402], "ff": [6, 89], "ffmpeg": 405, "ffmpeg_fil": 405, "fft": [75, 77, 114, 193, 400, 410, 412, 415], "fftbin": 414, "fhz": 338, "fi": 409, "fibr": [95, 385], "fibroin": [95, 385], "fid": [5, 75, 407, 409, 415], "fid2": [409, 415], "fid3": 409, "fie": [114, 115, 123], "field": [0, 2, 92, 97, 100, 102, 114, 313, 396, 402], "fifo": [18, 104], "fig": [9, 114, 405], "fignum": 114, "figsiz": [20, 42, 43, 54, 68, 71, 75, 114, 214, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 388, 389, 390, 391, 393, 402, 405, 406, 408, 409, 410, 411, 414, 415, 416], "figur": [18, 20, 24, 25, 42, 43, 53, 60, 68, 71, 75, 76, 83, 92, 114, 120, 165, 214, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 302, 340, 388, 389, 390, 391, 392, 393, 406, 408, 409, 410, 411, 414, 415, 416], "figure_autolayout": 405, "figure_dpi": 405, "figure_edgecolor": 405, "figure_facecolor": 405, "figure_figs": 405, "figure_frameon": 405, "figure_max_open_warn": 405, "figure_subplot_bottom": 405, "figure_subplot_hspac": 405, "figure_subplot_left": 405, "figure_subplot_right": 405, "figure_subplot_top": 405, "figure_subplot_wspac": 405, "figure_titles": 405, "figure_titleweight": 405, "file": [1, 2, 6, 7, 8, 9, 10, 12, 21, 22, 27, 30, 34, 37, 39, 44, 45, 52, 56, 59, 60, 61, 65, 69, 71, 72, 75, 78, 81, 82, 83, 87, 88, 90, 91, 95, 100, 101, 106, 114, 115, 116, 121, 123, 197, 205, 223, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 341, 370, 371, 373, 386, 390, 391, 393, 394, 398, 401, 404, 405, 410, 413, 414, 416, 421, 422, 429, 438, 440, 442, 447, 454, 455, 461, 463, 464, 466, 467], "filenam": [5, 46, 91, 101, 114, 115, 116, 123, 197, 205, 223, 229, 232, 233, 238, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 393, 396, 397, 416, 429, 442, 467], "filename1": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324], "filename2": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324], "fileselector": [417, 419, 460], "filetyp": [8, 114, 123, 417, 419, 460], "fill": [107, 114, 117, 122, 159, 171, 172, 181, 182, 209, 221, 222, 275, 279, 281, 282, 283, 284, 285, 288, 289, 291, 329, 333, 347, 377, 378, 379, 380, 381, 382, 405, 410, 412, 413], "fill_valu": [114, 172, 181, 182, 221, 378, 402, 411], "fillna": 9, "filter": [1, 51, 68, 71, 72, 106, 114, 176, 333, 334, 347, 369, 386, 409, 412, 465], "final": [6, 9, 19, 21, 22, 25, 29, 33, 36, 51, 54, 58, 92, 93, 101, 113, 114, 177, 178, 185, 207, 383, 388, 389, 390, 392, 395, 396, 397, 400, 402, 403, 405, 414], "financi": [2, 92], "find": [10, 17, 23, 32, 33, 46, 92, 93, 95, 98, 101, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 156, 157, 176, 244, 299, 387, 393, 396, 400, 402, 406, 411, 414, 415, 466], "find_peak": [75, 76, 114, 387, 389], "find_peaks_cwt": [114, 176], "findfont": 405, "fine": [6, 392, 414], "finish": [9, 197], "finit": 411, "fire": 2, "first": [2, 5, 6, 7, 9, 10, 11, 17, 20, 21, 22, 24, 29, 42, 46, 51, 54, 55, 71, 80, 85, 86, 87, 89, 91, 97, 98, 101, 102, 105, 110, 111, 113, 114, 117, 119, 120, 122, 124, 127, 128, 135, 136, 139, 146, 164, 176, 214, 225, 243, 244, 273, 287, 294, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 335, 338, 344, 355, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 404, 405, 408, 409, 411, 412, 413, 414, 461], "firstli": 2, "fisher": 24, "fist": 392, "fit": [9, 17, 18, 20, 22, 24, 25, 26, 29, 31, 33, 36, 38, 73, 74, 75, 80, 83, 91, 92, 93, 97, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 127, 128, 144, 165, 176, 195, 242, 244, 245, 247, 253, 288, 289, 291, 321, 333, 347, 367, 383, 387, 388, 390, 391, 392, 393, 394, 400, 405, 414, 421, 440, 459, 467], "fit_intercept": [112, 118], "fit_reduc": [104, 105, 110, 113, 117, 119, 120, 122, 127, 128], "fit_to_concentr": [22, 97], "fit_to_exp_idx": 121, "fit_to_gas_concentr": 121, "fit_transform": [17, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128], "fitter": [75, 77], "fivethirtyeight": 405, "fivo": 95, "fix": [7, 9, 14, 32, 54, 76, 101, 114, 121, 143, 328, 383, 389, 390, 408, 411, 418], "fixtur": [4, 7], "flag": [7, 101, 114, 154, 155, 234, 335, 349, 351, 355, 357, 362], "flake8": [4, 6, 7], "flaki": 4, "flat": [114, 176, 291, 347, 392, 414], "flatten": [101, 114, 137, 138, 147, 160, 210, 212, 213, 353, 354, 366, 414], "flavor": 14, "flexibl": [6, 114, 149, 168, 186, 246, 248, 297, 384, 388, 390, 399, 402, 403], "float": [9, 17, 23, 25, 36, 54, 76, 97, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 135, 140, 143, 144, 160, 161, 163, 164, 170, 174, 176, 177, 178, 179, 180, 184, 188, 192, 202, 207, 212, 214, 222, 225, 226, 228, 231, 234, 235, 236, 237, 243, 244, 245, 253, 258, 259, 260, 266, 273, 274, 276, 277, 278, 286, 287, 288, 289, 291, 292, 301, 328, 333, 338, 347, 350, 353, 354, 366, 369, 388, 392, 393, 402, 413, 416], "float32": [7, 114, 301, 353, 366], "float64": [5, 7, 18, 20, 25, 33, 41, 42, 43, 46, 48, 58, 91, 101, 102, 114, 140, 146, 147, 160, 167, 174, 177, 178, 181, 182, 212, 221, 222, 294, 296, 301, 302, 303, 304, 310, 311, 312, 313, 314, 317, 318, 319, 320, 324, 343, 344, 352, 353, 354, 357, 363, 364, 366, 377, 378, 388, 396, 397, 402, 411, 413], "floor": [101, 114, 143, 328], "flore": 95, "flow": [95, 385], "fm": 95, "fmax": [101, 114, 137, 138, 210, 213], "fmin": [101, 114, 137, 138, 210, 213], "fmod": 411, "fn": [101, 114, 177, 197], "focu": 414, "focus": 92, "folder": [5, 6, 7, 10, 15, 50, 75, 76, 77, 80, 90, 114, 123, 302, 306, 312, 313, 396, 399, 402, 454], "follow": [2, 4, 5, 6, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 68, 75, 76, 77, 80, 84, 86, 87, 88, 90, 91, 92, 96, 97, 98, 99, 100, 110, 113, 114, 122, 153, 176, 227, 244, 253, 295, 296, 306, 331, 338, 349, 352, 384, 388, 389, 390, 391, 392, 395, 396, 397, 399, 400, 401, 402, 404, 405, 414], "fonction": 23, "font": [114, 229, 230, 232, 233, 238, 239, 240, 405, 435], "font_famili": 405, "font_siz": 405, "font_styl": 405, "font_vari": 405, "font_weight": 405, "fontsiz": [71, 114, 229, 230, 232, 233, 238, 239, 240, 392, 405, 414], "foo": 9, "fopr": 391, "forbidden": [32, 76, 389], "forc": [2, 7, 101, 102, 112, 114, 118, 198, 199, 340, 357, 401, 405, 416], "force_pound": 124, "force_stack": 446, "forego": 2, "foreground": 396, "forg": [6, 88, 89, 90], "forget": [17, 393, 400], "forgotten": 421, "fork": 5, "form": [2, 9, 95, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 170, 184, 188, 189, 190, 242, 244, 253, 258, 259, 260, 261, 262, 266, 288, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 335, 350, 383, 390, 396, 397, 402, 405, 407, 414], "formal": [383, 388], "formaldehyd": [95, 385], "format": [2, 4, 7, 8, 9, 10, 14, 23, 26, 46, 49, 51, 55, 71, 93, 100, 114, 115, 116, 122, 123, 162, 173, 195, 197, 229, 232, 233, 238, 303, 338, 368, 370, 371, 373, 389, 398, 399, 401, 402, 404, 405, 414, 421, 445, 450, 452, 466], "format_latex": 197, "formatt": [404, 405], "former": [114, 176, 397, 467], "formula": 97, "forth": 2, "fortran": 114, "fortun": [396, 413], "fortunelli": 95, "forum": [12, 397, 400], "forward": [17, 18, 104, 105, 110, 113, 117, 120, 127, 128], "found": [2, 7, 9, 22, 24, 46, 55, 83, 97, 102, 389, 392, 396, 402, 405, 409, 414], "four": [390, 406, 413], "fourier": [75, 114, 175, 179, 180, 191, 193, 268, 269, 270, 277, 278, 397, 407, 410, 412], "fourth": [114, 164, 287], "fp": 119, "fppm": 338, "fr": [0, 10, 88, 90, 95, 395, 397, 400, 409], "fr_fr": 405, "frac": [112, 114, 118, 122, 148, 183, 184, 189, 190, 208, 256, 259, 261, 262, 266, 342, 350, 383, 389, 407], "fraction": [214, 392, 405], "frame": [214, 405], "frameon": 214, "framework": [0, 3, 93, 95, 385, 395], "fran": 95, "franc": 2, "francesco": 95, "francisco": 95, "frantz": [95, 385], "franziska": 95, "freder": 95, "fredholm": 111, "free": [2, 6, 9, 14, 89, 92, 104, 388, 409], "freedom": [2, 114, 353, 366], "freeli": 2, "freetyp": 405, "freita": 95, "french": 2, "frequenc": [5, 43, 101, 114, 175, 179, 180, 193, 268, 270, 277, 278, 338, 383, 410], "friendli": [95, 98, 99, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 123, 127, 128, 244, 253, 396], "fritsch": 95, "frobeniu": 117, "from": [2, 5, 6, 7, 9, 10, 13, 14, 15, 16, 19, 22, 24, 27, 29, 30, 34, 37, 38, 39, 41, 43, 44, 51, 52, 54, 56, 58, 59, 61, 65, 66, 67, 69, 72, 73, 75, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 101, 102, 104, 105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 133, 134, 135, 136, 139, 140, 144, 149, 153, 164, 165, 167, 169, 171, 172, 174, 175, 177, 178, 181, 182, 185, 186, 191, 192, 193, 197, 202, 205, 206, 207, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 268, 269, 270, 287, 291, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 330, 338, 347, 348, 351, 352, 353, 356, 357, 358, 366, 370, 371, 373, 377, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 405, 407, 410, 411, 413, 414, 415, 416, 417, 419, 421, 440, 443, 447, 454, 458, 463, 465, 466, 467], "from_": 130, "from_list": 124, "from_sequ": 124, "fromfunct": [101, 114, 178, 389, 402], "fromit": [101, 114, 177], "fsh": [114, 280, 327], "fsh2": [114, 179, 277, 280, 327], "ftir": [23, 91, 95, 104, 114, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 324, 383, 385, 388, 412, 437], "fulfil": [2, 114, 176], "full": [2, 6, 9, 10, 11, 14, 22, 46, 92, 114, 120, 167, 171, 172, 176, 182, 221, 222, 377, 378, 388, 392, 393, 396, 397, 402, 405, 408, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "full_lik": [114, 171, 172, 181, 221, 222, 377, 378, 402], "full_matric": 128, "fulli": [92, 388, 396, 408, 414, 467], "fulllik": [114, 182], "fullscal": 391, "fun": 105, "fun_arg": 105, "func": [9, 106, 114, 197, 224, 389, 402], "func1": [101, 114, 177], "function": [2, 5, 7, 9, 10, 21, 22, 23, 41, 64, 71, 75, 76, 80, 85, 88, 90, 97, 101, 105, 106, 107, 110, 111, 113, 114, 117, 119, 120, 121, 133, 134, 146, 148, 149, 150, 159, 166, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 188, 189, 190, 192, 193, 197, 208, 209, 224, 225, 226, 227, 234, 242, 246, 248, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 288, 289, 292, 294, 297, 299, 302, 312, 313, 327, 329, 333, 335, 342, 350, 353, 365, 369, 370, 383, 389, 392, 395, 396, 397, 400, 403, 404, 405, 410, 412, 414, 416, 421, 427, 428, 434, 453, 459, 467], "further": [2, 6, 9, 11, 86, 87, 89, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 392], "futur": [2, 7, 396, 397, 399, 400, 405, 410, 463], "fv": [20, 24, 25, 46, 75, 76, 77, 91, 390, 391, 393, 397, 400, 402, 404, 407, 409, 411, 413, 416], "fwhm": 80, "g": [5, 7, 9, 20, 33, 43, 64, 80, 84, 85, 90, 92, 95, 100, 101, 102, 104, 114, 124, 130, 176, 181, 188, 201, 221, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 260, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 360, 377, 383, 384, 388, 389, 390, 392, 396, 397, 399, 401, 402, 403, 404, 405, 407, 408, 410, 411, 414, 416, 458, 467], "ga": [95, 121], "galact": [5, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 440], "galacticdata": [5, 114, 318], "galleri": [27, 30, 34, 37, 38, 39, 44, 52, 56, 58, 59, 60, 61, 65, 69, 72, 73, 78, 81, 82, 91, 92, 93, 386, 387, 400, 405, 465], "gappi": 405, "garcia": 95, "gard": 405, "gargallo": 95, "gasym": 389, "gather": 397, "gauss": [114, 188, 260], "gaussian": [114, 183, 188, 260, 389], "gaussianmodel": [367, 389], "gb": [84, 114, 188, 260, 407], "gc": [104, 417, 419, 460], "ge": [114, 266, 350, 407], "gener": [2, 7, 8, 10, 11, 13, 21, 29, 38, 41, 43, 46, 55, 60, 71, 73, 76, 87, 92, 97, 101, 105, 113, 114, 117, 122, 123, 140, 184, 185, 189, 202, 207, 214, 227, 259, 261, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 357, 370, 383, 384, 390, 391, 392, 394, 396, 397, 400, 402, 405, 407, 411, 413, 414, 416, 417, 419, 446, 460], "general_ham": [114, 189, 190, 261, 262], "generalprefer": 96, "genzel": [114, 189, 261, 410], "geometr": [101, 114, 185], "geometri": 405, "geomspac": [101, 114, 207], "geoscienc": 95, "gervilli\u00e9": 95, "get": [5, 6, 7, 10, 15, 17, 18, 20, 21, 22, 23, 24, 32, 46, 68, 75, 76, 84, 89, 90, 101, 104, 112, 113, 114, 118, 122, 124, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 388, 389, 392, 393, 397, 399, 402, 403, 405, 406, 408, 413, 416], "get_axi": 114, "get_baselin": [98, 114, 144, 149, 165, 244, 245, 246, 247, 251, 252, 330, 348], "get_compon": [17, 24, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128], "get_label": [101, 114], "get_loglevel": 395, "get_real_method": 404, "get_scale_nam": 122, "get_user_and_nod": 7, "get_window": 414, "getc": 113, "getc_to_c_idx": 113, "getconc": [22, 113], "getcwd": 396, "getopt": 197, "getspec": 113, "getst_to_st_idx": 113, "gettingstart": [27, 30, 34, 37, 39, 44, 52, 56, 58, 59, 61, 65, 69, 72, 78, 81, 82, 443], "ggplot": 405, "gh1234": 6, "ghaffari": 95, "gif": 401, "gilson": 95, "giovannetti": 95, "git": [4, 5, 7, 12, 15, 86], "github": [7, 10, 14, 51, 85, 86, 88, 89, 90, 401, 414, 428, 441, 447, 461], "give": [2, 6, 9, 80, 91, 93, 97, 98, 99, 101, 114, 123, 144, 244, 245, 253, 266, 350, 388, 392, 393, 394, 397, 400, 401, 402, 404, 405, 407, 414], "given": [2, 6, 9, 20, 25, 33, 42, 51, 75, 87, 92, 93, 97, 100, 101, 102, 104, 105, 107, 110, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 127, 128, 133, 134, 135, 136, 137, 138, 139, 140, 143, 147, 151, 153, 160, 169, 171, 172, 176, 181, 182, 185, 192, 197, 202, 207, 210, 213, 221, 222, 229, 243, 282, 285, 288, 289, 291, 295, 296, 301, 303, 304, 306, 321, 328, 332, 333, 338, 341, 343, 344, 347, 349, 352, 354, 362, 363, 364, 377, 378, 379, 382, 383, 387, 388, 389, 390, 391, 392, 396, 397, 402, 411, 413, 414, 463], "glob": [75, 197], "glossari": 93, "gm": [114, 170, 184, 258, 259, 263, 264, 265, 266, 267, 300, 345, 346, 350, 365, 407, 409], "gmt": [5, 17, 20, 25, 42, 46, 91, 393, 397, 413, 416], "go": [6, 7, 9, 11, 84, 86, 87, 88, 89, 397, 399, 407, 409], "god": 2, "goe": [88, 90, 383, 395], "golai": [68, 70, 73, 83, 107, 114, 288, 289, 290, 291, 292, 302, 333, 334, 347, 369, 412], "golden": 110, "gonzalez": 95, "good": [2, 3, 6, 7, 9, 10, 21, 32, 71, 75, 80, 97, 394, 397, 398, 405, 414], "googl": [84, 417, 419, 448, 460], "govern": 2, "gradient": 389, "grai": 405, "gram": [5, 43, 114, 318, 440], "grant": 2, "graph": [114, 120, 124, 228, 405], "graphen": [95, 385], "graphic": [3, 24, 25, 92, 95, 100, 399, 405], "graphicx": 405, "graphviz": 124, "gratio": [32, 389], "grave": 401, "gravimetr": [95, 385], "grayscal": 405, "great": 10, "greater": [25, 68, 114, 120, 163, 175, 193, 242, 266, 268, 270, 286, 350, 351, 389, 401, 407, 414], "greatli": [384, 400], "green": [6, 7, 36, 54, 75, 76, 392, 401, 410], "grei": 392, "grepioni": 95, "grid": [51, 97, 214, 405], "grid_alpha": 405, "grid_axi": 405, "grid_color": 405, "grid_linestyl": 405, "grid_linewidth": 405, "gridlin": 405, "griffin": 95, "group": [5, 22, 58, 92, 114, 303, 312, 313, 319, 384, 392, 397, 402, 405, 413, 416], "gt": [17, 18, 20, 22, 24, 25, 26, 32, 33, 41, 54, 64, 76, 389, 390, 391, 392, 393, 394, 402, 404, 405, 410], "guarante": [92, 97, 114, 176], "guaranti": 444, "guess": [21, 114, 120, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 383, 387, 389, 413, 459], "gui": [3, 92, 95, 100, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 405], "guid": [2, 6, 7, 10, 12, 89, 91, 92, 100, 384, 401, 418], "guidelin": [6, 8, 9], "guilhau": [95, 104], "guillaum": 95, "guinea": 95, "gustavo": 95, "gu\u00e9rin": 395, "gwidth": [32, 389], "h": [33, 43, 95, 114, 117, 229, 230, 232, 233, 238, 239, 240, 292, 369, 388, 389, 402, 405, 409, 414], "h2o": 410, "h3po4": 415, "ha": [2, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 36, 42, 51, 67, 75, 84, 88, 90, 92, 100, 101, 102, 105, 110, 112, 114, 118, 120, 123, 128, 152, 167, 175, 176, 177, 191, 227, 229, 232, 233, 238, 268, 269, 302, 312, 313, 353, 366, 383, 388, 390, 391, 392, 396, 397, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 413, 423, 441, 461, 463, 465, 466, 467], "habit": 7, "haddad": 95, "hal": [95, 385], "half": [101, 114, 140, 176, 202, 301, 392, 405], "halko": 120, "ham": [107, 114, 170, 184, 188, 190, 258, 259, 260, 262, 263, 264, 265, 266, 267, 288, 291, 300, 345, 346, 347, 350, 365, 410, 414], "hamid": 95, "han": [91, 95, 107, 114, 288, 291, 347, 414], "hand": [86, 97, 114, 171, 390, 391, 392, 394], "handl": [5, 9, 26, 43, 75, 101, 114, 123, 140, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 344, 388, 397, 402, 405, 406, 411, 413, 434, 436, 444, 446, 450, 452, 458, 461, 466], "hann": [114, 184, 189, 259, 261], "hannemos": 95, "happ": [114, 189, 261, 410], "happen": [4, 6, 389], "hard": [22, 113, 120, 383, 390], "hardc": 113, "hardconc": [22, 113], "hardspec": 113, "hardst": 113, "harri": [114, 150, 257], "has_complex_dim": [114, 335], "has_data": [101, 114, 402], "has_defined_nam": [101, 102, 114], "has_unit": [101, 114], "hasattr": 124, "hash": 9, "hasn": 6, "hat": [19, 21, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 383, 391], "hatch_color": 405, "hatch_linewidth": 405, "have": [2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 18, 20, 21, 32, 33, 36, 42, 46, 54, 58, 75, 76, 83, 85, 86, 87, 88, 90, 92, 97, 101, 102, 105, 114, 117, 128, 135, 147, 153, 163, 168, 172, 176, 182, 214, 222, 243, 266, 286, 295, 297, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 350, 378, 384, 388, 389, 390, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 409, 413, 414, 416, 424, 445, 455, 465], "hay": [95, 114, 164, 287], "hc": 95, "hdr": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "head": [7, 9], "header": [9, 114, 304, 429], "health": 92, "heart": [92, 383], "heavi": 10, "height": [75, 76, 114, 119, 176, 214, 392, 405], "heigth": 75, "heli": [95, 385], "hello": 129, "helmu": 1, "help": [6, 7, 9, 10, 11, 14, 93, 388, 395, 400, 405, 407, 408, 441], "helper": [7, 114], "helvet": 405, "helvetica": 405, "henc": [20, 42, 113, 120, 383, 390, 391, 396, 397, 413, 414], "henrik": 95, "her": 416, "here": [4, 5, 6, 7, 9, 10, 15, 19, 20, 21, 23, 24, 25, 33, 36, 41, 42, 43, 47, 48, 50, 51, 54, 71, 75, 76, 84, 87, 88, 90, 91, 97, 105, 113, 114, 302, 312, 313, 384, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 402, 404, 405, 409, 410, 413, 414, 415, 416], "herebi": 2, "herefrom": 2, "hereinabov": 2, "hereinaft": 2, "hereof": 2, "hereund": 2, "hermit": [36, 98, 99, 244, 253, 388], "hesit": [6, 83, 400], "hex": [401, 405], "hidden": [87, 96, 396], "high": [9, 97, 114, 292, 369, 467], "high_bound": [32, 75, 76, 77, 389], "higher": [114, 135, 243, 353, 366, 388, 392], "highest": [122, 392], "highli": [84, 88, 90, 95, 384, 385, 400], "highlight": 401, "hilbert": [114, 191, 269], "hilvert": [114, 191, 269], "hint": 405, "hist_bin": 405, "histogram": 405, "histori": [7, 24, 25, 46, 75, 77, 91, 92, 114, 197, 312, 390, 391, 393, 397, 403, 407, 409, 411, 413, 416, 445], "hit": 6, "hold": [101, 114, 228, 231, 235, 236, 237, 299, 400], "holder": [2, 114, 303], "home": [11, 46, 58, 87, 91, 96, 393, 395, 396, 397, 399, 404, 405, 413, 416, 455], "homepag": [21, 390, 391], "homogen": 431, "honour": 95, "hook": 7, "hope": [384, 402, 403], "hopefulli": [88, 92, 396, 402, 434, 441], "horizont": [114, 176, 228, 231, 235, 236, 237, 392, 405], "host": [6, 10, 11, 14, 86, 87, 401], "hot": [41, 402], "hotfix": 439, "hour": [19, 26, 33, 43, 47, 101, 102, 114, 177, 389, 402, 416], "hous": 10, "how": [6, 7, 9, 11, 13, 24, 42, 43, 51, 114, 344, 383, 384, 391, 392, 393, 394, 396, 405, 413, 414, 415], "howev": [2, 6, 7, 9, 10, 20, 46, 67, 75, 101, 114, 136, 139, 242, 353, 357, 366, 384, 389, 390, 391, 396, 397, 399, 402, 404, 405, 408, 414], "hpf": 397, "hpl": 21, "hplc": [21, 390, 391], "hr": [43, 51, 102, 389], "hspace": 214, "ht": 114, "html": [4, 5, 7, 9, 10, 87, 114, 373, 397, 401], "http": [0, 4, 6, 7, 29, 43, 46, 51, 87, 88, 89, 90, 95, 114, 373, 388, 390, 394, 395, 397, 400, 401, 405, 414, 461], "hua": 95, "human": [97, 124], "hydrodesulfur": [95, 385], "hydrogel": [95, 385], "hyperbol": 412, "hypercomplex": [101, 108, 109, 114, 125, 126, 137, 152, 210, 412], "hyphen": [9, 401, 405], "hypothet": [114, 366], "hz": [43, 63, 77, 101, 114, 170, 188, 258, 260, 338, 407, 409], "i": [1, 2, 4, 5, 6, 7, 9, 10, 11, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 36, 41, 42, 43, 46, 51, 54, 58, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 190, 192, 193, 197, 199, 202, 203, 206, 207, 209, 210, 212, 213, 214, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 333, 335, 338, 343, 344, 347, 349, 350, 351, 352, 353, 354, 357, 359, 360, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 418, 422, 431, 440, 442, 444, 447, 454, 458, 459, 461, 463, 464, 465, 466, 467], "i0": [75, 77], "i2iexp": 97, "iadd": 402, "iana": 405, "ib": [114, 133, 134], "ibr": 2, "ica": [19, 105, 383], "icon": [15, 87, 399], "id": [6, 101, 102, 114, 123, 145, 183, 208, 242, 342, 367, 400, 401, 402], "idea": [2, 9, 14], "ident": [2, 55, 114, 123, 174], "identif": [95, 385], "identifi": [2, 54, 101, 102, 114, 123, 164, 287, 389, 402], "ie": 33, "iecewis": 388, "ieee": 95, "iexp": 97, "ifft": [114, 175, 268, 409], "ignor": [101, 114, 122, 128, 135, 137, 138, 177, 210, 213, 225, 243, 273, 306, 309, 396, 442], "igrf": 397, "igsm": 397, "ii": [2, 76, 114, 154, 155, 388, 390, 391, 404, 411], "iia": 97, "iii": [2, 388, 390, 391], "ij": 383, "ill": 95, "illustr": [5, 7, 9, 392, 396, 405, 413, 414], "iloc": 9, "im": 409, "imag": [7, 41, 51, 87, 114, 122, 154, 155, 211, 214, 215, 228, 229, 231, 232, 233, 235, 236, 237, 238, 271, 272, 298, 396, 401, 405, 407, 409, 435, 467], "image_aspect": 405, "image_cmap": 405, "image_composite_imag": 405, "image_interpol": 405, "image_lut": 405, "image_origin": 405, "image_resampl": 405, "imagin": 396, "imaginari": [7, 101, 108, 109, 114, 125, 143, 152, 191, 194, 228, 231, 235, 236, 237, 269, 328, 409, 411, 412, 415], "img": 401, "imit": 7, "immedi": [4, 9], "immeubl": 2, "impact": [388, 392, 463], "implement": [4, 5, 9, 97, 104, 114, 136, 139, 164, 197, 287, 292, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 369, 371, 383, 388, 390, 391, 392, 394, 397, 400, 406, 413, 414], "implicit": 97, "import": [4, 5, 6, 7, 9, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 84, 86, 88, 89, 90, 91, 92, 93, 101, 102, 114, 123, 124, 130, 169, 205, 223, 302, 312, 313, 338, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 434, 466], "import_optional_depend": 7, "importerror": [7, 85, 395], "importexport": 397, "impos": [22, 92], "improp": 405, "improv": [6, 7, 10, 23, 83, 92, 101, 114, 120, 178, 387, 390, 400, 405, 407, 408, 417, 419, 421, 430, 434, 436, 437, 438, 441, 443, 445, 449, 453, 458, 460, 467], "imshow": 405, "imul": 409, "ina": 95, "inaccur": [114, 353, 366], "inch": [114, 214, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 405], "includ": [1, 2, 5, 7, 9, 10, 14, 29, 84, 97, 98, 99, 101, 102, 114, 123, 140, 176, 185, 202, 207, 244, 253, 387, 396, 397, 400, 401, 405, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "include_limit": [98, 99, 244, 253, 388], "inclus": 197, "incompat": [43, 101, 103, 114, 199, 313, 357, 405], "inconsist": [114, 312], "incorpor": [2, 92, 114, 312], "incorrect": [7, 23, 197], "increas": [23, 67, 97, 98, 99, 113, 114, 144, 244, 245, 253, 388, 389, 396, 397, 405, 408, 414, 448, 466], "increment": [101, 413], "incur": 2, "inde": [10, 390], "indent": 9, "independ": [26, 104, 105, 110, 112, 113, 114, 117, 118, 120, 127, 128, 214, 312, 383, 390, 405, 409], "index": [9, 10, 23, 41, 42, 75, 76, 97, 100, 101, 102, 110, 113, 114, 120, 121, 141, 142, 146, 154, 155, 169, 174, 176, 289, 294, 304, 333, 349, 362, 387, 388, 389, 390, 391, 397, 412, 416, 431, 454, 464, 466, 467], "index_pc": 26, "indic": [2, 4, 9, 10, 19, 24, 54, 75, 88, 90, 98, 99, 101, 110, 113, 114, 120, 130, 137, 138, 152, 165, 176, 210, 213, 224, 244, 247, 253, 349, 356, 383, 388, 390, 391, 394, 396, 397, 410, 411, 413, 428], "indiffer": 407, "indirect": [114, 321], "indirectli": 2, "individu": [2, 5, 7, 10, 36, 42, 46, 112, 114, 118, 135, 228, 231, 235, 236, 237, 243, 384, 389, 392, 402, 405, 406, 447], "induct": 409, "industri": 2, "ineffect": 2, "inf": [7, 114, 122, 181], "infer": [21, 101, 114, 133, 134, 140, 185, 202, 207, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 392], "infin": [114, 120, 136, 411], "infinit": [9, 114, 353, 366], "info": [6, 19, 20, 21, 22, 23, 26, 32, 36, 58, 67, 75, 76, 77, 80, 88, 98, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 129, 195, 244, 288, 289, 291, 292, 333, 347, 369, 389, 390, 392, 395, 401, 428, 445, 459], "info_": [32, 58, 129, 395], "inform": [5, 6, 7, 10, 20, 21, 29, 32, 33, 67, 87, 101, 114, 120, 122, 149, 186, 246, 248, 304, 383, 384, 387, 391, 392, 394, 396, 397, 399, 402, 405, 410, 414, 445, 461], "informatiqu": 2, "infra": [95, 385], "infrar": [20, 42, 95, 96, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 397, 405], "infring": 2, "infti": [114, 176], "inherit": 405, "ini": 7, "init": [104, 114, 117, 459], "init_concentr": 97, "init_x": 121, "initalis": 388, "initi": [2, 5, 7, 21, 22, 75, 92, 97, 98, 100, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 127, 128, 167, 171, 172, 197, 244, 387, 388, 397, 400, 402, 405, 414, 420, 421], "initial_ind": 404, "initial_rang": 100, "initial_rt": [50, 71, 80, 414], "initialis": [114, 117, 463], "inlet_f": 121, "inlet_x": 121, "inlin": [9, 405], "inner": [114, 135, 243, 412], "innov": 2, "inplac": [43, 63, 64, 101, 114, 124, 146, 148, 150, 154, 155, 159, 170, 175, 179, 180, 184, 188, 189, 190, 193, 199, 200, 201, 209, 225, 226, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 294, 327, 329, 335, 336, 339, 349, 350, 351, 355, 357, 359, 360, 362, 365, 397, 402, 407, 409, 410, 416], "input": [18, 21, 33, 98, 99, 100, 101, 104, 105, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 133, 134, 136, 137, 138, 139, 140, 143, 144, 147, 148, 150, 151, 153, 154, 155, 160, 163, 164, 165, 167, 168, 170, 171, 172, 181, 182, 184, 185, 189, 190, 197, 202, 207, 210, 212, 213, 221, 222, 225, 226, 244, 245, 247, 251, 252, 253, 256, 257, 258, 259, 261, 262, 267, 273, 274, 282, 285, 286, 287, 288, 289, 291, 292, 295, 296, 297, 299, 328, 330, 333, 347, 348, 351, 352, 353, 354, 356, 365, 366, 369, 377, 378, 379, 382, 390, 396, 412, 431, 466], "inquir": 405, "inria": 2, "insensit": [98, 244], "insert": [86, 401], "insid": [7, 114, 176, 401, 405], "insight": [95, 385, 403], "inspac": [101, 114, 140], "inspect": [68, 387, 408], "inspir": 7, "instal": [7, 10, 93, 110, 400, 405, 417, 418, 419, 422, 430, 435, 443, 447, 450, 451, 460], "instanc": [5, 41, 42, 43, 54, 86, 87, 90, 91, 96, 97, 98, 99, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 129, 149, 152, 171, 172, 177, 181, 182, 186, 197, 203, 221, 222, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 246, 248, 249, 253, 331, 332, 357, 361, 377, 378, 384, 388, 389, 390, 391, 392, 394, 395, 396, 397, 402, 405, 409, 411, 413, 414, 416], "instanti": 122, "instead": [4, 7, 9, 14, 25, 26, 33, 36, 42, 43, 75, 88, 90, 91, 101, 102, 107, 114, 122, 123, 137, 138, 147, 149, 168, 172, 175, 176, 178, 185, 186, 197, 207, 210, 213, 228, 229, 231, 232, 233, 235, 236, 237, 238, 246, 248, 268, 288, 289, 291, 297, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 347, 353, 366, 384, 388, 400, 401, 402, 405, 411, 413, 414, 421, 453, 459, 461, 463, 467], "institut": 2, "instruct": [2, 6, 10, 84, 86, 89, 395, 418, 435], "instrument": [2, 5, 29, 92, 95, 394, 397], "int": [9, 97, 98, 99, 101, 102, 104, 105, 107, 110, 113, 114, 117, 119, 120, 122, 127, 128, 129, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 150, 153, 154, 155, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 193, 202, 207, 209, 210, 212, 213, 214, 221, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 247, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 299, 301, 303, 321, 327, 328, 329, 333, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 363, 364, 365, 366, 369, 377, 379, 381, 382, 388, 402, 405], "int64": [114, 171, 181, 221, 377], "int8": [114, 181, 221, 377], "int_": 110, "integ": [9, 23, 25, 36, 80, 98, 99, 101, 107, 114, 135, 140, 146, 148, 150, 159, 160, 163, 170, 175, 176, 179, 180, 184, 188, 189, 190, 193, 209, 212, 225, 226, 242, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 294, 327, 329, 333, 343, 344, 347, 350, 353, 354, 363, 364, 365, 366, 369, 388, 411, 413], "integr": [2, 6, 13, 22, 75, 77, 92, 97, 104, 105, 110, 111, 113, 114, 117, 120, 127, 128, 160, 343, 344, 354, 363, 364, 387, 400, 414, 421, 430, 467], "intel": 26, "intellectu": 2, "intellig": [18, 95, 396], "intend": [2, 84, 88], "intens": [18, 41, 75, 76, 77, 114, 127, 164, 214, 287, 312, 390, 392, 402, 404, 407, 408, 409], "intention": 124, "interact": [36, 95, 104, 105, 110, 113, 117, 120, 127, 128, 405, 421], "interactiveanalysi": 127, "intercept": [33, 112, 118, 389], "interchang": [114, 355, 362], "interest": [2, 3, 6, 9, 20, 21, 29, 36, 42, 54, 75, 76, 92, 101, 114, 388, 390, 391, 394, 396, 397, 402, 409, 411, 413, 414], "interfac": [2, 87, 88, 90, 91, 92, 95, 106, 197, 383, 399, 400, 405, 414], "interfero": 410, "interferogram": [114, 305, 307, 315, 316, 412, 437, 438, 443, 450], "interlac": 411, "interleav": 114, "intermedi": [114, 119, 176, 388], "intern": [2, 87, 92, 98, 99, 104, 105, 110, 111, 113, 117, 119, 120, 122, 123, 127, 128, 244, 253, 397, 400, 402, 445], "internet": 461, "interp": [107, 114, 288, 289, 291, 333, 347], "interphas": [95, 385], "interpol": [36, 95, 98, 99, 100, 114, 135, 176, 243, 244, 253, 314, 388, 392, 406, 414], "interpolate_method": [114, 135, 243], "interpolate_sampl": [114, 135, 243], "interpret": [2, 6, 89, 114, 120, 123, 176, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "interrupt": 2, "intersect": [114, 135, 243, 392, 406], "interv": [100, 101, 114, 120, 135, 140, 151, 176, 185, 202, 207, 214, 243, 301, 344, 392], "intervent": 2, "intialis": 463, "introduc": 459, "introduct": [10, 53, 60, 83, 93, 114, 234, 387, 412], "intsimp": 393, "inttrapz": 393, "intuit": [3, 9, 95, 385], "inv": [114, 148, 150, 170, 175, 184, 188, 189, 190, 225, 226, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 273, 274, 350, 365], "invalid": [2, 4, 411], "invers": [95, 98, 99, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 148, 150, 170, 175, 184, 188, 189, 190, 193, 203, 204, 225, 226, 244, 249, 250, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 350, 365, 385, 397, 411], "inverse_transform": [19, 32, 76, 77, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 389, 459], "investig": [22, 95, 385], "invis": 405, "invok": 2, "involv": [4, 85, 110], "io": [5, 43], "ion": [95, 385], "ion_curr": [114, 314], "iop": 95, "ip": 392, "ipynb": [75, 76, 77, 80, 396, 402], "ipython": [85, 88, 90, 100, 404], "ipython3": 397, "ipywidget": [106, 458], "ir": [32, 45, 46, 58, 60, 76, 83, 95, 101, 114, 154, 155, 169, 304, 312, 373, 385, 388, 389, 392, 393, 396, 398, 400, 402, 404, 405, 410, 411, 413, 416, 443], "ir4": [114, 373], "ird": 410, "irdata": [17, 20, 23, 25, 32, 36, 42, 46, 47, 48, 55, 91, 96, 100, 101, 104, 114, 123, 128, 146, 147, 153, 160, 176, 205, 212, 223, 294, 295, 296, 302, 303, 304, 306, 312, 313, 317, 319, 320, 343, 344, 352, 353, 354, 363, 364, 366, 370, 371, 388, 389, 392, 393, 396, 397, 402, 405, 406, 410, 411, 413, 416], "irdatanh4i": 223, "irdh": 410, "iri": [9, 16, 38, 83, 95, 101, 102, 104, 105, 111, 113, 114, 117, 120, 127, 128, 206, 302, 385, 421, 428, 442, 443, 467], "iris1": 20, "iris2": 20, "iris3": 20, "iriskernel": [20, 91], "irt": 410, "irth": 410, "is_1d": 114, "is_compatible_with": [124, 130], "is_complex": [114, 154, 155, 335], "is_empti": [101, 102, 114, 402], "is_fil": [114, 115, 116, 123], "is_float": [101, 114], "is_integ": [101, 114], "is_interleav": 114, "is_label": [101, 102, 114], "is_mask": 114, "is_quaternion": [114, 335], "is_same_dim": 102, "is_units_compat": [101, 114], "ishow": 14, "isinst": [124, 130], "isobutanol": [95, 385], "isol": [86, 88, 92], "isotherm": 97, "isotop": 421, "isp_matrix": [21, 26, 390, 391], "issu": [2, 6, 7, 88, 90, 92, 93, 95, 114, 135, 243, 353, 366, 395, 396, 397, 411, 417, 419, 421, 426, 429, 430, 431, 433, 442, 443, 446, 450, 452, 458, 460, 463, 464, 465, 467, 468], "istri": 93, "itakura": 117, "ital": [9, 401, 405], "item": [7, 9, 101, 114, 123, 124, 178, 397, 401, 413], "iter": [9, 21, 22, 23, 26, 32, 36, 80, 97, 98, 99, 101, 102, 105, 111, 113, 114, 117, 119, 120, 122, 144, 149, 165, 177, 178, 186, 244, 245, 246, 247, 248, 251, 252, 253, 330, 348, 388, 390, 417, 419, 460], "iterabbl": 120, "iterated_pow": 120, "iterdir": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "iterrow": 9, "itertupl": 9, "ith": [58, 397], "ito": [43, 101, 114, 124, 198, 200, 201, 357, 393, 397, 405, 416, 426], "ito_base_unit": [101, 114, 124, 199, 201, 357], "ito_pref": 124, "ito_reduced_unit": [101, 114, 124, 199, 200, 357], "ito_root_unit": 124, "its": [2, 6, 7, 9, 68, 88, 92, 93, 97, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 147, 166, 168, 176, 192, 220, 228, 231, 235, 236, 237, 241, 297, 310, 311, 341, 389, 390, 391, 392, 397, 401, 402, 404, 405, 413, 414, 448, 463, 465], "itself": [2, 10, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288, 289, 291, 333, 347, 396], "ivp_solver_kwarg": [22, 97], "j": [1, 95, 101, 113, 114, 124, 158, 198, 201, 221, 222, 360, 385, 397, 402], "jaap": 95, "jacobian": 97, "jafari": 95, "jaggi": 405, "jamil": 95, "jan": [95, 397], "jaroniec": 1, "jaroslava": 95, "jaumot": [16, 19, 26, 38, 83, 95, 113, 114, 302, 390, 391], "ja\u0161\u00edk": 95, "jcamp": [93, 95, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 396, 398], "jcat": [95, 385], "jdx": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 397], "jean": 95, "jendrlin": 95, "jeroen": 95, "jet": [75, 405], "jianjun": 95, "jinja2": 6, "jo": 95, "joanna": 95, "joaquim": 95, "job": 92, "john": 396, "join": [9, 17, 32, 64, 75, 392, 396], "joint": 2, "joran": 95, "joren": 95, "joul": [114, 221], "journal": 95, "jovyan": [11, 87], "jpeg": 405, "jpserver": 87, "jr": 95, "json": 421, "jth": 397, "juan": [95, 383], "jul": [25, 46, 91, 393, 416], "jupyt": [10, 11, 20, 84, 86, 87, 92, 100, 383, 400, 401, 405, 417, 419, 460], "jupyterlab": 399, "juraj": 95, "juri": 95, "jurisdict": 2, "just": [6, 9, 10, 20, 33, 36, 46, 51, 84, 88, 90, 91, 105, 404, 406, 410, 411, 416], "k": [7, 9, 17, 18, 20, 22, 23, 24, 25, 41, 58, 63, 64, 90, 91, 95, 97, 102, 110, 111, 114, 121, 128, 166, 174, 214, 301, 383, 394, 402, 405, 409], "k0": 22, "k_1": 97, "k_dt": 97, "k_exp": 97, "k_n": 97, "kadam": [95, 385], "kalb\u00e1\u010d": 95, "karimvand": 95, "karol\u00edna": 95, "katsumo": 408, "katsumoto": [95, 114, 164, 287, 408, 417, 419, 460], "kbr": 397, "kee": 95, "keep": [6, 9, 20, 22, 36, 68, 75, 76, 80, 97, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 158, 167, 389, 392, 405, 412], "keep_row": 51, "keepdim": [101, 114, 124, 136, 137, 138, 139, 147, 160, 210, 212, 213, 299, 353, 354, 366], "keepnam": [101, 102, 114, 158], "kei": [5, 9, 75, 97, 102, 114, 176, 197, 390, 392, 397, 429], "keller": [16, 38, 83, 101, 104, 114, 153, 168], "kelvin": 97, "kept": [113, 114, 120, 229, 232, 233, 238, 343, 364, 397, 463], "kernel": [20, 87, 110, 111, 114, 291, 347, 405, 414, 428, 467], "kevin": 95, "keyerror": 402, "keyword": [9, 50, 97, 98, 99, 101, 102, 104, 105, 110, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 140, 148, 149, 150, 153, 159, 163, 167, 170, 171, 172, 175, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 193, 202, 205, 207, 209, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 246, 248, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 289, 291, 292, 295, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 333, 343, 344, 347, 350, 353, 363, 364, 365, 366, 369, 370, 377, 378, 388, 389, 392, 397, 446, 465], "kg": [101, 114, 124, 201, 360], "khodadadi": 95, "khz": 338, "kilogram": 402, "kilomet": [33, 114, 174, 221, 389], "kin": 22, "kin_exp": 97, "kin_param_to_set": 121, "kind": [6, 9, 101, 110, 111, 114, 168, 297, 384, 389, 396, 402, 403, 415], "kindli": 0, "kinet": [16, 38, 83, 85, 88, 95, 97, 101, 104, 113, 114, 121, 302, 385, 417, 419, 460], "klass": 119, "kleibert": 95, "km": [33, 43, 101, 114, 174, 177, 178, 182, 221, 389], "know": [6, 9, 43, 92, 104, 105, 110, 117, 120, 127, 128, 383, 388, 389, 397], "knowledg": [2, 92, 397], "known": [4, 6, 14, 89, 114, 208, 304, 389, 390, 414], "kubelka": [114, 312], "kubi\u010dka": 95, "kullback": 117, "kutta": 97, "kv\u00edtek": 95, "kw": 197, "kwarg": [5, 9, 97, 98, 99, 101, 102, 104, 105, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 135, 137, 138, 140, 148, 149, 150, 151, 153, 158, 159, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 195, 197, 202, 205, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 289, 290, 291, 292, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 333, 334, 343, 344, 345, 346, 347, 349, 350, 356, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 411], "kwargsgetconc": [22, 113], "kwargsgetspec": 113, "l": [2, 20, 36, 54, 64, 68, 71, 75, 76, 77, 95, 110, 114, 179, 180, 228, 231, 234, 235, 236, 237, 277, 278, 280, 327, 383, 388, 389, 391, 392, 394, 407, 408, 409, 414, 428, 458], "l1": 117, "l1_ratio": 117, "l2": [114, 117, 312], "l3": [114, 312], "l_1": 391, "l_x": [383, 394], "l_y": [383, 394], "la": [2, 95, 385], "lab": [11, 25, 26, 87, 100, 383, 400, 405, 417, 419, 460], "label": [5, 17, 18, 20, 23, 24, 25, 29, 33, 41, 42, 46, 54, 55, 58, 63, 64, 71, 75, 76, 85, 88, 90, 91, 101, 102, 114, 120, 214, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 303, 349, 384, 388, 389, 391, 392, 393, 394, 397, 403, 405, 409, 410, 413, 414, 416, 429, 458], "labelcolor": 405, "labels_column": [25, 120], "labels_everi": [120, 391], "labor": 2, "laboratori": [18, 95], "labspec": [50, 54, 67, 68, 71, 80, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 408, 414, 421, 442], "labspec6": 396, "lack": 390, "laetitia": 95, "laid": 114, "lakeh": 95, "lamb": [71, 80, 98, 99, 107, 114, 144, 244, 245, 253, 288, 292, 369, 388, 414], "lambda": [101, 110, 111, 114, 177, 208, 342, 383, 389, 401], "langmuir": [20, 91, 111], "languag": [2, 9, 15, 92, 400], "laod": 24, "lapack": 120, "larg": [6, 11, 13, 17, 75, 114, 127, 176, 292, 369, 384, 388, 392, 405, 414, 434], "larger": [36, 80, 98, 99, 107, 113, 114, 120, 144, 151, 164, 244, 245, 253, 287, 288, 292, 369, 371, 390, 391, 395, 405, 414], "largest": [20, 114, 283, 380, 411, 414], "larmor": [101, 338], "laser": [101, 410], "laser_frequ": [101, 410, 450], "last": [6, 7, 9, 20, 21, 76, 88, 91, 101, 105, 107, 113, 114, 135, 136, 139, 148, 150, 152, 153, 159, 167, 170, 175, 179, 180, 184, 185, 188, 189, 190, 193, 202, 207, 209, 225, 226, 243, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 288, 289, 291, 292, 295, 303, 327, 329, 333, 343, 344, 347, 349, 350, 357, 363, 364, 365, 369, 388, 389, 391, 392, 396, 397, 404, 405, 407, 408, 412, 413, 461], "latent": [383, 394], "later": [42, 76, 98, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 176, 244, 288, 289, 291, 292, 333, 347, 369, 405, 467], "latest": [4, 6, 10, 11, 87, 88, 90], "latex": [197, 405], "latex_preambl": 405, "latter": [67, 397, 414], "launch": [90, 100, 390, 399], "laura": 95, "law": 2, "layout": [114, 229, 230, 232, 233, 238, 239, 240], "lb": [63, 75, 77, 114, 170, 188, 258, 260, 407, 409], "lc": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 90, 91, 92, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "le": [2, 95, 114, 302, 312, 313, 385], "lead": [23, 117, 388, 392, 395, 405, 414], "learn": [6, 24, 95, 98, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 206, 244, 385, 391, 394, 399, 400, 405], "least": [2, 5, 32, 33, 36, 95, 98, 99, 107, 112, 113, 114, 118, 119, 122, 144, 149, 165, 176, 186, 244, 245, 246, 247, 248, 251, 252, 253, 288, 292, 330, 348, 369, 383, 385, 387, 388, 390, 405, 461, 463, 467], "least_squar": [119, 467], "leastsq": [75, 77, 119], "leau": [95, 385], "leav": [92, 405], "leblanc": 2, "left": [9, 15, 75, 86, 97, 101, 113, 114, 120, 122, 128, 136, 137, 138, 139, 143, 179, 180, 184, 209, 210, 212, 213, 214, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 259, 277, 278, 279, 299, 328, 353, 354, 366, 383, 388, 390, 392, 405, 414], "left_bas": [75, 114, 176, 392], "left_edg": [114, 176], "left_ip": [75, 114, 176, 392], "left_op": 97, "left_threshold": [114, 176], "leftarrow": 113, "legaci": 405, "legal": 2, "legend": [17, 18, 23, 25, 29, 33, 54, 55, 64, 71, 75, 114, 234, 388, 389, 392, 393, 394, 405, 409, 410, 414], "legend_borderaxespad": 405, "legend_borderpad": 405, "legend_columnspac": 405, "legend_edgecolor": 405, "legend_facecolor": 405, "legend_fancybox": 405, "legend_fonts": 405, "legend_framealpha": 405, "legend_frameon": 405, "legend_handleheight": 405, "legend_handlelength": 405, "legend_handletextpad": 405, "legend_labelspac": 405, "legend_loc": 405, "legend_markerscal": 405, "legend_numpoint": 405, "legend_scatterpoint": 405, "legend_shadow": 405, "legisl": 2, "leibler": 117, "leiden": 95, "len": [7, 75, 113, 114, 124, 161, 176, 276, 302, 306, 312, 313, 353, 366, 389, 392, 405], "len_seq": 124, "length": [9, 43, 97, 101, 112, 114, 118, 122, 123, 124, 130, 140, 147, 176, 185, 207, 234, 351, 357, 371, 383, 390, 392, 402, 405, 413, 414, 416], "leq": [114, 184, 189, 190, 259, 261, 262, 383], "less": [9, 76, 86, 97, 102, 107, 114, 117, 120, 122, 251, 288, 289, 330, 333, 389, 402, 405], "let": [9, 20, 22, 25, 29, 32, 33, 42, 43, 55, 58, 68, 75, 80, 114, 146, 294, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 404, 406, 408, 409, 411, 413, 414, 416], "letter": [2, 6, 9, 110, 402, 405], "level": [9, 87, 95, 98, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 163, 214, 244, 286, 288, 289, 291, 292, 333, 337, 347, 369, 385, 390, 395, 401, 405, 410, 459], "liabil": 2, "liabl": 2, "lib": [395, 404, 405], "libor": 95, "librairi": [53, 60, 83, 114, 234], "librari": [3, 7, 9, 33, 36, 41, 85, 86, 88, 92, 105, 113, 114, 124, 197, 361, 399, 400, 402, 405, 414, 458], "licenc": [114, 191, 269], "licens": [0, 51, 92, 93, 114, 292, 369, 395], "license": 2, "licensor": 2, "life": 396, "light": [101, 405], "lighter": [84, 405], "lign": 402, "like": [6, 7, 9, 10, 11, 15, 33, 41, 75, 76, 85, 88, 90, 97, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 127, 128, 133, 134, 163, 164, 167, 172, 176, 182, 203, 204, 222, 244, 249, 250, 253, 286, 287, 288, 289, 291, 292, 303, 333, 341, 347, 369, 378, 383, 389, 391, 392, 396, 397, 399, 403, 405, 411, 417, 419], "likelihood": [114, 353, 366], "lim": 409, "limit": [2, 23, 54, 80, 83, 98, 99, 101, 114, 149, 151, 186, 228, 231, 235, 236, 237, 242, 244, 246, 248, 253, 304, 308, 312, 387, 388, 389, 391, 392, 393, 397, 400, 402, 405, 413, 414], "linalg": [33, 120], "line": [2, 6, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 68, 75, 76, 77, 80, 85, 88, 92, 96, 98, 99, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 145, 165, 170, 183, 197, 208, 214, 216, 228, 231, 234, 235, 236, 237, 244, 247, 253, 258, 342, 367, 383, 389, 390, 391, 392, 397, 402, 404, 405, 412, 458, 459], "line_1": [32, 76, 389], "line_2": [32, 76, 389], "line_3": 76, "line_4": 76, "line_5": 76, "linear": [31, 32, 36, 38, 80, 83, 98, 99, 100, 101, 105, 112, 114, 118, 119, 122, 135, 165, 207, 225, 226, 242, 243, 244, 247, 253, 273, 274, 383, 387, 421, 436, 463, 464, 466], "linear_model": [112, 118], "linearcoord": [424, 463], "linearize_below": 101, "linearli": 383, "linearregress": [112, 118], "linebreak": 401, "linei": 389, "lines_antialias": 405, "lines_color": 405, "lines_dash_capstyl": 405, "lines_dash_joinstyl": 405, "lines_dashdot_pattern": 405, "lines_dashed_pattern": 405, "lines_dotted_pattern": 405, "lines_linestyl": 405, "lines_linewidth": 405, "lines_mark": 405, "lines_markeredgecolor": 405, "lines_markeredgewidth": 405, "lines_markerfacecolor": 405, "lines_markers": 405, "lines_scale_dash": 405, "lines_solid_capstyl": 405, "lines_solid_joinstyl": 405, "linestyl": [22, 75, 76, 80, 114, 228, 231, 235, 236, 237, 392, 405, 407, 410], "linetyp": 216, "linewidth": [114, 122, 214, 228, 231, 235, 236, 237, 390, 391, 405], "linex": 389, "linez": 389, "link": [9, 83, 88, 90, 400, 428], "linspac": [9, 41, 101, 102, 114, 140, 185, 207, 389, 402], "linux": [6, 84, 87, 88, 89, 93, 96, 396, 407, 435, 444], "lisa": 95, "list": [5, 9, 33, 42, 54, 67, 89, 97, 98, 99, 100, 101, 102, 106, 110, 113, 114, 119, 120, 122, 123, 124, 135, 169, 171, 172, 181, 182, 197, 214, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 253, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 377, 378, 383, 384, 388, 389, 390, 391, 392, 394, 396, 397, 402, 405, 412, 413, 418, 428, 431, 466], "list_al": 197, "list_fil": 397, "list_of_tz_database_time_zon": 402, "listdir": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "listnd": [114, 312], "liter": [9, 396], "literatur": 390, "littl": [25, 36, 416], "ll": [6, 7, 10, 98, 99, 110, 204, 244, 250, 253, 387, 388], "lls_inv": [203, 249], "ln": [101, 114, 207, 397], "lnd": 26, "load": [2, 5, 17, 24, 25, 26, 36, 41, 43, 45, 54, 58, 60, 67, 68, 75, 83, 91, 100, 101, 114, 120, 123, 128, 197, 227, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 383, 387, 388, 389, 390, 396, 402, 403, 408, 411, 417, 419, 450, 458, 460], "load_ext": 197, "load_iri": [24, 114], "lob": 389, "loc": [9, 29, 71, 101, 388, 394, 409, 414], "loc2index": [96, 101], "local": [5, 6, 7, 10, 51, 86, 87, 97, 114, 176, 197, 332, 402, 405], "local_timezon": [114, 402], "localfold": 6, "localvar": 332, "localvr": 332, "locat": [5, 7, 9, 11, 54, 55, 86, 87, 96, 98, 99, 101, 114, 123, 165, 176, 244, 247, 253, 306, 383, 388, 392, 396, 405, 410, 414, 422, 423, 467], "log": [13, 17, 18, 21, 22, 86, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 163, 185, 203, 204, 207, 244, 249, 250, 253, 286, 288, 289, 291, 292, 312, 333, 347, 369, 390, 400, 405, 418, 442, 450, 455, 459, 463], "log10": 405, "log_bas": [101, 114, 207], "log_level": [19, 20, 21, 22, 23, 26, 32, 36, 75, 76, 77, 80, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 163, 244, 253, 286, 288, 289, 291, 292, 333, 347, 369, 389, 390, 395, 459], "logarithm": 411, "logcosh": 105, "logfil": 121, "logger": 455, "logic": [114, 136, 139], "logical_not": 411, "logit": 122, "loglevel": 20, "lognorm": 405, "logspac": [101, 114, 185], "long": [9, 10, 11, 25, 80, 124, 402, 405, 411], "long_opt": 197, "longer": [2, 6, 7, 453], "look": [3, 6, 7, 9, 18, 36, 46, 50, 75, 76, 388, 390, 391, 392, 396, 397, 399, 402, 405, 413], "lookup": 405, "loop": [113, 383], "lopez": [95, 385], "lorentz": [114, 188, 260], "lorentzian": [208, 389], "lorentzianmodel": [367, 389], "loss": 2, "lost": [114, 358, 466], "lot": [6, 7, 384, 402, 403], "louwen": 95, "low": [9, 97, 127, 388, 390], "low_bound": [32, 75, 76, 77, 389], "lower": [24, 25, 26, 29, 113, 114, 120, 151, 174, 390, 391, 392, 394, 395, 405, 409], "lowercas": 6, "lowest": [122, 392], "lpf": 397, "lsdoa": 97, "lsoda": 97, "lst": [389, 461], "lstq": 389, "lstsq": [31, 38, 83, 101, 113, 114, 387], "lt": [17, 18, 20, 22, 24, 25, 26, 33, 41, 54, 64, 389, 390, 391, 392, 393, 394, 404], "lu": [97, 120], "luca": 95, "lucia": 95, "lw": [32, 54, 71, 75, 76, 114, 228, 231, 234, 235, 236, 237, 389, 414], "lyu": 95, "m": [6, 23, 43, 64, 75, 76, 88, 89, 90, 95, 97, 101, 102, 104, 114, 124, 128, 147, 148, 160, 174, 184, 189, 190, 198, 201, 212, 228, 231, 235, 236, 237, 256, 259, 261, 262, 292, 301, 353, 354, 357, 360, 366, 369, 383, 392, 393, 394, 395, 399, 402, 405, 407, 409, 411, 416, 438, 452], "m1": [21, 26, 390, 391], "m5nb": [46, 394], "m5spec": [29, 46, 394], "m_a": [58, 124], "m_b": 58, "m_from": 130, "m_p": 58, "ma": [114, 147, 168, 297, 358, 467], "mac": [6, 84, 96, 223], "macchietti": [95, 385], "machin": [6, 7, 87, 89, 114, 206, 397], "machinenam": 397, "maco": [6, 7, 89], "made": [2, 5, 6, 54, 88, 101, 102, 110, 114, 164, 287, 299, 312, 314, 383, 392, 394, 396, 397, 413, 441], "maeder": [95, 104, 383], "magazin": 95, "maghemit": [95, 385], "magic": [85, 100, 405], "magma": [91, 405, 411], "magma_r": 388, "magnet": [102, 402], "magnitud": [17, 101, 114, 124, 130, 389, 390, 392, 397, 412, 414], "magnitudet": 124, "mahdi": 95, "mahdiyeh": 95, "mahsa": 95, "mai": [1, 2, 3, 6, 7, 9, 14, 36, 43, 58, 67, 68, 75, 85, 87, 88, 89, 95, 98, 101, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 136, 139, 151, 171, 172, 175, 176, 207, 223, 244, 268, 306, 384, 388, 389, 397, 400, 402, 403, 405, 408, 414, 424, 440, 444, 455, 461], "mail": 405, "mail\u00e4nder": 395, "main": [2, 5, 6, 9, 10, 58, 93, 96, 101, 102, 114, 123, 166, 167, 174, 192, 384, 388, 391, 397, 400, 401, 402, 403, 414, 421], "mainimum": [114, 157], "mainli": [9, 11, 18, 84, 92, 119, 400], "maint": 6, "maintain": [6, 7, 10], "mainten": 2, "majeur": 2, "major": [51, 93, 102, 389, 401, 402, 405, 414], "make": [2, 4, 7, 8, 9, 10, 14, 23, 36, 41, 42, 43, 76, 88, 89, 90, 91, 92, 96, 97, 98, 99, 101, 102, 114, 120, 123, 124, 129, 144, 148, 150, 158, 159, 165, 170, 175, 177, 179, 180, 184, 186, 188, 189, 190, 193, 197, 209, 225, 226, 244, 245, 247, 248, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 321, 327, 329, 330, 348, 350, 365, 384, 388, 389, 390, 392, 401, 402, 403, 405, 410, 411, 414, 416, 443, 448], "makestyl": [405, 421], "mamba": [6, 7, 85, 88, 89, 90], "manag": [86, 93, 123, 403], "mandatori": 405, "mani": [5, 6, 7, 9, 43, 83, 87, 92, 97, 114, 176, 384, 390, 392, 395, 396, 400, 402, 454, 456], "manipul": [3, 40, 60, 83, 93, 101, 114, 124, 173, 302, 397], "manner": [2, 4], "manual": [7, 9, 92, 114, 144, 146, 149, 165, 171, 186, 225, 226, 245, 246, 247, 248, 251, 252, 266, 273, 274, 294, 330, 348, 350, 387, 407], "manufactur": 92, "map": [51, 87, 105, 114, 120, 122, 214, 217, 229, 232, 233, 238, 390, 402, 405, 467], "marcel": 95, "marco": 95, "margarita": 95, "margin": [114, 171, 172, 405], "mari": 95, "mark": [7, 114, 234, 389, 392, 401], "markdown": [14, 392], "marker": [75, 76, 77, 114, 122, 228, 231, 234, 235, 236, 237, 389, 392, 394, 405, 467], "markeredgecolor": [114, 228, 231, 235, 236, 237, 405], "markeredgewidth": [114, 228, 231, 235, 236, 237, 405], "markerfacecolor": [114, 228, 231, 235, 236, 237, 405], "markermarkerstyl": 122, "markers": [32, 33, 114, 122, 228, 231, 235, 236, 237, 389, 405], "markers_fillstyl": 405, "market": 2, "markeveri": [32, 114, 228, 231, 235, 236, 237], "markup": 9, "martin": 95, "mask": [7, 17, 23, 25, 32, 101, 114, 128, 135, 143, 168, 174, 192, 221, 228, 231, 235, 236, 237, 243, 297, 326, 328, 357, 358, 388, 402, 403, 405, 406, 411, 412, 450, 458], "masked_arrai": [114, 168, 221, 297, 411], "masked_array_lik": [114, 168, 297], "masked_data": [114, 358], "maskedarrai": 114, "masoumeh": 95, "mass": [7, 95, 97, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "massart": [16, 38, 83, 101, 104, 114, 153, 168], "massimiliano": 95, "massiv": [95, 385], "master": [6, 7, 51, 84, 383, 394, 399, 421], "mat": [19, 21, 22, 26, 29, 46, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 388, 390, 391, 394, 396, 397], "mat_": [46, 461], "match": [97, 114, 124, 146, 151, 153, 176, 294, 295, 411], "materi": [95, 385], "math": [23, 114, 184, 189, 259, 261, 391, 401, 405, 421, 436], "mathbf": 383, "mathemat": [114, 400, 402, 403, 406, 412, 424, 434], "mathrm": [17, 18, 26, 33, 41, 54, 58, 64, 114, 301, 389, 391, 393, 394], "mathtext": 405, "mathtext_bf": 405, "mathtext_c": 405, "mathtext_default": 405, "mathtext_fallback_to_cm": 405, "mathtext_fontset": 405, "mathtext_it": 405, "mathtext_rm": 405, "mathtext_sf": 405, "mathtext_tt": 405, "matlab": [21, 26, 46, 92, 95, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 396], "matlabdata": [19, 21, 22, 26, 114, 310, 311, 390, 391], "matplotib": 84, "matplotlib": [3, 9, 33, 54, 85, 92, 98, 99, 100, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 253, 340, 392, 400, 413, 429, 431, 435, 443, 452, 455, 467], "matplotlibrc": [114, 229, 230, 232, 233, 238, 239, 240], "matric": [19, 21, 97, 114, 117, 292, 310, 311, 369, 383, 390, 391, 394], "matrix": [20, 21, 22, 23, 26, 97, 98, 104, 105, 110, 111, 112, 113, 117, 118, 120, 127, 128, 244, 383, 390, 391, 394, 402, 428], "matter": 391, "matur": 92, "maug": 95, "mauri": 95, "maurin": 95, "max": [9, 17, 18, 22, 63, 64, 75, 95, 97, 101, 110, 113, 114, 120, 242, 303, 389, 390, 392, 397, 407, 409, 411, 416], "max_compon": 26, "max_error": 397, "max_fun_cal": 119, "max_it": [32, 76, 98, 99, 105, 113, 114, 117, 119, 122, 144, 244, 245, 253, 388, 389, 390], "max_lines_in_stack": 405, "max_rel_error": 397, "max_relative_error": 397, "maxdiv": [113, 390], "maxim": [98, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 176, 244, 392], "maxima": [101, 114, 137, 138, 176, 210, 213, 387, 393], "maximis": [383, 394], "maximum": [23, 32, 75, 98, 99, 101, 105, 113, 114, 117, 119, 122, 127, 137, 138, 141, 144, 151, 156, 176, 210, 213, 244, 245, 253, 267, 299, 353, 365, 366, 383, 388, 389, 390, 392, 405, 409, 410, 416], "mayb": [41, 86, 397], "mb": [27, 30, 34, 37, 39, 44, 52, 56, 59, 61, 65, 69, 72, 78, 81, 82, 84, 386], "mc": [95, 114, 390, 409], "mcdonald": [95, 114, 308, 397], "mcr": [16, 38, 83, 93, 95, 97, 101, 104, 105, 110, 113, 114, 117, 120, 127, 128, 302, 383, 385, 387, 391, 400, 417, 419, 428, 459, 460, 466], "mcr1": 390, "mcr2": 390, "mcr3": 390, "mcr4": 390, "mcr5": 390, "mcr_1": 22, "mcr_2": 22, "mcral": [21, 22, 104, 105, 110, 117, 120, 127, 128, 417, 419, 449, 450, 459, 460, 462], "mct": 397, "md": [7, 454], "mdpi": 95, "me": 405, "mean": [2, 9, 10, 19, 23, 36, 51, 98, 101, 102, 105, 107, 112, 114, 117, 118, 122, 135, 147, 165, 168, 178, 201, 243, 244, 247, 288, 289, 297, 333, 335, 353, 354, 360, 366, 388, 394, 400, 406, 413, 429], "meaning": 9, "meant": 4, "measur": [2, 22, 24, 29, 51, 73, 74, 83, 95, 114, 117, 119, 122, 176, 321, 353, 366, 383, 388, 392, 394, 402], "mec": [33, 114, 228, 231, 235, 236, 237, 389, 392], "mechan": 413, "mechanochem": [95, 385], "median": [107, 288], "medic": 95, "medium": [2, 9, 405], "meet": 2, "mem": [27, 30, 34, 37, 39, 44, 52, 56, 59, 61, 65, 69, 72, 78, 81, 82, 386], "member": [58, 92], "memorandum": 2, "memori": [105, 114, 135, 243], "menger": 110, "menghao": 95, "mention": [2, 5, 12, 392, 396, 397], "menu": [86, 87, 90, 399], "merg": [7, 9, 10, 26, 46, 67, 75, 114, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 335], "merit": [24, 26, 120, 389, 391], "messag": [4, 6, 7, 97, 162, 173, 195, 368, 395, 401, 402], "met": [7, 114, 168, 297, 405], "meta": [5, 7, 97, 101, 114, 123, 402, 410, 427, 450], "metadata": [7, 8, 26, 33, 41, 75, 91, 93, 101, 114, 123, 306, 312, 397, 402, 405, 409, 427], "metal": [95, 385], "meter": [43, 101, 114, 124, 198, 357, 402, 416], "meth": 9, "methan": [95, 385], "method": [4, 6, 7, 9, 10, 17, 19, 21, 24, 25, 32, 36, 41, 43, 46, 54, 55, 67, 68, 71, 75, 76, 77, 80, 85, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 135, 136, 139, 143, 144, 146, 148, 150, 154, 155, 159, 163, 164, 170, 175, 176, 179, 180, 182, 184, 188, 189, 190, 193, 197, 205, 209, 214, 215, 216, 217, 218, 219, 220, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 251, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 275, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 294, 302, 312, 317, 319, 320, 327, 328, 329, 330, 333, 335, 340, 347, 349, 350, 351, 355, 357, 362, 365, 369, 372, 374, 375, 376, 383, 385, 387, 390, 391, 393, 394, 395, 396, 397, 400, 401, 403, 404, 405, 407, 410, 411, 412, 417, 419, 421, 424, 426, 427, 429, 430, 431, 436, 441, 446, 449, 452, 459, 460, 461, 465, 466, 467], "method_1d": [114, 228, 392, 405], "method_2d": [114, 229, 392, 405], "method_3d": 405, "meting9": 22, "mew": [114, 228, 231, 235, 236, 237], "mezzetti": 95, "mfc": [33, 114, 228, 231, 235, 236, 237, 389, 392], "mhvwert": 414, "mhz": 338, "michael": 95, "michel": 2, "micromamba": [395, 404, 405], "micromet": [114, 312], "microsecond": 63, "microsoft": 87, "mid": [114, 282, 283, 284, 285, 379, 380, 381, 382], "middl": [114, 176, 282, 283, 284, 285, 379, 380, 381, 382, 415], "might": [6, 9, 92, 97, 101, 114, 140, 176, 395, 397, 409], "milagro": 95, "millinewton": 124, "millitesla": [102, 402], "mimic": [114, 266, 350, 384, 388, 407], "min": [9, 23, 36, 41, 80, 97, 101, 110, 114, 117, 120, 122, 128, 177, 303, 383, 391, 392, 393, 397, 411, 413], "mingw": 7, "miniconda": [6, 84, 89, 90], "miniforg": [6, 89], "minim": [5, 97, 112, 114, 117, 118, 121, 146, 176, 294, 383, 387, 391, 392, 402, 414], "minima": 392, "minimis": [114, 146, 294], "minimum": [2, 5, 7, 23, 84, 101, 114, 120, 137, 138, 142, 147, 150, 151, 210, 213, 257, 299, 383, 389, 392, 405, 409, 417, 419], "minka": 120, "minor": [405, 440], "minoux": 95, "minu": 405, "minut": [7, 18, 41, 86, 101, 114, 198, 392, 397, 405, 413, 461], "mir": 397, "mirror": [107, 114, 288, 289, 291, 333, 347, 414], "miscellan": 2, "mismatch": 406, "miss": [9, 88, 90, 92, 114, 135, 243, 388, 406, 435, 466], "mistak": 9, "mit": 51, "miter": 405, "mix": [64, 92, 105, 114, 117, 266, 350, 407], "mixing_": 105, "mixtur": [22, 95, 104, 105, 110, 113, 117, 120, 127, 128, 383, 385, 390], "mle": [24, 120], "mm": 397, "mo_al2o3": [20, 42, 91, 392, 397, 413], "mo_al2o3_0": 397, "mo_al2o3_bas": 397, "mod": 411, "mode": [6, 107, 114, 119, 197, 288, 289, 291, 333, 347, 405, 414, 417, 419], "model": [0, 17, 19, 20, 22, 24, 25, 26, 29, 32, 33, 36, 75, 76, 80, 91, 95, 97, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 127, 128, 131, 132, 145, 183, 208, 228, 231, 235, 236, 237, 242, 244, 253, 254, 255, 288, 342, 367, 383, 387, 391, 393, 394, 395, 440, 459], "modeldata": [114, 119], "modellinestyl": [114, 228, 231, 235, 236, 237], "modern": 405, "modif": [2, 11, 114, 402, 428], "modifi": [2, 6, 7, 10, 51, 96, 98, 99, 101, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 167, 209, 244, 253, 264, 265, 279, 282, 285, 345, 346, 357, 379, 382, 397, 402, 404, 405, 411, 416, 445, 463], "modl": [114, 228, 231, 235, 236, 237], "modul": [2, 7, 9, 86, 88, 197, 388, 397, 398, 414, 434, 463], "modulu": [114, 211, 271], "mohammad": 95, "moistur": [29, 394], "molar": 95, "molecular": [95, 385], "moment": [80, 114, 168, 297, 399], "monodecconc": 113, "monodectol": 113, "monoincconc": 113, "monoinctol": 113, "monospac": 405, "monoton": [95, 113], "month": [0, 2], "more": [2, 6, 7, 9, 10, 12, 14, 21, 24, 36, 41, 58, 80, 84, 88, 91, 92, 93, 97, 102, 105, 107, 114, 120, 121, 122, 149, 151, 166, 176, 186, 197, 246, 248, 288, 289, 291, 333, 347, 383, 384, 387, 388, 389, 396, 399, 400, 403, 405, 414, 416, 423, 429, 445], "moreov": 414, "morin": 95, "mortim": [41, 402], "mor\u00e1vkov\u00e1": 95, "most": [7, 9, 11, 84, 91, 92, 95, 101, 114, 176, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 357, 383, 385, 391, 392, 400, 402, 404, 405, 407], "mostli": [17, 402], "motiv": 92, "mouravieff": 95, "mous": 392, "move": [107, 114, 164, 287, 288, 291, 347, 405, 412], "mp": 409, "mp5nb": [46, 394], "mp5spec": [46, 394], "mp6nb": [46, 394], "mp6spec": [46, 394], "mpl": [114, 229, 232, 233, 238, 405], "mpl_event": 214, "mplstyle": 421, "msdata": [114, 314], "msg": [162, 195, 368], "mt": [402, 405], "mu": [36, 117], "much": [9, 24, 80, 84, 92, 392, 397, 402, 414, 467], "multi": [97, 466, 467], "multicoordin": [430, 450, 458], "multicor": 7, "multidimension": [1, 91, 114, 148, 150, 159, 170, 175, 179, 180, 184, 189, 190, 193, 209, 225, 226, 256, 257, 258, 259, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 327, 329, 349, 350, 365, 413, 424], "multiindex": 9, "multimod": 113, "multipl": [4, 6, 7, 9, 20, 24, 55, 62, 73, 75, 83, 93, 98, 101, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 137, 138, 147, 170, 185, 188, 210, 213, 214, 244, 260, 266, 284, 300, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 346, 350, 381, 402, 409, 412, 421, 426, 465], "multipli": [97, 114, 117, 120, 301], "multiplot": [114, 215, 216, 217, 218, 219, 227, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 388], "multiplot_map": 406, "multisampl": 383, "multivari": [21, 36, 91, 95, 98, 99, 110, 113, 244, 253, 383, 385, 390, 391], "munk": [114, 312], "muschi": 95, "must": [5, 6, 9, 10, 46, 75, 87, 88, 90, 91, 97, 101, 102, 104, 105, 107, 111, 113, 114, 117, 119, 120, 121, 122, 123, 127, 128, 140, 147, 148, 150, 152, 153, 163, 167, 168, 170, 175, 176, 184, 189, 190, 193, 197, 202, 214, 223, 225, 234, 242, 256, 257, 258, 259, 261, 262, 267, 268, 270, 273, 286, 288, 289, 291, 295, 296, 297, 302, 304, 312, 313, 333, 335, 347, 352, 361, 365, 384, 388, 389, 394, 400, 401, 402, 414, 416, 417, 419], "mute": 405, "mutivari": 424, "my": [6, 58], "my_g": 105, "my_new_featur": 6, "myaccount": 87, "myclass": 197, "myconfigur": 197, "mycoord": [101, 114, 140], "mydatadir": 96, "mydataset": [41, 389, 402], "mydefault": 405, "myfil": [114, 371, 373], "myfunct": 197, "mykhailo": 95, "mylabel": 101, "mymodul": 197, "mynmrdata": 404, "myproj": 123, "myscript": [129, 197], "mywork": 87, "m\u00e9gane": 95, "n": [5, 9, 22, 26, 36, 39, 61, 82, 88, 89, 95, 101, 104, 110, 114, 122, 124, 128, 145, 148, 160, 165, 174, 177, 183, 184, 189, 190, 191, 192, 197, 208, 214, 242, 247, 256, 259, 261, 262, 269, 284, 301, 342, 344, 353, 366, 367, 381, 383, 385, 392, 394, 404, 405, 414], "n1": [197, 402], "n2": 197, "n3": 197, "n4": 197, "n5": 197, "n6": 197, "n_compon": [17, 18, 19, 22, 23, 24, 25, 26, 29, 32, 36, 91, 98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253, 383, 388, 390, 391, 394, 461], "n_cstr": 121, "n_featur": [24, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288, 289, 291, 292, 333, 347, 369, 383], "n_iter": 105, "n_observ": [24, 80, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288, 289, 291, 292, 333, 347, 369, 383], "n_oversampl": 120, "n_pc": [18, 120], "n_reaction": 97, "n_sampl": [117, 122], "n_score": 120, "n_speci": 97, "n_target": [112, 113, 118, 122, 383], "n_time": 97, "na": 7, "naiv": 404, "nalidix": [95, 385], "name": [2, 4, 5, 6, 7, 9, 11, 17, 20, 21, 22, 24, 25, 26, 29, 32, 41, 42, 46, 51, 58, 75, 76, 77, 87, 88, 89, 90, 91, 96, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 137, 138, 140, 147, 154, 155, 158, 160, 167, 185, 197, 202, 205, 207, 210, 212, 213, 223, 228, 231, 235, 236, 237, 244, 253, 266, 288, 299, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 349, 350, 353, 354, 362, 366, 370, 371, 373, 388, 389, 390, 391, 393, 394, 395, 396, 397, 400, 401, 402, 404, 405, 406, 407, 409, 411, 413, 416, 459], "nameerror": 405, "namespac": [197, 384, 396, 400], "nan": [7, 101, 114, 122, 136, 137, 138, 176, 210, 213, 411, 450], "nano": 96, "nano15010057": [95, 385], "nanohybrid": [95, 385], "nanomateri": 95, "nanomet": [42, 43], "nanoparticl": [95, 385], "nanosecond": 124, "narrow": 410, "nat": 95, "nation": 2, "nativ": [114, 123, 396, 405], "natur": [2, 95, 385, 397, 411], "navig": [6, 10, 399], "nb": 392, "nb_trace": [19, 21, 22, 26, 36, 98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253, 391], "nblue": [98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253], "nbsp": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 91, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "nbsphinx": [391, 401], "ncol": [214, 388, 406], "nd": [7, 14, 32, 36, 46, 67, 102, 114, 115, 116, 123, 147, 160, 167, 212, 221, 227, 302, 312, 313, 335, 353, 354, 366, 370, 371, 377, 378, 383, 384, 389, 400, 407, 408, 411, 458], "nd1": [67, 75, 101, 114, 123, 158, 198, 205, 404, 406, 408], "nd1a": 406, "nd2": [67, 75, 101, 114, 123, 158, 198, 205, 402, 404, 406, 408], "nd2a": 406, "nd3": [67, 75, 101, 114, 158, 406, 408], "nd4": [67, 75, 406, 408], "nd4a": 406, "nd5": 408, "nd5b": 408, "nd6": 408, "nd7": 408, "nd8": 408, "nd_data": 41, "ndadd": 406, "ndarrai": [5, 9, 97, 98, 99, 101, 102, 104, 105, 110, 111, 113, 114, 117, 119, 120, 122, 127, 128, 136, 139, 146, 158, 163, 164, 168, 176, 179, 180, 188, 191, 198, 202, 244, 253, 260, 269, 277, 278, 283, 284, 286, 287, 294, 297, 343, 344, 357, 358, 363, 364, 380, 381, 383, 384, 397, 402, 403, 404, 411, 421, 431, 468], "ndarrat": [114, 191, 269], "ndata": [114, 191, 269, 283, 284, 380, 381], "ndataset": [114, 284, 381], "ndax": 114, "ndcomplex": 7, "ndd": [49, 101, 114, 357], "nddataset": [5, 7, 9, 14, 18, 20, 21, 23, 25, 29, 32, 33, 35, 43, 46, 48, 55, 58, 75, 76, 77, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 133, 134, 135, 140, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 189, 190, 192, 193, 198, 205, 209, 212, 214, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 333, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 369, 370, 371, 377, 378, 379, 382, 387, 390, 391, 392, 393, 394, 396, 397, 400, 404, 410, 412, 421, 453, 461], "nddataset_02249918": [], "nddataset_0225b992": [], "nddataset_02267c1a": [], "nddataset_02278b8c": [], "nddataset_024c45a2": [], "nddataset_028b6288": [], "nddataset_0427b890": [], "nddataset_05c9e8ca": [], "nddataset_05f48166": [], "nddataset_05f90150": [], "nddataset_0792fb2a": [], "nddataset_07bccc7a": [], "nddataset_07c16c76": [], "nddataset_0b2f8862": [], "nddataset_0fd17b5a": [], "nddataset_0fd29cf6": [], "nddataset_0fd356e6": [], "nddataset_0fd46cfc": [], "nddataset_331c0dc6": [], "nddataset_342f6592": [], "nddataset_37e4409": [], "nddataset_37e572f2": [], "nddataset_37e63dd6": [], "nddataset_37e75be": [], "nddataset_38e4dfc2": [], "nddataset_38e61a90": [], "nddataset_38e6e0f6": [], "nddataset_38e7f892": [], "nddataset_44b5a0fc": [], "nddataset_47e9cac8": [], "nddataset_48126212": [], "nddataset_4816a606": [], "nddataset_551dd79": [], "nddataset_5ae8e13": [], "nddataset_5e9cad9c": [], "nddataset_5ec7d940": [], "nddataset_5eccc306": [], "nddataset_61265d50": [], "nddataset_6ca090bc": 75, "nddataset_7368d2fc": [], "nddataset_77f099ea": [], "nddataset_77f1c00": [], "nddataset_77f2853": [], "nddataset_77f39c94": [], "nddataset_7bf682fa": [], "nddataset_7e67cb40": [], "nddataset_8b0faa9a": [], "nddataset_8d8f132": [], "nddataset_927de7c0": [], "nddataset_927f1802": [], "nddataset_927fdc9c": [], "nddataset_9280e376": [], "nddataset_a4ee104a": [], "nddataset_aa17e140": [], "nddataset_aa4107a0": [], "nddataset_aa456fa2": [], "nddataset_ad9dd666": [], "nddataset_afe2057a": [], "nddataset_b331c6ac": [], "nddataset_b352edea": [], "nddataset_b35cae4": [], "nddataset_b361271c": [], "nddataset_bbf904fa": 400, "nddataset_bf4b0162": 402, "nddataset_bf748e9c": 402, "nddataset_bf79081": 402, "nddataset_cb6d3bf8": [], "nddataset_ce2f3c12": [], "nddataset_ced9ada8": [], "nddataset_cf036b2a": [], "nddataset_cf07e18c": [], "nddataset_d1878ba8": [], "nddataset_d1b1c026": [], "nddataset_d1b64c90": [], "nddataset_d6394408": [], "nddataset_dad813d6": [], "nddataset_dad93d88": [], "nddataset_dada0ca4": [], "nddataset_dadb18c": [], "nddataset_db5d336": [], "nddataset_dec77c4": [], "nddataset_def0aef2": [], "nddataset_def526c6": [], "nddataset_df183a1c": [], "nddataset_e3b11e22": [], "nddataset_e3b23690": [], "nddataset_e3b2f77": [], "nddataset_e3b40a06": [], "nddataset_eb4b5212": 411, "nddataset_efe2780a": 411, "nddataset_efe3a2d4": 411, "nddataset_efe46c6": 411, "nddataset_efe56ec0": 411, "nddataset_f650da12": [], "nddataset_faec3a96": [], "nddataset_fd92e4a4": [], "nddataset_ffa0b594": [], "nddataset_ffa1e9aa": [], "nddataset_ffa2b51a": [], "nddataset_ffa3d058": [], "ndez": 95, "ndim": [101, 114, 137, 138, 210, 213, 402, 410], "ndlb": 407, "ndlg": 407, "ndmath": [421, 434], "ndoh": [32, 389], "ndohcorr": 389, "ndp": 36, "ndpanel": 421, "nearest": [107, 114, 288, 289, 291, 333, 347, 405, 411], "necessari": [2, 6, 25, 75, 86, 87, 112, 114, 118, 135, 243, 296, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 352, 384, 388, 390, 395, 399, 402, 406, 407, 447, 455], "necessarili": [10, 396], "need": [4, 6, 7, 9, 10, 14, 15, 21, 24, 33, 36, 46, 51, 54, 68, 75, 76, 80, 85, 86, 87, 89, 92, 96, 101, 105, 113, 114, 120, 146, 163, 176, 197, 286, 294, 304, 389, 391, 392, 400, 402, 405, 408, 410, 414], "neg": [26, 98, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 120, 122, 127, 128, 136, 139, 143, 159, 165, 167, 174, 179, 180, 202, 244, 247, 275, 277, 278, 280, 288, 289, 327, 328, 333, 383, 387, 390, 397, 413, 466], "negat": [114, 159, 275, 280, 327], "negative_axi": 114, "neglig": [383, 390], "neighbor": [392, 414], "neighbour": [114, 176, 392], "neither": [2, 92, 122, 395], "nematollah": 95, "nesterenko": 95, "network": [2, 7, 95, 97, 385], "neural": [95, 385], "neuroinflammatori": [95, 385], "never": [7, 405], "nevertheless": 2, "new": [2, 6, 7, 9, 10, 14, 33, 36, 41, 49, 75, 80, 86, 88, 89, 90, 92, 95, 98, 100, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 136, 139, 148, 150, 153, 159, 160, 164, 170, 171, 172, 175, 178, 179, 180, 181, 182, 184, 188, 189, 190, 193, 209, 212, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 287, 295, 296, 299, 304, 327, 329, 335, 349, 350, 351, 352, 353, 354, 355, 357, 362, 365, 366, 377, 378, 383, 388, 390, 394, 395, 396, 400, 401, 404, 405, 407, 409, 416, 418], "new1": [63, 64], "new2": [63, 64], "new3": 64, "new4": 64, "new5": 64, "new_func": 7, "new_wodg": [114, 116, 123], "newargsgetconc": 113, "newargsgetspec": 113, "newcom": [6, 12], "newest": 428, "newfid": 409, "newproj": 58, "news0": 397, "next": [6, 9, 10, 75, 76, 88, 90, 113, 114, 283, 380, 389, 391, 392, 395, 401, 402, 405], "nfev": 97, "ngreen": [98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253], "nh": 405, "nh4_y": 17, "nh4y": [17, 23, 25, 32, 36, 46, 47, 55, 91, 100, 101, 104, 114, 123, 128, 146, 147, 153, 160, 176, 205, 212, 223, 294, 295, 296, 312, 319, 343, 344, 352, 353, 354, 363, 364, 366, 371, 388, 389, 393, 402, 405, 406, 411, 416], "nice": 12, "nicer": 26, "nicola": 95, "nicolet": [114, 312, 317, 319, 320], "nieto": 95, "nikolai": 95, "nipal": 122, "nir": [29, 388, 394], "nist": [114, 169, 443], "njev": 97, "nl": 389, "nlu": 97, "nm": [18, 26, 29, 42, 43, 114, 312, 388, 394], "nmd": 409, "nmf": [16, 38, 83, 98, 99, 104, 105, 110, 113, 114, 120, 127, 128, 244, 253, 312, 388], "nmr": [1, 45, 60, 63, 64, 78, 92, 96, 101, 102, 114, 119, 170, 175, 179, 180, 191, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 268, 269, 277, 278, 283, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 338, 348, 380, 381, 386, 396, 400, 402, 404, 407, 411, 412, 436, 437, 439, 466, 467], "nmr_1d": 404, "nmr_2d": 404, "nmrdata": [49, 63, 64, 75, 76, 77, 402, 404, 407, 409, 415], "nmrdir": [75, 76, 77], "nmrglue": [1, 7, 114, 191, 269, 443], "nnddataset": 5, "nndsvd": 117, "nndsvda": 117, "nndsvdar": 117, "nnl": [112, 113, 387, 462], "nnmf": [430, 461], "node": 4, "nogrid": 405, "noinspect": 404, "nois": [17, 18, 26, 67, 68, 95, 114, 127, 164, 176, 203, 249, 287, 388, 407, 408, 414], "noisi": [33, 114, 176, 388, 389], "nomask": [7, 114], "nominal_valu": 124, "non": [2, 4, 6, 97, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 136, 139, 144, 149, 153, 165, 186, 202, 244, 245, 246, 247, 248, 251, 252, 253, 267, 288, 289, 295, 306, 309, 330, 333, 348, 365, 383, 387, 388, 390, 396, 405, 409, 411, 421, 442, 463, 466], "none": [7, 9, 18, 19, 22, 23, 26, 29, 32, 41, 54, 75, 76, 77, 97, 98, 99, 100, 101, 104, 105, 106, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 147, 151, 156, 157, 160, 167, 168, 171, 172, 174, 175, 176, 177, 181, 182, 183, 184, 185, 191, 192, 193, 196, 197, 202, 207, 208, 210, 212, 213, 214, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 253, 259, 266, 268, 269, 270, 282, 285, 293, 297, 299, 301, 303, 305, 306, 307, 309, 315, 316, 332, 342, 350, 351, 353, 354, 366, 367, 370, 377, 378, 379, 382, 388, 389, 390, 392, 394, 396, 402, 404, 405, 414, 450, 452, 458], "nonfinit": 122, "nonneg": [114, 117, 353, 366, 388], "nonnegconc": 113, "nonnegspec": [113, 450], "nonrandom": [390, 391], "nonzero": 397, "noqa": [395, 397, 400], "nor": [2, 6, 89, 92, 114, 122, 124, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 395], "norestart": 87, "norm": [117, 122, 390, 405, 467], "normal": [9, 18, 41, 63, 64, 104, 105, 106, 113, 114, 120, 122, 183, 197, 267, 353, 365, 366, 384, 389, 390, 405, 407, 409, 414, 421, 467], "normaldistribut": 105, "normandi": 95, "normspec": [113, 390], "notabl": 2, "notat": [405, 409], "note": [7, 10, 17, 23, 24, 25, 36, 41, 46, 50, 54, 71, 75, 76, 83, 87, 88, 97, 100, 101, 102, 104, 105, 110, 113, 114, 116, 117, 119, 120, 122, 123, 127, 128, 136, 137, 149, 171, 172, 176, 178, 186, 197, 202, 205, 207, 210, 212, 224, 246, 248, 266, 289, 302, 303, 312, 313, 314, 317, 319, 320, 333, 350, 353, 366, 388, 389, 390, 392, 396, 397, 402, 405, 406, 407, 410, 411, 413, 414, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "notebook": [10, 20, 75, 76, 77, 80, 83, 85, 86, 92, 100, 114, 229, 230, 232, 233, 238, 239, 240, 383, 396, 401, 405, 409], "noth": [92, 396, 397, 402, 463], "notic": [2, 9, 36], "notifi": [89, 448], "nouar": 95, "novel": [95, 385], "now": [6, 7, 20, 22, 25, 26, 32, 33, 36, 41, 42, 49, 51, 54, 58, 68, 75, 76, 80, 84, 91, 102, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 338, 373, 387, 388, 389, 390, 391, 392, 393, 395, 396, 399, 402, 404, 406, 409, 410, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 426, 430, 431, 436, 441, 442, 444, 446, 449, 450, 451, 454, 459, 460, 461, 463, 464, 465, 466, 467], "np": [5, 7, 9, 18, 22, 33, 41, 51, 75, 77, 97, 101, 113, 114, 124, 147, 178, 181, 182, 221, 222, 301, 357, 358, 377, 378, 384, 388, 389, 402, 411, 413, 414, 453], "nr": 2, "nred": [98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253], "nria": 2, "nrow": [214, 388, 406], "nshape": [145, 183, 208, 242, 342, 367], "nspec": 405, "nterpol": 388, "nth": [98, 99, 114, 165, 244, 247, 253], "nuclear": 95, "nucleu": [101, 338], "null": [114, 267, 365, 383], "num": [101, 110, 114, 185, 202, 207, 402], "num1": 9, "num2": 9, "number": [2, 7, 9, 11, 17, 19, 23, 24, 25, 32, 36, 54, 80, 83, 88, 90, 97, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 135, 136, 140, 143, 144, 146, 148, 149, 153, 159, 163, 169, 174, 175, 176, 178, 179, 180, 184, 185, 186, 189, 190, 191, 192, 202, 207, 209, 212, 214, 228, 231, 234, 235, 236, 237, 243, 244, 245, 246, 248, 253, 256, 259, 261, 262, 268, 269, 275, 277, 278, 279, 280, 281, 284, 286, 288, 289, 291, 292, 294, 295, 296, 303, 310, 311, 312, 321, 327, 328, 329, 333, 335, 344, 347, 352, 353, 366, 369, 381, 383, 388, 391, 392, 393, 402, 405, 410, 412, 414, 440, 463], "number_of_contour": 405, "number_of_x_label": 405, "number_of_y_label": 405, "number_of_z_label": 405, "numbr": 411, "numer": [92, 95, 98, 99, 101, 105, 114, 117, 130, 244, 253, 349, 395, 397, 402, 403, 411], "numpi": [6, 7, 9, 10, 18, 22, 33, 41, 51, 75, 77, 84, 92, 101, 102, 107, 113, 114, 116, 123, 124, 143, 147, 148, 150, 159, 163, 166, 168, 170, 175, 179, 180, 184, 188, 189, 190, 193, 205, 209, 221, 225, 226, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 297, 327, 328, 329, 333, 343, 344, 347, 350, 358, 363, 364, 365, 369, 377, 384, 388, 389, 397, 403, 405, 410, 412, 413, 414, 417, 419, 452, 453, 458], "numpydoc": 9, "n\u00e9lieu": 95, "o": [9, 17, 32, 33, 64, 75, 93, 98, 99, 114, 122, 197, 234, 244, 253, 394, 397, 398, 405], "obei": 22, "obj": 404, "object": [2, 5, 7, 9, 20, 22, 24, 25, 29, 32, 33, 36, 41, 46, 75, 76, 77, 93, 97, 98, 99, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 148, 150, 151, 153, 154, 155, 158, 163, 164, 167, 170, 171, 172, 174, 175, 177, 178, 181, 182, 184, 185, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 207, 210, 213, 221, 222, 224, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 286, 287, 288, 295, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 335, 341, 349, 350, 351, 352, 355, 357, 361, 362, 365, 370, 371, 373, 377, 378, 383, 389, 390, 391, 393, 394, 395, 396, 397, 400, 404, 405, 412, 413, 428, 459, 463], "oblig": [2, 92], "obliqu": 405, "observ": [2, 20, 95, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288, 289, 291, 292, 333, 347, 369, 383, 385, 391, 394, 416], "obtain": [19, 22, 23, 25, 76, 96, 97, 98, 104, 113, 244, 383, 389, 390, 391, 392, 394, 395, 397, 408, 409, 411, 413, 467], "obviou": [9, 18, 392], "obvious": [43, 54, 388, 389, 411], "occas": [2, 9], "occur": [97, 130, 467], "occurr": 2, "od": [97, 101, 114], "odd": [107, 114, 176, 288, 289, 291, 333, 344, 347, 414], "odesolut": 97, "odesolv": 97, "off": [17, 101, 104, 114, 140, 176, 397], "offer": [2, 33, 384, 399, 400, 402, 403, 405], "offlin": 445, "offset": [26, 36, 54, 75, 76, 80, 98, 99, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 166, 167, 228, 231, 235, 236, 237, 244, 253, 389, 391, 392, 393, 404, 405, 406, 411, 415, 421], "often": [7, 9, 24, 90, 92, 105, 383, 384, 391, 394, 396, 406, 409], "ogiciel": 2, "oh": [32, 389, 405], "oil": [29, 394], "ois": 95, "ok": [9, 36, 80, 106], "old_func": 7, "older": 444, "oliviero": [95, 385], "olsz\u00f3wka": 95, "olynomi": 388, "om": 95, "omidikia": [95, 113], "omit": [7, 9], "omnic": [23, 45, 46, 60, 83, 91, 101, 114, 115, 116, 123, 146, 153, 294, 295, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 352, 393, 396, 398, 402, 405, 412, 416, 429], "omnic_seri": [114, 320], "omnnic": 55, "onc": [5, 6, 7, 15, 46, 75, 87, 89, 102, 114, 197, 284, 381, 390, 392, 394, 405], "one": [2, 6, 7, 9, 10, 20, 21, 22, 24, 33, 41, 42, 43, 55, 68, 84, 87, 89, 96, 97, 101, 102, 104, 105, 106, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 136, 137, 138, 139, 147, 151, 152, 153, 172, 174, 176, 181, 182, 192, 201, 210, 212, 213, 222, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 295, 299, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 351, 353, 354, 360, 366, 370, 371, 378, 384, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 404, 405, 406, 408, 411, 413, 414, 423, 446, 459], "ones": [9, 29, 113, 114, 123, 171, 172, 174, 181, 182, 192, 222, 377, 378, 391, 394, 399, 402, 405], "ones_lik": [114, 171, 172, 181, 182, 221, 377, 378], "oneslik": [114, 222], "ongo": 7, "onli": [2, 4, 5, 6, 7, 9, 10, 14, 18, 25, 32, 36, 54, 68, 75, 76, 85, 88, 89, 90, 97, 98, 100, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 130, 135, 146, 147, 148, 150, 152, 163, 168, 170, 176, 177, 184, 188, 189, 190, 197, 202, 214, 228, 229, 231, 232, 233, 235, 236, 237, 238, 243, 244, 256, 257, 258, 259, 260, 261, 262, 266, 267, 286, 288, 289, 294, 297, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 350, 365, 371, 373, 388, 389, 390, 391, 392, 393, 395, 396, 397, 400, 402, 404, 405, 406, 408, 412, 414, 416, 429, 448, 451, 466], "onlin": [9, 87], "onlinelibrari": 95, "only_first": 114, "onto": [9, 95, 105, 120, 385, 391], "oop": 395, "oordin": [114, 157], "op": [402, 409], "opaqu": 122, "open": [1, 2, 5, 6, 9, 10, 11, 14, 15, 50, 87, 88, 89, 90, 96, 101, 114, 123, 140, 176, 202, 205, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 396, 397, 399, 405, 409, 442], "oper": [2, 6, 9, 11, 12, 23, 42, 43, 86, 89, 101, 105, 110, 114, 137, 138, 147, 153, 160, 176, 203, 204, 210, 212, 213, 249, 250, 295, 296, 299, 352, 353, 354, 366, 388, 389, 397, 400, 402, 403, 406, 407, 410, 412, 413, 416, 421, 424, 436, 467], "operand": 406, "operando": [95, 104, 385], "opf": 397, "opinion": 92, "opportun": 2, "opposit": [9, 338], "opt_str": 197, "optic": [92, 95, 101, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 385, 410, 449], "optical_veloc": 450, "optik": 397, "optim": [21, 22, 32, 75, 76, 77, 80, 93, 97, 113, 121, 387, 388, 389, 456, 463, 467], "optimis": [21, 22, 387, 390], "optimizer_kwarg": 97, "optimum": [110, 391, 414], "option": [2, 5, 9, 13, 21, 54, 84, 87, 89, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 197, 199, 202, 205, 207, 209, 210, 212, 213, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 294, 295, 297, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 332, 333, 335, 341, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 357, 362, 363, 364, 365, 366, 369, 370, 371, 373, 377, 378, 388, 389, 390, 395, 397, 402, 405, 407, 435, 467], "options_t": 197, "optstr": 197, "opu": [1, 45, 60, 83, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 396, 398, 429, 464], "opusfil": 397, "oral": 2, "orang": 3, "order": [2, 9, 36, 68, 71, 75, 80, 88, 91, 95, 97, 98, 99, 101, 102, 107, 111, 114, 117, 131, 132, 165, 171, 176, 225, 226, 242, 244, 247, 253, 254, 255, 273, 274, 288, 289, 291, 292, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 335, 347, 349, 369, 383, 388, 389, 390, 393, 396, 402, 408, 410, 413, 414, 416, 430, 431, 435, 448, 459], "ordin": [9, 114, 164, 287, 390], "ordinari": [112, 113, 118], "ored": 388, "org": [4, 7, 95, 114, 373, 405], "organ": [95, 114, 385], "organis": 396, "orgin": [114, 123, 205], "origin": [2, 6, 7, 9, 12, 16, 17, 20, 21, 22, 26, 29, 33, 38, 42, 47, 51, 58, 67, 68, 71, 83, 98, 99, 100, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 135, 153, 164, 168, 170, 188, 243, 244, 253, 258, 260, 284, 287, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 357, 381, 383, 388, 389, 390, 391, 396, 397, 402, 405, 406, 408, 409, 410, 412, 414, 416], "orthonorm": 383, "oserror": 396, "osqp": [110, 467], "osx": [84, 96, 396], "ot": 97, "other": [1, 6, 7, 9, 10, 12, 14, 21, 24, 36, 54, 75, 76, 84, 88, 89, 92, 96, 97, 98, 99, 101, 102, 104, 105, 110, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 130, 133, 134, 135, 140, 148, 150, 153, 159, 161, 163, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 192, 193, 197, 198, 199, 202, 203, 205, 207, 209, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 249, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 289, 291, 292, 295, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 333, 335, 343, 344, 347, 350, 357, 358, 363, 364, 365, 369, 370, 377, 378, 383, 384, 389, 390, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411, 412, 414, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "otherwis": [6, 9, 101, 114, 117, 120, 122, 128, 130, 148, 150, 184, 185, 189, 190, 202, 207, 212, 256, 257, 259, 261, 262, 267, 353, 362, 365, 366], "oto": 26, "ouput": 21, "our": [6, 7, 10, 25, 87, 88, 90, 92, 101, 390, 394, 397, 399, 402, 405, 410], "out": [2, 6, 22, 93, 100, 101, 102, 105, 114, 117, 124, 127, 136, 140, 146, 153, 168, 175, 193, 268, 270, 294, 295, 296, 297, 332, 335, 352, 371, 373, 383, 390, 392, 396, 400, 404, 405, 411, 413, 414], "outer": [114, 135, 243, 406], "outil": [95, 385], "outlet": 121, "outlier": 68, "outlin": [7, 197], "output": [9, 10, 19, 20, 23, 33, 75, 76, 80, 86, 87, 88, 90, 97, 98, 99, 100, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 133, 134, 140, 146, 168, 171, 174, 177, 178, 185, 192, 207, 228, 229, 231, 232, 233, 235, 236, 237, 238, 244, 253, 288, 289, 291, 294, 297, 301, 332, 333, 347, 370, 373, 384, 388, 389, 390, 392, 395, 396, 411, 455], "output_path": [114, 370], "outsid": [2, 114, 151, 397], "over": [2, 4, 9, 80, 101, 105, 114, 124, 136, 137, 138, 139, 147, 177, 178, 185, 202, 207, 210, 212, 213, 301, 353, 354, 366, 383, 388, 414], "overal": [84, 383], "overestim": 392, "overfit": 388, "overlap": [95, 104, 406], "overrid": [114, 119, 172, 182, 222, 378], "overview": [10, 93, 400, 401, 443], "overwrit": [102, 197, 384, 400], "overwrite_data": 58, "own": [0, 2, 6, 9, 83, 92, 105, 401], "owner": 2, "oxford": 95, "oxid": [95, 385], "ozaki": [95, 114, 164, 287], "p": [1, 11, 64, 75, 76, 87, 95, 110, 111, 114, 121, 197, 226, 274, 302, 312, 313, 383, 388, 392, 405, 409, 411, 414], "p15": 75, "p350": [58, 114, 304, 324], "paavo": 95, "pack": 50, "packag": [1, 6, 7, 9, 19, 21, 23, 24, 25, 26, 29, 46, 51, 84, 85, 86, 87, 88, 90, 91, 92, 101, 114, 206, 395, 400, 402, 404, 405, 417, 419, 422, 428, 440, 447, 466], "packeg": 11, "pad": [107, 114, 288, 289, 291, 333, 347, 392, 404, 405], "page": [6, 7, 10, 14, 84, 87, 89, 91, 95, 387, 415, 454], "pair": [22, 98, 99, 114, 146, 149, 186, 244, 246, 248, 253, 294, 388], "palatino": 405, "palett": 405, "panda": [3, 10, 13, 421], "pane": 86, "panetso": 95, "paper": [21, 46, 47, 93, 405, 414, 428], "par": [197, 404], "parabol": [242, 389], "paragraph": [2, 9], "parallel": 105, "paralysi": 2, "param": [4, 7, 98, 99, 104, 105, 107, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288, 388, 465], "param_to_optim": [22, 121], "param_to_set": 121, "paramet": [4, 5, 7, 20, 22, 32, 36, 46, 51, 54, 64, 67, 68, 75, 76, 77, 80, 87, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 197, 198, 199, 202, 203, 204, 205, 207, 209, 210, 212, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 335, 338, 341, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 362, 363, 364, 365, 366, 369, 370, 371, 373, 377, 378, 379, 380, 381, 382, 383, 388, 391, 392, 396, 397, 402, 407, 408, 409, 414, 417, 419, 421, 449, 458, 460, 461, 463, 465, 467], "parameter": 97, "parametr": 7, "parent": [114, 123, 129, 197, 223], "parenthes": 401, "pari": [2, 405], "pariti": [29, 394], "parityplot": [29, 122, 394], "pars": 197, "parse_opt": 197, "part": [1, 2, 6, 7, 9, 10, 13, 14, 17, 23, 36, 76, 92, 101, 114, 137, 143, 154, 155, 176, 210, 328, 383, 387, 400, 405, 409, 411, 416, 466], "parti": [2, 9, 397], "partial": [2, 122, 383, 387, 402, 461], "particular": [2, 92, 114, 122, 124, 168, 297, 384, 388, 389, 392, 408, 413], "particularli": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 396, 407], "pass": [4, 5, 7, 10, 17, 20, 33, 46, 51, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 136, 139, 167, 174, 175, 177, 178, 192, 197, 224, 227, 234, 244, 253, 268, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 388, 389, 392, 394, 395, 396, 402, 405, 467], "passant": 392, "password": 87, "past": [87, 107, 114, 288, 289, 291, 333, 347], "pastel": 405, "patch": [122, 214, 405], "patch_antialias": 405, "patch_edgecolor": 405, "patch_facecolor": 405, "patch_force_edgecolor": 405, "patch_linewidth": 405, "patent": 2, "path": [5, 6, 7, 11, 17, 32, 46, 49, 63, 64, 85, 87, 90, 101, 106, 114, 223, 229, 232, 233, 238, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 397, 398, 401, 402, 404, 405, 407, 409, 410, 415], "path1": 396, "path2": 396, "path3": 396, "path_a": [114, 146, 294], "path_simplifi": 405, "path_simplify_threshold": 405, "path_sketch": 405, "path_snap": 405, "pathclean": [404, 407, 421], "pathlib": [5, 46, 101, 114, 115, 116, 123, 205, 223, 302, 306, 312, 313, 370, 371, 373, 398, 404], "pathnam": [397, 398], "pattern": [7, 75, 95, 385], "paul": [95, 114, 308, 397], "pawel": 95, "pc": [24, 25, 120, 390, 391], "pca": [16, 17, 21, 22, 26, 38, 83, 93, 104, 105, 110, 113, 114, 117, 127, 128, 163, 206, 286, 312, 383, 387, 388, 400, 429, 449, 458, 461, 465], "pchip": [36, 91, 98, 99, 114, 135, 243, 244, 253, 388], "pchipinterpol": [98, 99, 244, 253, 388], "pd_101": [114, 312, 397], "pd_104": 397, "pd_21": [114, 317], "pdata": 76, "pdf": [9, 95, 405], "peak": [67, 68, 73, 74, 75, 80, 83, 92, 95, 98, 99, 101, 104, 114, 119, 144, 146, 149, 164, 165, 176, 186, 244, 245, 246, 247, 248, 251, 252, 253, 287, 294, 299, 321, 330, 348, 383, 385, 387, 388, 400, 408, 414, 466], "peak_height": [75, 114, 176, 392], "peak_posit": [75, 392], "peak_promin": [114, 176], "peak_width": [114, 176], "peakpropertywarn": [114, 176], "peakslist": 392, "pecuniari": 2, "pellegrino": 95, "pen": [54, 114, 228, 234, 235, 237, 392, 405, 414], "penal": [107, 114, 288, 292, 369], "penalti": 117, "pengbo": 95, "peopl": [6, 9], "pep": 9, "pep8": 4, "per": [6, 7, 9, 10, 24, 101, 114, 124, 128, 197, 201, 214, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 353, 360, 390, 405], "percent": [98, 99, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 161, 244, 253, 276, 390, 393], "percentag": [114, 120, 163, 286], "percet": 391, "perf": 6, "perfect": [36, 95, 408, 414], "perform": [2, 6, 10, 17, 18, 20, 21, 22, 24, 25, 26, 29, 32, 36, 42, 43, 63, 75, 77, 86, 95, 98, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 135, 136, 139, 144, 146, 148, 149, 150, 151, 158, 159, 165, 168, 170, 175, 178, 179, 180, 184, 186, 189, 190, 193, 209, 227, 228, 231, 235, 236, 237, 243, 244, 245, 246, 247, 248, 251, 252, 256, 257, 258, 259, 261, 262, 266, 267, 268, 270, 275, 277, 278, 279, 280, 281, 294, 297, 302, 327, 329, 330, 343, 344, 348, 350, 363, 364, 365, 385, 388, 389, 390, 393, 397, 399, 402, 405, 406, 407, 408, 409, 410, 463, 465, 467], "perhap": [36, 399, 400], "period": 2, "perman": [2, 90, 396, 405], "permut": [114, 362], "perpendicular": 405, "persist": 124, "person": [2, 9], "pertain": 5, "petal_length": 24, "petal_width": 24, "petr": 95, "petroff10": 405, "pfeiffer": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 438], "pfr": 428, "pgn": 397, "phase": [4, 75, 114, 121, 179, 180, 225, 226, 277, 278], "phc0": [75, 77, 114, 225, 226, 273, 274, 409], "phc1": [77, 114, 225, 273, 409], "phd": 92, "phi": [114, 266, 350, 407], "philipp": 95, "photoacoust": [114, 312], "photovolta": 397, "phsm": 397, "phy": 95, "physic": [2, 95, 124], "physico": [110, 111], "pi": [41, 114, 170, 183, 184, 188, 189, 190, 208, 258, 259, 260, 261, 262, 266, 350, 389, 401, 407], "pick": [73, 74, 83, 106, 114, 119, 321, 388], "piecewis": [36, 95, 98, 99, 114, 165, 244, 247, 253, 388], "pierr": 95, "pii": 95, "pin": 458, "pint": [43, 101, 114, 124, 130, 357, 417, 419, 444, 449, 452, 460], "pip": [6, 7, 89, 417, 419, 430, 443], "pipe": [114, 405], "pivot": [9, 114, 225, 226, 273, 274, 409], "pix": 95, "pixel": [114, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 405], "pk": [75, 76, 77, 114, 226, 274, 389, 392, 409], "pk_exp": 114, "pl": [28, 38, 83, 114, 122, 302, 383, 394, 400], "place": [2, 6, 7, 9, 54, 90, 97, 101, 114, 124, 143, 146, 201, 294, 328, 359, 360, 388], "plai": [396, 414], "plain": [9, 10, 124], "plainquant": [124, 130], "plainunit": [124, 130], "plane": 41, "plant": 92, "plasma": [95, 385], "plateau": [114, 176], "plateau_s": [114, 176, 392], "platform": [7, 11, 14, 84, 87, 93, 444], "pleas": [6, 7, 12, 83, 84, 92, 93, 400, 405], "plot": [3, 17, 18, 20, 22, 24, 25, 26, 29, 32, 33, 36, 40, 42, 43, 46, 47, 48, 49, 50, 51, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 85, 93, 98, 99, 100, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 165, 214, 215, 216, 217, 218, 219, 220, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 253, 302, 387, 388, 389, 390, 391, 393, 394, 400, 402, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 421, 442, 443, 452, 458, 459, 461, 465, 467], "plot1d": [114, 234], "plot2d": [421, 423, 458], "plot_1d": [114, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 411], "plot_2d": [114, 220, 227, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241], "plot_3d": [114, 227, 231, 232, 233, 235, 236, 237, 238, 239, 240], "plot_a_create_dataset": [44, 386], "plot_b_coordin": [44, 386], "plot_bar": [114, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240], "plot_bar_pen": [114, 236], "plot_baseline_correct": [37, 386], "plot_c_unit": [44, 386], "plot_denois": [69, 386], "plot_despik": [69, 386], "plot_efa": [27, 386], "plot_efa_keller_massart": [27, 386], "plot_fast_ica": [27, 386], "plot_filt": [72, 386], "plot_fit": [34, 386], "plot_generic_read": [52, 386], "plot_imag": [51, 114, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 405], "plot_iri": [27, 386], "plot_lstsq_single_equ": [34, 386], "plot_map": [20, 42, 50, 76, 114, 227, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 405, 406], "plot_mcrals_chrom1": [27, 386], "plot_mcrals_kinet": [27, 386], "plot_model": [114, 228, 231, 235, 236, 237], "plot_multipl": [53, 55, 60, 83, 114, 165, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 302, 393, 405, 414, 432, 465], "plot_nmf": [27, 386], "plot_pca_iri": [27, 386], "plot_pca_spec": [27, 386], "plot_pen": [33, 114, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 389, 392], "plot_pl": [30, 386], "plot_plot": [56, 386], "plot_plot_multipl": [56, 386], "plot_proc_em": [65, 386], "plot_proc_sp": [65, 386], "plot_processing_cp_nmr": [78, 386], "plot_processing_nmr": [78, 386], "plot_processing_nmr_relax": [78, 386], "plot_processing_raman": [81, 386], "plot_project": [59, 386], "plot_read_ir_from_omn": [52, 386], "plot_read_ir_from_opu": [52, 386], "plot_read_nmr_from_bruk": [52, 386], "plot_read_raman_from_labspec": [52, 386], "plot_read_renishaw": [52, 386], "plot_result": 80, "plot_scatt": [33, 58, 75, 76, 114, 227, 228, 234, 389, 392], "plot_scatter_pen": [114, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 240], "plot_simplisma": [27, 386], "plot_stack": [17, 41, 47, 114, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 405, 416], "plot_surfac": [114, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 390, 391, 405], "plot_waterfal": [114, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 405], "plot_with_pp": 76, "plotdistribut": [20, 91, 110], "plotlcurv": [20, 110], "plotli": [114, 228, 229, 231, 232, 233, 235, 236, 237, 238, 405], "plotmerit": [19, 20, 21, 22, 26, 32, 75, 76, 77, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 389, 391, 449], "plotnonfinit": 122, "plotter": [114, 227, 229, 230], "plottitl": [114, 228, 231, 235, 236, 237], "plsregress": [29, 387, 461], "plt": 33, "plu": 405, "pluggi": 7, "plugin": 7, "plural": 2, "plus_and_minus_sign": 405, "pl\u00e9del": 95, "pmid": 95, "png": 405, "pnnl": [113, 462], "po": [32, 76, 114, 145, 183, 208, 342, 349, 367, 389, 392, 397], "point": [5, 6, 9, 22, 23, 36, 75, 76, 80, 88, 89, 90, 91, 97, 101, 105, 113, 114, 120, 122, 135, 140, 143, 148, 159, 164, 175, 176, 179, 180, 184, 189, 190, 209, 212, 236, 243, 256, 259, 261, 262, 268, 275, 277, 278, 279, 280, 281, 287, 312, 327, 328, 329, 353, 366, 388, 389, 390, 392, 396, 400, 401, 405, 406, 409, 410, 413, 414, 461], "polar": 405, "polaraxes_grid": 405, "polici": 120, "polish": 8, "pollut": [95, 385], "polyfit": 388, "polynom": [98, 99, 242, 244, 253, 389], "polynomi": [36, 80, 91, 98, 99, 107, 114, 131, 132, 144, 149, 165, 186, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 288, 289, 291, 330, 333, 347, 348, 389, 393, 414], "polynomialbaselin": 389, "polyolefin": [95, 385], "ponant": 2, "pool": 97, "poor": [67, 408], "pop": 396, "popul": [114, 353, 366], "popular": [92, 390, 391], "port": [11, 87], "pose": 95, "poshb": [145, 183, 208, 342, 367], "posit": [9, 20, 23, 36, 75, 76, 80, 101, 107, 112, 113, 114, 118, 136, 140, 143, 153, 167, 174, 176, 179, 180, 224, 277, 278, 288, 289, 291, 295, 328, 333, 347, 389, 392, 397, 411], "positiveoddinteg": [107, 114, 288, 289, 291, 333, 347], "posix": 197, "posixpath": [46, 58, 396, 397, 404], "poslb": [145, 183, 208, 342, 367], "possess": 402, "possibl": [2, 4, 5, 6, 7, 9, 12, 24, 32, 33, 41, 84, 87, 98, 101, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 135, 182, 227, 243, 244, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 371, 373, 384, 388, 390, 391, 392, 395, 397, 402, 404, 405, 406, 408, 414, 430, 431, 447, 463, 467], "possibli": [2, 101, 114, 392], "post": [10, 14, 397, 400], "postdoc": 92, "poster": 405, "postprocess": 120, "postscript": 405, "potenti": [7, 87, 98, 99, 114, 144, 244, 245, 253], "pow": [64, 114, 263, 265, 266, 300, 346, 350, 402, 407], "powder": [95, 385], "power": [101, 114, 120, 122, 175, 193, 207, 268, 270, 272, 283, 298, 380, 390, 412], "power_iteration_norm": 120, "powershel": 87, "pp": [24, 75, 76, 77, 390, 391, 404, 407, 409], "ppm": [75, 76, 77, 96, 114, 175, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 268, 338, 409], "pr": [7, 10], "practic": [9, 95, 114, 353, 366, 397, 398], "pre": [4, 6, 13, 97, 101, 105, 111, 114, 178, 405], "preambl": [2, 405], "preced": [9, 389, 396], "preceed": 402, "precis": [97, 114, 353, 366, 392], "predefin": [98, 111, 244], "predict": [9, 29, 33, 75, 77, 112, 113, 118, 119, 120, 122, 383, 389, 394], "predmin": 383, "pref": [5, 20, 42, 43, 54, 68, 71, 75, 114, 304, 388, 389, 392, 393, 404, 405, 406, 408, 409, 410, 411, 414, 415, 416], "prefer": [4, 5, 6, 9, 17, 20, 21, 36, 42, 43, 46, 47, 49, 50, 54, 55, 63, 64, 68, 71, 75, 76, 77, 80, 88, 89, 90, 114, 124, 152, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 304, 306, 312, 370, 371, 388, 389, 392, 393, 396, 399, 400, 402, 404, 406, 408, 409, 410, 411, 414, 415, 416, 421, 447, 461], "preferebl": [101, 114, 140], "preferred_unit": 124, "prefix": [6, 9, 32, 76, 223, 384, 400], "preinstal": 87, "prepar": [13, 400], "prepend": 396, "preprocess": [17, 80, 93, 396, 407, 412], "prerequisit": [388, 392, 393, 397, 413], "presenc": [2, 50, 392, 402], "present": [6, 7, 9, 10, 21, 22, 75, 88, 89, 90, 101, 114, 120, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 384, 390, 391, 392, 397, 400, 405, 408, 411, 446, 447, 450], "preserv": 408, "press": [396, 401], "pressur": [20, 42, 91, 95, 110, 385], "pretermin": 388, "pretti": 392, "prevail": 2, "prevent": [92, 96, 405, 440], "preview": 6, "previou": [2, 9, 25, 42, 75, 76, 88, 90, 98, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 185, 244, 388, 389, 390, 392, 402, 405, 409, 414, 424, 440, 465], "previous": [6, 11, 20, 33, 68, 89, 100, 114, 229, 232, 233, 238, 326, 388, 390, 405, 408], "primer": 9, "princip": [2, 98, 99, 104, 105, 110, 113, 117, 120, 127, 128, 244, 253, 383, 387, 388], "principl": [2, 13, 92, 96, 114, 135, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243], "print": [6, 14, 20, 21, 22, 25, 26, 33, 41, 42, 43, 46, 48, 58, 75, 76, 77, 89, 91, 97, 101, 114, 119, 120, 123, 128, 197, 296, 324, 338, 341, 352, 357, 389, 390, 391, 392, 394, 395, 396, 397, 402, 404, 405, 406, 409, 410, 413, 414, 416], "print_hello_info": 129, "print_info": 58, "print_method": 404, "printabl": 396, "printev": [24, 120, 390, 391], "prior": [2, 391, 410], "prioriti": [114, 129, 135, 175, 243, 268, 331], "privat": [5, 7], "probabl": [6, 9, 75, 92, 388, 392, 396, 402, 405, 413], "probe": 95, "problem": [6, 11, 14, 24, 85, 87, 95, 97, 105, 112, 118, 388, 395, 396, 406, 408, 416, 425, 431, 434, 435, 437, 438, 450, 454, 455, 465], "problemat": 92, "proce": [88, 90], "procedur": [68, 92, 117, 389, 390, 396, 400, 408], "proceed": 2, "process": [0, 6, 7, 10, 11, 20, 21, 75, 76, 85, 86, 92, 98, 99, 100, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 163, 164, 309, 321, 350, 369, 386, 390, 395, 397, 400, 403, 405, 406, 407, 409, 415, 417, 419, 424, 434, 436, 437, 466, 467], "processing_funct": 401, "processor": [36, 71, 80, 98, 107, 114, 144, 149, 165, 186, 244, 245, 246, 247, 248, 251, 252, 288, 330, 348, 383, 387, 412, 465], "processs": 400, "procno": [75, 76, 77, 114, 321, 407, 409], "prod": 124, "produc": [5, 7, 24, 95, 114, 124, 291, 347, 385, 411, 458, 466], "product": [2, 6, 92, 97, 111, 114, 117, 124, 168, 297, 388, 391], "profession": 2, "profil": [18, 21, 22, 26, 88, 97, 104, 105, 113, 121, 383], "profit": 2, "program": [1, 2, 75, 91, 92, 93, 110, 383, 399, 400, 415, 461], "programm": 9, "programmat": 402, "progress": [101, 114, 185, 399, 428, 442], "proj": [58, 123, 197, 404], "proj2": 404, "project": [4, 6, 7, 9, 10, 14, 15, 85, 89, 92, 93, 105, 114, 115, 120, 129, 197, 205, 229, 232, 233, 238, 331, 332, 383, 391, 394, 396, 400, 405, 421, 427], "project_0a240f0": [], "project_0bc38746": [], "project_1": [58, 123], "project_4bf03404": [], "project_6313fdf8": [], "project_ae261644": [], "project_b74d0ba2": [], "project_c37cf90c": 404, "project_d2e926d0": [], "project_d5afa558": [], "project_e3012b52": [], "projects_nam": [58, 123], "promin": [75, 95, 114, 176, 385], "prompt": [88, 90], "prone": [102, 402], "prop_cycl": 405, "propag": [101, 114, 137, 138, 168, 210, 213, 297], "proper": [120, 390, 391], "properli": [2, 100, 114, 197, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 429, 463], "properti": [2, 14, 29, 75, 95, 101, 102, 108, 109, 114, 123, 125, 126, 176, 194, 214, 325, 383, 385, 387, 388, 390, 394, 400, 402, 421], "proport": [114, 161, 276, 389], "propos": [14, 84, 114, 164, 287, 388, 396], "proprietari": [92, 397], "propval": [29, 46, 394], "protect": 2, "protein": [29, 394], "protocol": [5, 114, 146, 153, 294, 295, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 352, 370, 371, 373, 383], "provid": [2, 9, 10, 85, 91, 92, 97, 98, 99, 101, 104, 105, 110, 111, 113, 114, 117, 119, 120, 122, 123, 127, 128, 135, 149, 171, 172, 176, 177, 178, 181, 182, 186, 197, 221, 222, 234, 243, 244, 246, 248, 253, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 343, 344, 353, 363, 364, 366, 370, 371, 373, 377, 378, 387, 390, 397, 400, 401, 402, 405, 414, 415, 467], "provis": 2, "ps_exp": [114, 225, 273], "pscp": [58, 114, 115, 123, 205, 404], "pseudo": [105, 114, 321, 467], "pssnf": 405, "pt": [114, 127, 159, 179, 180, 209, 275, 277, 278, 279, 280, 281, 327, 329], "pth": 407, "ptp": [23, 80, 101, 114], "public": [2, 5, 93, 400, 405, 454], "publicli": [6, 384], "publish": [0, 2, 114, 373, 428], "pull": [7, 8, 10, 12, 13, 14, 83, 89, 441], "puls": [75, 415], "pure": [21, 22, 26, 113, 114, 127, 266, 350, 383, 389, 407], "purest": 127, "puriti": 127, "purpl": 392, "purpos": [2, 6, 9, 24, 91, 92, 391, 397, 400, 402, 413], "pursuant": 2, "push": [7, 92], "put": [7, 197, 400, 405], "py": [6, 7, 8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 78, 79, 81, 83, 85, 90, 93, 96, 97, 98, 101, 102, 104, 105, 107, 110, 111, 112, 113, 114, 117, 119, 120, 122, 123, 124, 127, 129, 153, 163, 164, 165, 168, 170, 173, 175, 195, 197, 206, 225, 227, 234, 238, 244, 288, 300, 302, 309, 311, 312, 313, 321, 322, 323, 332, 337, 346, 348, 350, 386, 395, 404, 421, 443], "py3": 421, "py_wdf_read": 466, "pycharm": [6, 399], "pypep8": 404, "pypi": [88, 90], "pyplot": [33, 405], "pyqt": [85, 435], "pyrazol": [95, 385], "pyridin": 95, "python": [0, 1, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 68, 83, 84, 86, 87, 88, 89, 90, 91, 105, 113, 114, 119, 197, 223, 302, 306, 312, 313, 384, 395, 396, 397, 399, 400, 405, 413, 417, 419, 436, 444, 467], "python3": [395, 404, 405], "q": [20, 86, 91, 110, 111, 402], "qed": 397, "qin": 95, "qp": 467, "qpsolver": 110, "qquad": [114, 184, 189, 190, 259, 261, 262], "qr": 120, "qsin": [64, 114, 170, 184, 188, 258, 259, 260, 264, 265, 266, 267, 345, 346, 350, 365, 407], "qt": [405, 431, 432], "quadera": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 438], "quadprog": [110, 442, 467], "quadrat": [80, 98, 99, 114, 165, 244, 247, 253, 388, 389], "qualiti": [19, 36, 405, 461], "quant_list": 124, "quantit": 95, "quantiti": [97, 101, 114, 130, 147, 160, 170, 174, 176, 177, 188, 199, 201, 212, 221, 225, 226, 258, 260, 273, 274, 338, 353, 354, 357, 366, 378, 383, 392, 397, 416, 431, 436], "quaternion": [404, 411], "quatrat": 110, "question": [114, 166], "quick": [9, 91, 93, 400, 401], "quickli": [93, 383, 400], "quickstart": 402, "quit": [9, 10, 18, 83, 388, 396, 399], "quot": [9, 197], "quotat": 401, "r": [7, 19, 26, 33, 58, 63, 64, 68, 71, 75, 77, 80, 88, 90, 95, 112, 114, 118, 122, 152, 179, 180, 223, 277, 278, 280, 312, 327, 383, 388, 389, 394, 396, 397, 400, 404, 405, 407, 408, 409, 411, 414], "r1": [95, 388], "r2": 388, "rad": [402, 405], "radau": 97, "radian": [402, 412, 416], "rai": [66, 67, 73, 83, 95, 114, 164, 287, 302, 385], "raimundo": 95, "rais": [4, 7, 85, 101, 103, 114, 123, 124, 135, 136, 139, 147, 148, 150, 168, 170, 175, 176, 184, 189, 190, 193, 243, 256, 257, 258, 259, 261, 262, 267, 268, 270, 297, 351, 365, 402, 413], "rajk": 95, "raman": [45, 51, 54, 60, 66, 70, 81, 95, 98, 107, 114, 163, 164, 244, 288, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 337, 385, 386, 400, 414], "ramandata": [50, 51, 54, 67, 68, 71, 80, 114, 309, 408, 414, 421], "ramandir": [50, 80], "ramirez": 95, "ramo": 95, "rand": [389, 402, 413], "randint": 9, "random": [9, 18, 87, 101, 114, 117, 120, 357, 384, 389, 391, 402, 405, 413, 414], "random_lett": 9, "random_st": [105, 117, 120], "randomized_svd": 120, "randomli": 405, "randomst": [105, 117, 120], "rang": [9, 18, 20, 23, 36, 42, 54, 75, 91, 98, 99, 100, 101, 113, 114, 120, 122, 128, 144, 146, 149, 178, 186, 197, 203, 244, 245, 246, 248, 249, 253, 294, 299, 388, 389, 391, 392, 393, 397, 402, 405, 413, 421, 427], "rank": [101, 114, 177, 383], "rapid": 459, "rapid_scan_reprocess": [114, 320], "rare": [9, 92, 408], "rate": [22, 95, 97, 121], "rather": [6, 11, 88, 90, 384, 389, 405], "ratio": [32, 67, 76, 80, 114, 145, 163, 286, 367, 388, 389, 408], "raw": [92, 93, 223, 393, 396, 402], "rb": 5, "rc": [114, 214, 229, 232, 233, 238, 405], "rcount": 405, "rcparam": 122, "rdx": 397, "re": [26, 388, 397, 400, 409], "reach": [23, 36, 80, 97, 390, 392, 393], "reactant": [97, 111], "reaction": [22, 95, 97, 385], "reactiv": 121, "reactor": [97, 121], "read": [1, 2, 5, 9, 14, 19, 20, 21, 22, 29, 42, 43, 45, 54, 55, 60, 67, 68, 71, 75, 80, 83, 85, 91, 96, 100, 101, 102, 104, 114, 115, 116, 123, 128, 146, 147, 153, 160, 169, 176, 178, 205, 206, 212, 229, 230, 232, 233, 238, 239, 240, 294, 295, 296, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 343, 344, 352, 353, 354, 358, 363, 364, 366, 371, 388, 389, 390, 391, 392, 393, 394, 396, 397, 402, 404, 405, 407, 408, 409, 413, 414, 415, 425, 442, 461, 466, 467], "read_bruker_nmr": 421, "read_byt": [114, 312], "read_carroucel": [114, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 437], "read_csv": [9, 114, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 396, 397], "read_ddr": 114, "read_dir": [114, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 396, 442], "read_dso": 437, "read_fil": 397, "read_galact": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "read_hdr": 114, "read_jcamp": [114, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 396, 397], "read_labspec": [50, 71, 80, 114, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 396, 414, 442], "read_mat": 114, "read_matlab": [21, 26, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 390, 391, 396, 397], "read_omn": [17, 23, 25, 32, 36, 47, 55, 91, 100, 114, 115, 116, 123, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 393, 396, 397, 402, 406, 411, 413, 416, 450], "read_onli": [114, 302], "read_opu": [48, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 370, 396, 397, 452], "read_quadera": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 422, 438], "read_remot": 461, "read_sdr": 114, "read_soc": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324], "read_spa": [114, 312, 319, 410, 443], "read_spc": [5, 114], "read_spg": [114, 312], "read_sr": [114, 312, 319, 417, 419, 437, 443, 450, 460], "read_topspin": [49, 63, 64, 75, 76, 77, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 396, 402, 404, 407, 409, 415, 421, 467], "read_wdf": [51, 114, 466], "read_wir": [51, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 466], "read_xxx": 5, "read_zip": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 421], "readabl": [6, 95, 97, 114, 124, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 392, 396, 397, 442], "readeabl": 461, "reader": [8, 13, 51, 114, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 388, 396, 397, 414, 421, 428, 429, 440, 449, 466], "reader_xxx": 8, "readi": [6, 20, 405], "readonli": [101, 102, 108, 109, 114, 123, 125, 126, 194, 325, 405], "readquadera": 438, "readthedoc": 43, "real": [7, 63, 64, 76, 77, 101, 109, 114, 125, 126, 137, 143, 152, 154, 155, 210, 211, 228, 231, 235, 236, 237, 271, 272, 298, 328, 353, 366, 410, 411, 412, 466], "realign": 406, "realiz": [114, 164, 287, 399], "realli": [18, 400, 405], "reappli": 6, "reason": [2, 4, 6, 87, 92, 97, 391, 416], "rebuild": 87, "receiv": [75, 76, 389, 392], "recent": [7, 88, 101, 114, 357, 383, 404], "recherch": 2, "recogn": [114, 310, 311, 427], "recognis": 396, "recognit": 450, "recombin": 409, "recommend": [6, 9, 11, 84, 88, 90, 97, 101, 102, 114, 384, 396, 399, 400, 405], "recomput": [113, 390], "reconstrict": 19, "reconstruct": [21, 22, 26, 80, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 163, 191, 269, 286, 383, 390, 391, 459], "record": [20, 22, 23, 29, 42, 46, 51, 383, 397, 413], "recov": [98, 105, 244], "rectangl": 405, "rectilinear": 405, "recurs": [114, 302], "red": [7, 29, 33, 36, 54, 75, 76, 95, 385, 388, 389, 390, 391, 392, 394, 401, 405, 409, 410, 458], "redefin": 36, "redistribut": 2, "redraw": [75, 76, 389, 392], "reduc": [7, 24, 63, 64, 95, 98, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 124, 127, 128, 136, 137, 138, 139, 167, 176, 199, 200, 201, 210, 212, 213, 244, 299, 353, 354, 357, 360, 366, 383, 392, 405, 429, 459], "reduced_unit": [101, 114, 357], "reduct": [24, 25, 26, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 136, 139, 164, 287, 388, 391, 392], "redunc": [101, 114, 200], "ref": [7, 18, 114, 146, 294], "refactor": [421, 440, 443, 455, 459, 463, 465], "refer": [2, 6, 9, 10, 12, 32, 76, 87, 89, 98, 101, 102, 114, 135, 136, 144, 146, 149, 165, 174, 186, 243, 244, 245, 246, 247, 248, 251, 252, 294, 330, 348, 383, 388, 389, 392, 397, 400, 401, 402, 405, 406, 414, 441, 454], "referenc": 9, "reference_numb": 401, "reflect": [6, 7, 29, 107, 114, 288, 289, 291, 312, 333, 347, 454], "reform": [95, 385], "reg": 392, "reg_par": [20, 91, 110], "regard": [2, 6, 9, 439], "regex": 404, "regex_matching_test_nam": 7, "region": [25, 32, 36, 54, 67, 68, 76, 77, 80, 91, 98, 99, 100, 101, 114, 149, 186, 244, 246, 248, 253, 383, 388, 389, 392, 393, 405, 406, 408, 410, 411, 413, 414, 416, 427], "regist": [6, 14, 122, 197], "registri": [43, 77, 402], "regress": [28, 33, 36, 38, 83, 95, 112, 114, 118, 122, 302, 383, 385, 387, 389, 461], "regroup": 383, "regular": [98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288, 292, 369, 383, 405], "regularis": [36, 95], "regularli": [101, 448], "reindex": [114, 135, 243], "reinit": 55, "reject": 392, "rejman": [95, 385], "rel": [91, 97, 114, 120, 135, 243, 302, 312, 313, 314, 338, 370, 390, 392, 397, 398, 405], "rel_height": [114, 176, 392], "relat": [2, 5, 9, 101, 114, 357, 383, 397, 405, 417, 419, 431, 455, 460, 464], "relationship": 413, "relax": [73, 74, 75, 83, 114, 119, 321, 467], "releas": [6, 7, 10, 395, 396, 397, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "release_d": 395, "relev": [2, 5, 6, 9, 10, 75, 113, 120, 383], "reli": [7, 92, 390], "reliabl": [14, 92], "reload": 58, "reltim": 22, "rem": 90, "remain": [2, 7, 10, 22, 29, 101, 114, 143, 165, 176, 247, 328, 383, 391, 394, 407], "remaind": 411, "rememb": [6, 17, 25, 388, 402], "remot": [2, 6, 89], "remov": [1, 2, 7, 9, 26, 36, 54, 66, 67, 73, 75, 76, 77, 80, 83, 91, 95, 97, 98, 99, 104, 105, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 127, 128, 131, 132, 144, 149, 164, 165, 176, 186, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 287, 288, 302, 326, 330, 348, 351, 385, 388, 389, 392, 393, 403, 405, 406, 411, 414, 421, 443, 458, 461, 463, 465], "remove_all_dataset": 123, "remove_all_project": 123, "remove_dataset": [123, 404], "remove_digital_filt": [49, 63, 64, 402, 404, 407], "remove_limit": [98, 99, 244, 253], "remove_mask": [114, 416], "remove_project": 123, "renam": [97, 399, 465], "render": [9, 401, 405], "renishaw": [45, 60, 83, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 466], "reopen": 86, "reorder": 397, "reorgan": 93, "repeat": [9, 68, 107, 114, 288, 289, 291, 333, 347, 408, 414], "repeatedli": [98, 104, 105, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244], "repetit": [7, 402], "rephas": 409, "replac": [2, 6, 25, 42, 87, 88, 89, 90, 96, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 131, 132, 151, 164, 176, 244, 253, 254, 255, 287, 288, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 343, 364, 384, 401, 402, 403, 405, 428, 431, 450, 454, 461, 463], "replace_exist": [114, 302], "replace_whitespac": 404, "repo": 5, "report": [6, 7, 92, 93, 95, 119, 390, 397, 441], "repositori": [5, 7, 11, 15, 86, 87, 88, 90, 447, 461], "repres": [2, 9, 33, 75, 91, 101, 114, 353, 366, 383, 384, 389, 396, 409], "represent": [9, 36, 124], "reproduc": [2, 14, 92, 105, 117, 120, 399], "reproduct": 2, "request": [0, 4, 7, 8, 10, 12, 13, 14, 83, 114, 291, 347, 397, 405, 441], "requir": [2, 6, 7, 9, 11, 24, 68, 80, 84, 85, 86, 87, 88, 90, 92, 113, 114, 120, 124, 171, 176, 344, 388, 390, 392, 396, 400, 406, 408, 412, 421, 444], "rescal": [101, 105, 114, 124, 199, 200, 201, 296, 352, 357, 359, 360], "research": [2, 92, 95], "reserv": [2, 214, 384, 405], "reset": [32, 98, 99, 100, 104, 105, 107, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288, 391, 395, 402, 405, 406], "reshap": [114, 222, 378, 411], "residu": [20, 21, 22, 104, 105, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 383, 390, 391, 394, 411], "resist": [95, 385], "resitua": 391, "resiz": [101, 114, 178], "resolut": [21, 80, 95, 97, 104, 113, 114, 229, 230, 232, 233, 238, 239, 240, 383, 385, 390, 391], "resolv": [6, 113, 383, 390], "resourc": [6, 92], "respect": [2, 6, 84, 110, 111, 113, 114, 120, 128, 184, 259, 383, 390, 391, 394, 396, 397, 402, 404, 405, 413], "respons": [2, 92, 122], "rest": [9, 10, 84, 395], "restart": [6, 15, 87, 396], "restor": 405, "restrict": [2, 114, 394, 401], "restructuredtext": [9, 10], "result": [2, 7, 9, 17, 20, 22, 24, 25, 32, 33, 36, 68, 71, 75, 76, 77, 80, 88, 92, 97, 101, 105, 114, 117, 119, 120, 136, 137, 138, 139, 143, 164, 166, 172, 176, 177, 182, 198, 210, 212, 213, 222, 287, 299, 301, 328, 344, 353, 354, 366, 378, 388, 389, 390, 391, 393, 396, 400, 402, 406, 408, 409, 410, 411, 414, 416], "retain": 383, "retapod": [63, 64, 114, 148, 150, 170, 184, 188, 189, 190, 256, 257, 258, 259, 260, 261, 262, 266, 267, 350, 365, 407], "retriev": [98, 99, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128, 244, 253, 396, 402], "retstep": [101, 114, 202], "return": [5, 6, 10, 21, 33, 75, 77, 89, 96, 97, 98, 99, 101, 102, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 197, 198, 202, 203, 204, 206, 207, 209, 210, 212, 213, 221, 222, 223, 224, 225, 226, 227, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 332, 333, 335, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 373, 377, 378, 379, 380, 381, 382, 389, 390, 391, 392, 394, 396, 397, 400, 401, 402, 404, 405, 412, 413, 416, 421, 428], "return_bg": [114, 320], "return_coef": [114, 146, 294], "return_error": 101, "return_ifg": [114, 305, 307, 315, 316], "return_meta": 97, "return_nddataset": [22, 97], "reus": [76, 92, 98, 104, 105, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244, 390], "rev": [114, 148, 150, 170, 184, 188, 189, 190, 256, 257, 258, 259, 260, 261, 262, 266, 267, 350, 365], "reverdi": 95, "revers": [96, 101, 104, 105, 110, 113, 114, 117, 120, 127, 128, 148, 150, 170, 175, 184, 188, 189, 190, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 349, 350, 362, 365, 397], "review": [10, 387, 401], "revis": [12, 418], "revisit": [421, 434], "reward": 6, "rewrit": 421, "rez": 95, "rf": 397, "rgb": [9, 122], "rgba": 122, "ri": [76, 114, 154, 155, 404, 411], "ric": 95, "rich": 20, "rid": 6, "rieg": 95, "rieger": [95, 385], "right": [2, 14, 29, 75, 87, 97, 113, 114, 120, 168, 179, 180, 184, 209, 214, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 259, 277, 278, 279, 281, 297, 329, 383, 390, 392, 394, 397, 404, 405, 409], "right_bas": [75, 114, 176, 392], "right_edg": [114, 176], "right_ip": [75, 114, 176, 392], "right_threshold": [114, 176], "rigid": 36, "rigueiro": 95, "rint": [101, 114, 143, 328], "rir": [114, 152], "risk": [2, 92, 384, 400], "rita": 95, "rk23": 97, "rk45": 97, "roach": [95, 104], "robert": 95, "robust": [114, 147, 467], "rocio": 95, "rocquencourt": 2, "roi": [101, 114, 421], "rojo": 95, "role": [388, 396, 414], "roll": [114, 159, 179, 180, 209, 275, 277, 278, 279, 281, 329], "rom": 95, "roman": 405, "ronald": 24, "root": [6, 7, 114, 120, 124, 353, 396, 411], "rootdir": 7, "rossi": [95, 385], "rotat": [54, 75, 76, 392, 405, 442], "roughli": [22, 389], "round": [10, 71, 101, 114, 140, 143, 176, 405, 411, 414, 463], "round4": 392, "round_": [101, 114], "round_numb": 405, "rounded_arrai": [101, 114, 143, 328], "routin": 434, "row": [9, 21, 42, 76, 98, 99, 102, 107, 114, 122, 146, 168, 174, 192, 214, 244, 253, 288, 294, 297, 335, 349, 390, 391, 392, 393, 397, 405, 408, 411], "row10": 42, "rr": [76, 114, 154, 155, 404, 411], "rri": [114, 152], "rrr": [114, 152], "rsc": 95, "rse": [21, 22, 390], "rsquar": 33, "rst": [114, 292, 369, 454], "rt": [20, 402], "rtol": 97, "rubberband": [98, 99, 114, 144, 149, 165, 186, 244, 245, 246, 247, 248, 252, 253, 348, 465], "ruberband": 388, "rudiment": 399, "rue": 2, "rule": [2, 114, 160, 306, 343, 344, 354, 363, 364, 393, 395, 397, 421], "run": [2, 4, 6, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 75, 76, 77, 80, 86, 87, 88, 89, 90, 93, 97, 98, 99, 100, 105, 114, 119, 120, 144, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 245, 253, 387, 388, 390, 395, 396, 399, 400, 401, 461], "run_script": [58, 129], "rune": 86, "rung": 97, "runner": [20, 24, 25, 46, 58, 75, 76, 77, 91, 390, 391, 393, 395, 396, 397, 400, 402, 404, 405, 407, 409, 411, 413, 416], "runtim": [87, 458], "runtimewarn": [410, 411], "ryan": [95, 98, 114, 244, 252, 348], "r\u00e9sultat": [20, 42, 397, 413], "s0": [397, 402], "s0003": 95, "s0003267000852484": 95, "s0003267024001132": 95, "s0021951720300865": 95, "s0021951721000798": 95, "s0169": 95, "s0169743904002874": 95, "s0169743914002111": 95, "s0169743918301758": 95, "s0169743996000615": 95, "s0926337320311164": 95, "s1": [55, 76, 402, 405], "s10": [55, 405], "s10858": 1, "s2": [76, 402], "s20": [55, 405], "s3": 76, "s4": 76, "s41467": [95, 385], "s4p": 76, "s50": [55, 405], "s53": [55, 405], "s_0": 390, "s_1": 391, "s_copi": 396, "s_soft": 113, "s_x": [383, 394], "s_y": [383, 394], "sa": 76, "sabina": 95, "sadovnik": [95, 385], "safe": [2, 6], "safer": 402, "safeti": 92, "sai": [101, 114, 335, 349, 351, 355, 357, 362, 389], "said": [2, 88], "saito": 117, "sake": [75, 405, 406], "same": [2, 4, 5, 9, 20, 21, 22, 24, 29, 33, 42, 46, 53, 58, 60, 76, 80, 83, 97, 98, 99, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 135, 144, 147, 153, 154, 155, 158, 160, 165, 172, 182, 199, 212, 222, 234, 243, 244, 245, 253, 266, 295, 302, 303, 335, 350, 353, 354, 366, 378, 388, 389, 390, 393, 396, 397, 400, 402, 407, 409, 410, 411, 413, 414, 416], "samevalu": 117, "samira": 95, "sampl": [8, 9, 24, 29, 55, 58, 71, 101, 107, 112, 114, 118, 120, 122, 135, 176, 185, 202, 207, 243, 288, 289, 301, 303, 305, 307, 315, 316, 333, 344, 388, 392, 394, 397, 405, 414, 443], "sample_valu": 9, "sample_weight": [112, 118, 122], "san": [55, 405], "sand": 405, "sandov": 95, "sanjai": 95, "sansmath": 405, "satisfi": [92, 114, 176], "satur": [23, 25, 388, 405, 411, 416], "save": [6, 58, 87, 88, 90, 98, 100, 104, 105, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 127, 128, 205, 228, 231, 235, 236, 237, 244, 302, 370, 371, 373, 397, 402, 403, 405, 444], "save_a": [114, 115, 123, 404], "save_dialog": 432, "savec": 87, "savefig": [114, 229, 230, 232, 233, 238, 239, 240, 405], "savefig_bbox": 405, "savefig_directori": 405, "savefig_dpi": 405, "savefig_edgecolor": 405, "savefig_facecolor": 405, "savefig_format": 405, "savefig_jpeg_qu": 405, "savefig_pad_inch": 405, "savefig_transpar": 405, "savez": [114, 116, 123], "savgol": [71, 107, 114, 288, 290, 291, 292, 334, 347, 369, 408, 412, 465], "savgol_filt": [107, 114, 288, 289, 291, 292, 333, 347, 369, 414, 465], "savitki": [70, 73, 83, 107, 114, 288, 302], "savitski": [68, 414], "savitzki": [71, 107, 114, 288, 289, 290, 291, 292, 333, 334, 347, 369, 412], "sazama": 95, "sb": 76, "sbb": [114, 266, 350, 407], "sc": 76, "scalar": [7, 101, 114, 122, 137, 138, 151, 181, 182, 210, 213, 229, 230, 232, 233, 238, 239, 240, 388, 405, 410, 411], "scale": [97, 101, 110, 113, 114, 117, 120, 122, 124, 175, 185, 199, 201, 207, 242, 268, 291, 347, 360, 394, 405, 410, 414, 436, 438, 439], "scale_dash": 405, "scan": 51, "scatter": [32, 55, 58, 75, 77, 114, 120, 122, 214, 218, 227, 228, 231, 234, 235, 236, 237, 389, 392, 393, 405], "scatter_mark": 405, "scatter_pen": [114, 237], "scenario": 6, "scheme": 92, "schoolbook": 405, "schuh": [95, 385], "sci": 95, "scienc": 95, "sciencedirect": 95, "scientif": [2, 14, 84, 114, 318, 397, 405], "scientifiqu": 2, "scientist": 92, "scikit": [24, 105, 114, 206, 391, 394], "scikitlearn": 467, "scinot": 95, "scipi": [9, 84, 90, 92, 98, 99, 107, 114, 119, 120, 121, 176, 244, 253, 288, 289, 291, 333, 347, 388, 392, 414, 467], "scope": 2, "scopic": 93, "score": [17, 24, 25, 33, 112, 118, 120, 122, 383, 388, 389, 390, 391, 394, 458], "scoreplot": [24, 25, 120, 391], "scp": [5, 6, 7, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 89, 91, 97, 100, 101, 104, 114, 115, 116, 123, 128, 129, 140, 146, 147, 153, 158, 160, 167, 171, 174, 176, 177, 178, 181, 182, 192, 198, 205, 212, 221, 222, 227, 294, 295, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 343, 344, 352, 353, 354, 357, 358, 363, 364, 366, 370, 371, 373, 377, 378, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 421, 450, 453, 459, 461], "scp_config_hom": 96, "scp_data": [396, 405], "scpy": [11, 15, 19, 87, 88, 89, 90, 97, 114, 176, 228, 231, 235, 236, 237, 289, 333, 343, 344, 363, 364, 390, 391, 392, 394, 396, 397, 405], "scpy3": 6, "scpy_doc": [395, 404, 405], "scratch": [41, 58, 402], "scree": [120, 391], "screeplot": [24, 25, 120, 390, 391], "scrf": 397, "script": [6, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 75, 76, 77, 83, 86, 90, 92, 119, 123, 145, 183, 197, 208, 242, 331, 332, 342, 367, 395, 396, 399, 405, 417, 419, 467], "script_sourc": 58, "script_source_2": 58, "scripts_nam": 123, "scriptsactiv": 90, "scsm": 397, "sdr": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "se": [114, 353], "seaborn": [3, 405], "seamlessli": [6, 20, 42], "search": [5, 14, 110, 114, 176, 197, 389, 392, 398, 428], "sebastian": 95, "second": [5, 9, 20, 22, 24, 42, 43, 46, 54, 95, 96, 101, 102, 113, 114, 124, 164, 176, 198, 220, 241, 287, 303, 314, 355, 357, 378, 383, 384, 390, 391, 392, 396, 397, 400, 402, 404, 405, 408, 409, 411, 413], "secondli": 2, "sect": 416, "section": [5, 6, 10, 12, 41, 75, 93, 95, 110, 400, 401, 402, 405], "section_id": 401, "secur": [2, 87], "see": [4, 5, 6, 7, 10, 11, 12, 14, 51, 54, 67, 68, 80, 85, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 127, 128, 147, 148, 149, 150, 153, 163, 166, 171, 172, 175, 176, 181, 182, 184, 186, 189, 190, 193, 197, 205, 207, 221, 222, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 246, 248, 252, 253, 256, 257, 259, 261, 262, 266, 267, 268, 270, 286, 288, 289, 291, 292, 295, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 343, 344, 347, 348, 350, 353, 363, 364, 365, 366, 369, 370, 373, 377, 378, 383, 384, 388, 389, 390, 391, 392, 393, 395, 396, 397, 401, 402, 405, 407, 409, 410, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "seed": [9, 101, 114, 357], "seek": 2, "seem": [17, 36, 58, 97, 396], "seen": [25, 67, 390, 395, 402, 411], "segment": [98, 99, 114, 165, 244, 247, 253], "seitsonen": 95, "select": [6, 15, 20, 29, 32, 36, 42, 54, 67, 68, 75, 76, 80, 87, 90, 95, 98, 99, 101, 102, 104, 105, 106, 107, 110, 113, 114, 117, 119, 120, 122, 127, 128, 137, 138, 147, 152, 163, 169, 176, 210, 213, 244, 253, 286, 288, 289, 291, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 333, 347, 351, 370, 371, 373, 385, 388, 389, 392, 393, 394, 396, 397, 408, 411, 413, 414, 426, 444], "self": [7, 9, 95, 97, 98, 99, 100, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 127, 128, 130, 197, 224, 244, 253, 288, 392, 397, 404], "send": [6, 105], "sens": [9, 10, 92, 114, 165, 247, 388, 416], "sensit": [92, 95], "sensor": [95, 385], "sent": [2, 6], "sentenc": 9, "sepal": 24, "sepal_length": 24, "separ": [2, 6, 9, 54, 85, 87, 97, 98, 99, 101, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 143, 165, 223, 244, 247, 253, 328, 383, 392, 396, 405, 413, 417, 419, 422], "seq": 124, "seq_i": 124, "sequenc": [9, 98, 99, 101, 102, 114, 122, 124, 176, 181, 185, 202, 207, 221, 244, 253, 362, 377, 388, 392, 397, 402], "sequenti": [36, 98, 99, 113, 120, 244, 253, 388, 408, 424], "ser": 77, "sergei": 95, "seri": [9, 51, 68, 75, 91, 100, 101, 114, 120, 121, 123, 223, 234, 296, 309, 312, 319, 320, 322, 323, 352, 388, 393, 408, 467], "serial": [105, 113, 468], "serialis": 421, "serie190214": [50, 54, 67, 68, 408], "serif": 405, "serr": 95, "serra": 95, "serv": 9, "server": [2, 9, 11, 46, 86, 87], "servic": 2, "session": [7, 9, 87, 88, 90], "set": [2, 5, 6, 7, 9, 18, 19, 21, 23, 29, 32, 46, 54, 75, 76, 80, 87, 92, 96, 97, 98, 101, 102, 105, 110, 112, 113, 114, 117, 118, 119, 120, 123, 136, 137, 138, 139, 146, 163, 164, 168, 169, 171, 172, 176, 181, 182, 192, 202, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 286, 287, 294, 297, 299, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 335, 338, 353, 354, 366, 370, 371, 377, 378, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 405, 408, 410, 411, 413, 414, 416, 417, 419, 421, 424, 431, 442, 445, 463, 467], "set_bad": 122, "set_color": 405, "set_complex": [114, 154, 155, 411], "set_coord": 114, "set_coordset": [19, 26, 114, 390, 403], "set_coordtitl": [114, 390], "set_coordunit": 114, "set_fonts": 405, "set_fontstyl": 405, "set_hypercomplex": [114, 411], "set_laser_frequ": [101, 410], "set_log_level": [98, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 244, 288, 289, 291, 292, 333, 347, 369], "set_loglevel": [58, 67, 129, 395, 459], "set_quaternion": [114, 335, 336, 411], "set_titl": [71, 102, 405], "set_unit": 102, "set_xlim": [75, 392, 410, 414], "set_xscal": 421, "set_ylim": [75, 388, 392, 410], "set_ytick": 23, "setosa": 24, "sever": [6, 7, 9, 42, 53, 60, 75, 80, 83, 86, 97, 98, 101, 113, 114, 120, 123, 164, 165, 176, 234, 244, 287, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 390, 397, 400, 403, 404, 407, 411, 412, 413, 414, 426, 428, 436, 461, 467], "sg": 71, "sh": [11, 87], "shadow": 405, "shall": 2, "shape": [5, 7, 20, 21, 23, 24, 25, 26, 32, 41, 46, 48, 49, 75, 76, 77, 91, 97, 98, 99, 101, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 146, 147, 151, 153, 160, 167, 171, 172, 174, 176, 177, 181, 182, 192, 212, 221, 222, 244, 253, 288, 289, 291, 292, 294, 295, 296, 301, 302, 303, 304, 310, 311, 312, 313, 314, 317, 318, 319, 320, 324, 333, 347, 351, 352, 353, 354, 357, 366, 369, 377, 378, 389, 390, 391, 392, 393, 394, 396, 397, 402, 404, 406, 411, 413, 414, 415, 416], "share": [87, 92, 114, 135, 214, 243, 397, 403], "sharei": [214, 406], "sharex": [214, 388, 406], "sharez": 214, "sharp": 20, "shashik": 95, "shell": 88, "shift": [54, 63, 64, 114, 159, 165, 170, 179, 180, 188, 209, 228, 231, 234, 235, 236, 237, 247, 258, 260, 312, 327, 329, 388, 391, 392, 397, 399, 409, 414], "ship": [6, 11, 87, 89], "shlex": 197, "short": [7, 14, 25, 77, 86, 91, 124, 402, 411], "shortag": 6, "shortcut": [90, 407], "shorter": [114, 175, 193, 268, 270, 388], "shorthand": [114, 122, 133, 134], "should": [2, 5, 6, 7, 9, 11, 14, 15, 32, 55, 67, 76, 88, 89, 90, 92, 93, 96, 97, 98, 99, 100, 101, 105, 110, 113, 114, 121, 122, 129, 144, 154, 155, 164, 171, 176, 223, 228, 229, 231, 232, 233, 235, 236, 237, 238, 244, 245, 253, 287, 314, 384, 389, 390, 391, 392, 396, 399, 400, 405, 413, 414, 424, 454], "shoulder": 392, "show": [9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 75, 76, 77, 80, 88, 101, 104, 106, 114, 120, 164, 228, 231, 235, 236, 237, 287, 388, 389, 391, 392, 393, 394, 396, 397, 400, 405, 407, 409, 413, 414, 415, 416, 428, 467], "show_complex": [114, 228, 231, 235, 236, 237, 409, 411, 415], "show_datapoint": [101, 410], "show_label": [25, 120, 391], "show_mask": [114, 228, 231, 235, 236, 237, 411], "show_project": 405, "show_projection_i": 405, "show_projection_x": 405, "show_region": [36, 388], "show_vers": [417, 419, 441, 451], "show_yaxi": 75, "show_z": [114, 228, 231, 235, 236, 237], "show_zero": [114, 228, 231, 235, 236, 237], "shown": [9, 120, 223, 242, 388, 392, 395, 396, 397, 414], "shrinkb": 405, "shuffl": 117, "si": [75, 114, 175, 193, 268, 270, 409], "si_200mu": 50, "siam": 95, "side": [86, 97, 100, 214, 401, 405], "sidebar": 399, "sie": 95, "sigdigit": [101, 463], "sigma": [120, 128, 183, 383, 389], "sigma_1": 383, "sigma_i": 383, "sigmoid": 342, "sign": [2, 14, 114, 179, 180, 277, 278, 399, 401], "signal": [63, 64, 67, 98, 99, 107, 114, 120, 176, 244, 253, 288, 289, 291, 333, 347, 383, 388, 392, 407, 408, 414], "signatur": [7, 9, 106, 404], "signif": 402, "signific": [2, 18, 76, 101, 390, 391, 405, 408, 463], "significantli": [7, 117, 392], "sigular": 383, "silent": 397, "silk": [95, 385], "silver": [95, 385], "similar": [9, 33, 84, 86, 101, 114, 185, 197, 207, 388, 391, 392, 394, 397, 405], "similarli": [2, 214, 396, 413, 414], "simkovi\u010dov\u00e1": 95, "simon": 95, "simp": [114, 344, 438], "simpl": [6, 9, 26, 32, 33, 75, 77, 87, 89, 95, 97, 98, 99, 104, 105, 110, 113, 114, 117, 120, 127, 128, 144, 149, 165, 176, 186, 244, 245, 246, 247, 248, 251, 252, 253, 330, 348, 388, 389, 399, 400, 402, 405, 413, 414, 415, 467], "simpler": [43, 58, 388, 396], "simplest": [42, 414], "simplex": 119, "simpli": [6, 9, 86, 388, 399, 405, 408, 414, 416], "simplic": [5, 9, 401], "simplif": 405, "simplifi": [6, 88, 384, 400, 405, 414, 421], "simplisma": [16, 38, 83, 95, 104, 105, 110, 113, 114, 117, 120, 128, 311, 390, 421, 449], "simpson": [75, 77, 114, 343, 363, 364, 393, 421], "simul": 388, "simultan": [6, 102, 114, 228, 413], "sin": [41, 114, 266, 350, 407], "sinc": [6, 22, 33, 92, 397, 402], "sine": [62, 73, 83, 114, 170, 184, 188, 258, 259, 260, 263, 265, 266, 267, 300, 321, 346, 350, 365, 411], "singl": [5, 9, 10, 18, 21, 32, 33, 42, 51, 58, 75, 76, 80, 93, 98, 99, 101, 102, 107, 110, 114, 122, 123, 137, 138, 139, 147, 169, 210, 213, 244, 253, 288, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 351, 383, 388, 389, 392, 397, 401, 403, 404, 405, 410, 421, 430, 458], "single_spectrum": [114, 371], "singlehplc": [390, 391], "singleton": 114, "singular": [2, 98, 104, 105, 110, 113, 117, 120, 122, 127, 128, 244, 383], "singular_valu": 128, "sinm": [64, 114, 170, 184, 188, 258, 259, 260, 263, 264, 266, 267, 300, 345, 350, 365, 407], "sirotin": 95, "sisetup": 405, "site": [92, 95, 385, 395, 401, 404, 405], "situ": [95, 385], "situat": 410, "siunitx": 405, "size": [7, 20, 24, 25, 33, 41, 42, 43, 46, 58, 68, 71, 75, 76, 77, 87, 91, 101, 102, 105, 107, 113, 114, 122, 136, 137, 138, 139, 140, 146, 147, 158, 160, 164, 167, 175, 176, 177, 178, 181, 182, 185, 193, 196, 198, 202, 207, 210, 212, 213, 221, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 268, 270, 282, 284, 285, 287, 288, 289, 291, 293, 294, 299, 301, 333, 343, 344, 347, 353, 354, 363, 364, 366, 377, 379, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 416, 446], "sizeff": [114, 175, 268], "skip": [4, 7, 9, 88, 90, 430], "sklearn": [19, 105, 112, 117, 118, 120, 122, 459], "slash": [87, 396], "sleep": 421, "slice": [17, 25, 36, 41, 73, 74, 76, 83, 100, 114, 119, 321, 384, 389, 392, 393, 400, 402, 403, 405, 412, 414, 416, 431, 458, 466], "slightli": [7, 97, 394, 405, 463], "slow": [6, 80, 88, 89, 90, 421, 425], "slower": 117, "sma": 26, "small": [9, 75, 76, 92, 117, 388, 389, 392, 405], "smaller": [97, 98, 99, 114, 144, 151, 175, 176, 244, 245, 253, 266, 268, 350, 392, 405, 407, 411, 414], "smallest": 120, "smc1": [50, 71, 80, 414], "smild": 95, "smooth": [36, 68, 70, 73, 83, 93, 95, 98, 99, 107, 113, 114, 144, 149, 165, 176, 186, 244, 245, 246, 247, 248, 251, 252, 253, 288, 289, 292, 302, 330, 333, 348, 369, 383, 388, 412, 465], "smoother": [36, 71, 80, 95, 107, 114, 288, 289, 291, 292, 333, 347, 369, 383, 414], "snap": 405, "snip": [36, 68, 75, 76, 80, 95, 98, 99, 114, 144, 149, 165, 186, 244, 245, 246, 247, 248, 251, 253, 330, 388, 408, 465], "snip_width": [36, 75, 76, 80, 98, 99, 114, 244, 252, 253, 348, 388], "snippet": [9, 14], "so": [2, 4, 6, 7, 9, 10, 18, 21, 22, 25, 68, 80, 84, 87, 88, 90, 92, 97, 101, 113, 114, 120, 202, 302, 353, 357, 366, 383, 388, 390, 391, 392, 395, 396, 397, 400, 401, 402, 405, 408, 409, 410, 411, 414, 416, 424], "soft": [22, 113, 383, 390, 405, 428], "softwar": [0, 1, 2, 6, 14, 89, 91, 93, 114, 266, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 350, 397, 407, 466], "sol": 97, "solarize_light2": 405, "sole": [2, 92], "solid": [54, 95, 114, 228, 235, 237, 385, 405, 410], "solid_capstyl": 405, "solid_joinstyl": 405, "solut": [2, 32, 33, 96, 97, 389], "solv": [6, 20, 31, 38, 83, 88, 90, 92, 97, 101, 110, 112, 113, 114, 387, 425, 435], "solve_ivp": 97, "solver": [97, 104, 105, 110, 113, 117, 120, 127, 128, 462, 467], "solverconc": 113, "solverspec": 113, "som": [32, 76, 77, 389], "somaiyeh": 95, "some": [6, 7, 9, 10, 18, 22, 23, 25, 26, 32, 33, 36, 43, 54, 76, 84, 85, 87, 89, 91, 92, 97, 101, 102, 114, 115, 116, 120, 123, 140, 176, 304, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 402, 404, 405, 406, 409, 410, 411, 414, 415, 416, 421, 424, 430, 434, 456, 458, 464], "some_unit": 397, "someon": [10, 402], "someth": [6, 9, 10, 15, 395, 396, 400, 411, 416, 421], "sometim": [9, 68, 92, 114, 120, 304, 401, 402, 408, 429, 466], "somewhat": [6, 89], "son": 397, "sore": 120, "sort": [46, 91, 114, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 393, 397, 402, 403, 413, 416, 467], "sortbyd": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 397], "sourc": [1, 2, 5, 6, 84, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 402], "sourcetre": 6, "soustract": [20, 42, 397, 413], "sp": [51, 64, 114, 170, 184, 188, 258, 259, 260, 263, 264, 265, 267, 300, 345, 346, 365, 407, 409], "spa": [25, 46, 91, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 393, 396, 398, 410, 416, 429], "space": [2, 9, 26, 84, 101, 104, 105, 107, 110, 113, 114, 117, 119, 120, 122, 127, 128, 140, 185, 202, 207, 214, 288, 289, 333, 383, 392, 394, 397, 401, 404, 405, 413, 463, 466], "span": [120, 383, 391, 394], "spars": [9, 114, 117, 120, 292, 369], "sparsiti": 117, "spc": [5, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 440], "speak": [80, 400], "spec": [18, 397, 405, 409, 415], "spec2": [409, 415], "spec3": 409, "speci": [24, 75, 95, 97, 113, 383, 385], "special": [95, 114, 184, 259, 388, 401, 404, 405], "specialis": 405, "speciat": 95, "species_concentr": [22, 97], "specif": [2, 5, 6, 7, 9, 13, 21, 80, 85, 88, 90, 92, 102, 114, 152, 175, 197, 228, 229, 231, 232, 233, 235, 236, 237, 238, 268, 384, 388, 391, 394, 396, 397, 405, 411, 414], "specifi": [2, 5, 9, 24, 51, 54, 87, 98, 99, 101, 104, 105, 107, 110, 113, 114, 116, 117, 119, 120, 122, 123, 124, 127, 128, 135, 136, 140, 143, 147, 148, 150, 151, 152, 153, 154, 155, 159, 163, 165, 167, 170, 174, 175, 176, 178, 179, 180, 184, 185, 188, 189, 190, 192, 193, 197, 202, 207, 209, 212, 225, 226, 227, 228, 231, 235, 236, 237, 243, 244, 247, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 295, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 328, 329, 333, 347, 350, 353, 354, 365, 366, 369, 370, 371, 373, 396, 397, 401, 402, 404, 405, 413, 416, 442], "specta": [29, 394], "spectr": 410, "spectra": [5, 17, 21, 22, 23, 25, 26, 29, 36, 46, 50, 51, 54, 67, 68, 73, 74, 79, 83, 91, 95, 98, 99, 100, 101, 102, 104, 105, 113, 114, 119, 127, 163, 164, 169, 170, 175, 225, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 253, 287, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 348, 383, 385, 388, 389, 390, 391, 392, 393, 394, 402, 405, 407, 410, 412, 413, 414, 415, 416, 437, 443, 449, 465, 466, 467], "spectral": [20, 21, 42, 51, 95, 105, 113, 367, 383, 388, 389], "spectro": 93, "spectrocat": [6, 11, 85, 87, 88, 90, 436], "spectrochemp": 6, "spectrochempi": [1, 5, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 88, 90, 91, 93, 96, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "spectrochempy_2025": 0, "spectrochempy_cfg": 96, "spectrochempy_data": [5, 55, 85, 422, 423, 447, 461], "spectromet": [29, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 388, 394], "spectrometri": 95, "spectroscop": [0, 3, 5, 91, 92, 104, 105, 110, 113, 114, 117, 120, 127, 128, 306, 383, 395, 399, 400, 402, 403], "spectroscopi": [3, 22, 92, 95, 101, 145, 385, 389, 391, 397], "spectroscopist": [92, 413], "spectrum": [5, 20, 22, 32, 51, 54, 66, 70, 73, 75, 76, 80, 83, 95, 98, 107, 114, 120, 164, 169, 179, 180, 244, 272, 277, 278, 287, 288, 298, 302, 303, 309, 322, 323, 337, 383, 388, 389, 391, 392, 397, 412, 413, 414, 415, 416, 443], "speed": [7, 33, 101, 114, 292, 369, 389, 405, 417, 419, 456, 460, 467], "spg": [17, 20, 23, 25, 32, 36, 42, 43, 45, 46, 55, 60, 83, 91, 100, 101, 104, 114, 115, 116, 123, 128, 146, 147, 153, 160, 176, 205, 212, 223, 294, 295, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 343, 344, 352, 353, 354, 358, 363, 364, 366, 371, 388, 389, 392, 393, 396, 398, 402, 405, 406, 411, 413, 416], "sphinx": [7, 9, 10, 38, 60, 73], "sphinx_gallery_thumbnail_numb": [17, 41], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa": [16, 27, 38, 83, 101, 104, 114, 120, 312, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa_keller_massart": [16, 27, 38, 83, 101, 104, 114, 153, 168, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_fast_ica": [16, 27, 38, 83, 105, 114, 168, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_iri": [16, 27, 38, 83, 101, 102, 110, 111, 114, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_mcrals_chrom1": [16, 27, 38, 83, 113, 114, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_mcrals_kinet": [16, 27, 38, 83, 97, 101, 104, 113, 114, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_nmf": [16, 27, 38, 83, 114, 117, 312, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_pca_iri": [16, 27, 38, 83, 114, 120, 206, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_pca_spec": [16, 27, 38, 83, 114, 120, 312, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_simplisma": [16, 27, 38, 83, 114, 127, 311, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_b_crossdecomposition_plot_pl": [28, 30, 38, 83, 114, 122, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_c_curvefitting_plot_fit": [31, 34, 38, 83, 114, 119, 195, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_c_curvefitting_plot_lstsq_single_equ": [31, 34, 38, 83, 101, 112, 114, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_d_baseline_plot_baseline_correct": [35, 37, 38, 83, 98, 114, 244, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_a_create_dataset": [40, 44, 60, 83, 101, 114, 238, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_b_coordin": [40, 44, 60, 83, 101, 102, 114, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_c_unit": [40, 44, 60, 83, 101, 114, 124, 173, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_c_importer_plot_generic_read": [45, 52, 60, 83, 114, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_c_importer_plot_read_ir_from_omn": [45, 52, 60, 83, 101, 114, 312, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_c_importer_plot_read_ir_from_opu": [45, 52, 60, 83, 114, 313, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_c_importer_plot_read_nmr_from_bruk": [45, 52, 60, 83, 114, 227, 321, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_c_importer_plot_read_raman_from_labspec": [45, 52, 60, 83, 114, 309, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_c_importer_plot_read_renishaw": [45, 52, 60, 83, 114, 302, 322, 323, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_d_plotting_plot_plot": [53, 56, 60, 83, 114, 234, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_d_plotting_plot_plot_multipl": [53, 56, 60, 83, 114, 165, 234, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_core_e_project_plot_project": [57, 59, 60, 83, 114, 123, 129, 332, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_apodization_plot_proc_em": [62, 65, 73, 83, 114, 170, 321, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_apodization_plot_proc_sp": [62, 65, 73, 83, 114, 300, 321, 346, 350, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_denoising_plot_denois": [66, 69, 73, 83, 114, 302, 337, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_denoising_plot_despik": [66, 69, 73, 83, 114, 164, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_filtering_plot_filt": [70, 72, 73, 83, 107, 114, 288, 302, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_nmr_plot_processing_cp_nmr": [73, 74, 78, 83, 101, 102, 114, 119, 170, 175, 225, 321, 348, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_nmr_plot_processing_nmr": [73, 74, 78, 83, 114, 119, 321, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_nmr_plot_processing_nmr_relax": [73, 74, 78, 83, 114, 119, 321, 386], "sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_raman_plot_processing_raman": [73, 79, 81, 83, 98, 114, 163, 244, 309, 386], "spike": [66, 73, 83, 95, 114, 164, 287, 302, 385, 392, 415, 465], "spline": 388, "split": [93, 114, 135, 197, 243, 405, 406], "splitlin": 404, "spread": [114, 353, 366], "spred": 75, "spure": [21, 26, 390, 391], "spyder": 399, "sqrt": [114, 117, 133, 134, 183, 211, 271, 353, 389, 400, 401, 402], "squar": [32, 33, 36, 62, 73, 83, 95, 98, 99, 107, 112, 113, 114, 118, 119, 120, 122, 144, 146, 149, 165, 186, 192, 203, 204, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 266, 272, 288, 292, 294, 298, 300, 321, 330, 346, 348, 350, 353, 366, 369, 383, 385, 387, 388, 390, 392, 402, 407, 461, 467], "squeez": [22, 42, 76, 114, 389, 392, 411], "sr": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324], "src": [397, 401], "ssb": [64, 114, 263, 265, 266, 300, 346, 350, 407], "ssdiff": [114, 146, 294], "st": [17, 19, 21, 22, 23, 26, 105, 113, 127, 383, 390, 392, 417, 419, 459, 460], "st0": 390, "st_constrained_list": 113, "st_l": 113, "st_ls_list": 113, "st_unconstrain": 113, "stabl": [7, 10, 14, 85, 88, 90, 105], "stack": [41, 47, 75, 114, 153, 214, 219, 220, 229, 230, 232, 233, 238, 241, 295, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 392, 405, 446, 452, 458], "stackoverflow": 400, "staff": [2, 92], "stai": [6, 416], "stancik": [145, 389], "stand": [2, 14, 43, 383, 388, 390, 391, 392, 394], "standalon": 83, "standard": [4, 10, 13, 68, 95, 102, 113, 114, 120, 127, 160, 197, 208, 212, 353, 354, 366, 389, 390, 394, 395, 397, 400, 405, 411], "stanislav": 95, "star": 9, "starch": [29, 394], "start": [5, 6, 7, 9, 11, 22, 32, 36, 41, 80, 86, 87, 88, 89, 90, 98, 99, 100, 101, 110, 114, 140, 185, 202, 207, 242, 244, 253, 388, 389, 390, 392, 397, 402, 405, 413], "startmenu": 90, "startswith": 7, "startup": [88, 98, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 197, 244, 288, 289, 291, 292, 333, 347, 369, 405], "starzyk": 95, "stash": 6, "state": [2, 6, 7, 92, 114, 301], "statement": [402, 405, 421], "statist": [95, 114, 353, 366, 383, 394, 400], "statu": [2, 6, 97, 114, 266, 350, 388, 407], "stcurr": 113, "std": [26, 71, 114, 212, 366, 394, 414], "stdout": 341, "stefania": 95, "stejskal": 467, "stelmachowski": [95, 110], "step": [5, 6, 11, 21, 84, 88, 90, 97, 100, 101, 113, 114, 140, 164, 185, 202, 207, 287, 388, 399, 405, 413, 459], "steven": 95, "sthe": 129, "stiff": 97, "stiffer": [98, 99, 114, 144, 244, 245, 253], "stijn": 95, "still": [6, 7, 93, 114, 176, 197, 400, 402, 405, 434, 444, 447, 455, 465, 467], "stix": 405, "stixsan": 405, "stoichiometri": 97, "stop": [4, 100, 101, 110, 114, 117, 122, 140, 185, 202, 207, 383, 390, 395, 402, 413], "storag": 2, "store": [2, 6, 36, 51, 80, 97, 106, 113, 114, 197, 304, 306, 390, 391, 394, 399, 402, 404, 407, 410, 411, 417, 419, 427, 445, 450, 460], "storeiter": [113, 417, 419, 460], "stosic": 95, "str": [5, 9, 22, 26, 46, 58, 97, 101, 102, 106, 107, 110, 111, 114, 116, 119, 120, 121, 122, 123, 124, 129, 130, 135, 136, 146, 148, 150, 152, 153, 154, 155, 159, 163, 164, 165, 167, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 184, 188, 189, 190, 193, 197, 199, 205, 209, 214, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 247, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 292, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 333, 343, 344, 347, 349, 350, 357, 363, 364, 365, 369, 370, 371, 373, 377, 378, 391, 406], "straight": [114, 165, 247], "straightforward": [33, 413, 416], "strang": 455, "strategi": 105, "stream": [41, 405], "streamlin": 51, "strength": 414, "stress": 392, "strict": [4, 113, 114, 130, 168, 297], "stricter": 390, "strictli": [80, 114, 120, 264, 345, 407, 414], "strike": 2, "string": [9, 14, 80, 87, 97, 98, 99, 101, 102, 105, 106, 110, 113, 114, 122, 123, 152, 197, 205, 223, 224, 229, 232, 233, 238, 244, 253, 312, 321, 384, 396, 397, 401, 402, 403, 405, 467], "strip": [197, 404], "strng": 197, "strong": [2, 92], "stronger": 414, "strongli": [7, 384], "struct": 197, "structur": [6, 7, 13, 92, 114, 172, 182, 222, 378, 383, 390, 391, 395, 403, 404], "student": 92, "studi": [2, 95, 383, 385], "style": [6, 7, 9, 46, 47, 54, 55, 114, 122, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 404, 407, 421, 458, 465], "stylesheet": [114, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 405], "stylist": 7, "sub": [58, 114, 123, 129, 136, 139, 356, 401, 404], "subclass": [101, 102, 114, 119, 122, 197, 431], "subcompon": 383, "subdir": [50, 114, 312, 317, 396, 397, 421], "subdirectori": 5, "subfold": [114, 302], "subhead": 401, "subindex": 9, "subject": [2, 6, 92, 93, 113, 114, 383, 384, 397, 402, 403], "submatric": 383, "submit": [2, 6, 7], "subplot": [98, 99, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 214, 228, 231, 235, 236, 237, 244, 253, 405, 413], "subproject": [58, 123], "subscrib": 2, "subsequ": [2, 10, 98, 104, 105, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244, 401, 405], "subsequent_ind": 404, "subset": [7, 114, 176, 351], "substep": 401, "subsystem": 87, "subtitl": 214, "subtrack": [114, 146, 294], "subtract": [9, 36, 92, 93, 98, 114, 144, 146, 149, 165, 186, 244, 245, 246, 247, 248, 251, 252, 294, 330, 348, 384, 388, 392, 397, 402, 403, 404, 406], "subtrat": 23, "subtyp": 9, "succes": [114, 335], "success": [2, 13, 97, 113, 383, 390, 396, 401, 414], "successfulli": [5, 22, 97], "sudden": 7, "sudo": [6, 89], "suffer": [2, 405], "suffici": 75, "suffix": [114, 123, 223, 396], "suggest": [7, 83, 92], "suit": [13, 85], "suitabl": [2, 104, 122, 405], "sulf_oct": [20, 42, 397, 413], "sulfid": [20, 95, 385], "sum": [9, 51, 112, 113, 114, 118, 122, 146, 147, 160, 212, 294, 353, 366, 383, 393, 406, 414], "sum_": [242, 383, 389], "summ": 51, "summar": 9, "summari": [7, 76, 77, 97, 98, 99, 101, 102, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 145, 183, 197, 208, 242, 244, 253, 288, 342, 367, 390, 403], "super": 197, "superpos": 409, "supplement": [2, 387], "supplementari": [2, 113, 397], "suppli": [2, 46, 114, 122, 176], "support": [7, 9, 15, 95, 114, 301, 385, 392, 398, 405, 411, 422, 467], "supposedli": 396, "suppress": [91, 214, 405, 421, 445], "supress": 80, "suptitl": [214, 405], "suptitle_color": 214, "sure": [6, 10, 23, 89, 97], "surf": [390, 391], "surfac": [95, 114, 121, 229, 230, 232, 233, 238, 239, 240, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 385, 390, 391, 405, 449, 467], "surround": [392, 401], "sust": 397, "sv": 128, "svd": [93, 98, 99, 104, 105, 110, 113, 117, 120, 127, 244, 253, 383, 388], "svd_solver": 120, "svg": 405, "swapax": 114, "swapdim": [114, 335, 362], "swape": [114, 355], "switch": [6, 88, 90, 97], "sy": [197, 341], "sylvi": 95, "symbol": [97, 197, 402, 405], "symlog": 122, "synchron": 86, "syntax": [7, 9, 32, 41, 58, 76, 84, 113, 114, 384, 400, 401, 403, 404, 405, 414], "synthes": [95, 385], "system": [2, 6, 12, 18, 84, 87, 89, 95, 96, 97, 105, 223, 395, 396, 421], "systemat": [383, 392], "t": [6, 7, 9, 10, 11, 17, 18, 19, 21, 22, 23, 24, 26, 29, 33, 36, 41, 75, 76, 77, 83, 84, 92, 95, 97, 101, 102, 104, 105, 110, 113, 114, 117, 120, 121, 122, 127, 128, 170, 177, 188, 258, 260, 266, 303, 350, 383, 389, 390, 391, 392, 394, 396, 399, 400, 401, 402, 404, 405, 407, 408, 411, 416, 459], "t0": [114, 188, 260], "t1": 77, "t1_model": 77, "t1irho": 75, "t1rho": 75, "t_0": [114, 170, 258, 390], "t_event": 97, "t_point": 97, "tab": [6, 401], "tabl": [9, 92, 114, 146, 294, 405], "table_po": [75, 392], "table_properti": [75, 392], "tableau": 405, "tacit": 2, "tacitli": 2, "tag": [400, 401, 402], "taht": [17, 23], "tail": 9, "take": [2, 6, 7, 10, 12, 32, 33, 42, 54, 86, 87, 88, 90, 92, 101, 105, 114, 117, 152, 161, 168, 175, 176, 197, 268, 276, 297, 353, 402, 406, 408, 411, 413, 461], "taken": [7, 29, 51, 75, 76, 77, 100, 101, 105, 114, 149, 175, 186, 212, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 246, 248, 268, 366, 390, 391, 421], "talk": [6, 388, 405], "tangent": 411, "tanner": 467, "tarascon": 95, "target": [112, 118, 122, 383], "tarr": 101, "task": [396, 399], "taskbar": 87, "tauler": 95, "tavakkoli": 95, "taxonom": 24, "tc_0": 390, "td": [404, 409], "tdd": [5, 7], "tdeff": [114, 175, 268], "technic": [2, 9, 92], "techniqu": [383, 400, 408], "technol": 95, "technolog": 2, "tej": 95, "tel": [95, 385], "telecommun": 2, "telephon": 114, "tell": [6, 114, 146, 234, 294], "temperatur": [9, 41, 97, 102, 110, 114, 303, 402], "templat": [114, 304, 402, 441], "temporari": [2, 405, 421], "temporarili": 405, "terahertz": 43, "term": [2, 105, 112, 113, 114, 117, 118, 124, 150, 257, 383, 390, 394], "termin": [2, 6, 9, 22, 87, 88, 89, 90, 96, 97, 399, 417, 419, 431], "terrain": 405, "test": [2, 6, 8, 10, 11, 13, 21, 29, 48, 49, 63, 64, 75, 76, 77, 84, 87, 112, 114, 118, 122, 136, 139, 302, 313, 394, 397, 402, 404, 407, 409, 411, 415, 421, 422, 427, 428, 437, 438, 440, 444, 447, 461], "test_": 7, "test_1d_nddataset": 7, "test_cor": 5, "test_d": 7, "test_dataset": 7, "test_import": 5, "test_method": 7, "test_nddataset_real_imag": 7, "test_read": 5, "test_read_spc": 5, "test_sh": 430, "test_xfail": 4, "test_xxx": 5, "testclass": 7, "testdata": [5, 46, 91, 393, 396, 397, 402, 413, 416], "text": [2, 9, 32, 71, 76, 92, 96, 114, 122, 266, 350, 397, 399, 401, 405, 407], "text_antialias": 405, "text_color": 405, "text_hint": 405, "text_hinting_factor": 405, "text_usetex": 405, "textbox": 100, "textcomp": 405, "textcoord": [75, 76, 392, 405], "textil": 405, "textrm": [113, 383, 394], "textwrap": 404, "textwrapp": 404, "tf": 397, "tg": [58, 114, 304], "tga": [114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 417, 419, 460], "tgscatter": 58, "th": [36, 114, 160, 166, 174, 383, 396], "than": [2, 9, 12, 26, 68, 86, 87, 97, 107, 113, 114, 120, 121, 122, 151, 163, 164, 172, 175, 176, 193, 197, 251, 266, 268, 270, 286, 287, 288, 289, 330, 333, 350, 351, 371, 390, 392, 394, 395, 396, 399, 401, 402, 405, 407, 411, 414, 423, 466], "thank": 43, "thei": [2, 5, 6, 7, 9, 12, 84, 86, 92, 102, 105, 114, 123, 302, 312, 313, 384, 390, 391, 392, 393, 396, 397, 400, 402, 405, 406, 408, 411, 414, 417, 419, 422, 445, 463], "them": [6, 7, 9, 18, 19, 21, 25, 42, 43, 50, 83, 85, 92, 114, 313, 383, 390, 394, 396, 397, 400, 401, 402, 405, 406, 409, 427, 465], "themselv": [102, 397, 405], "theprocessor": 388, "therefor": [2, 7, 75, 101, 114, 168, 171, 177, 297, 384, 400], "thereof": 2, "thermo": [5, 114, 312, 317, 318, 319, 320, 397, 440, 467], "thermocoupl": [114, 303], "thermodynam": 85, "theses": 95, "thet": [114, 302, 312, 313], "thi": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 98, 99, 101, 102, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 153, 163, 164, 166, 168, 170, 172, 175, 176, 177, 182, 185, 188, 193, 197, 201, 205, 210, 212, 213, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 253, 258, 260, 266, 268, 270, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 299, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 333, 335, 344, 347, 350, 352, 353, 354, 360, 366, 369, 372, 374, 375, 376, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 431, 440, 445, 459, 463, 464, 465, 466], "thibault": 95, "thid": 24, "thing": [58, 75, 76, 388, 389, 392, 411], "think": [7, 9], "third": [2, 9, 18, 25, 113, 114, 164, 214, 287, 383, 390, 394, 402], "thirti": 2, "thon": 93, "those": [2, 7, 9, 22, 87, 97, 101, 102, 104, 113, 114, 121, 123, 135, 151, 164, 176, 243, 287, 388, 391, 399, 405, 411, 416], "though": [7, 22, 405], "three": [9, 22, 24, 58, 75, 98, 99, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 151, 244, 253, 389, 392, 401, 402, 413, 465], "threshold": [68, 114, 164, 176, 287, 392, 405, 408], "through": [5, 7, 9, 86, 92, 114, 136, 139, 389, 392, 396, 397, 400, 402, 405], "throughout": [2, 4, 7, 392, 397], "thse": 25, "thu": [7, 14, 21, 25, 46, 86, 87, 91, 98, 99, 101, 102, 114, 176, 244, 253, 383, 388, 389, 390, 391, 393, 394, 396, 405, 414, 416], "ti": 75, "tia": 95, "tick": [106, 114, 214, 228, 231, 235, 236, 237, 405], "tight": 405, "time": [2, 5, 6, 7, 10, 11, 17, 18, 19, 20, 21, 22, 26, 33, 41, 42, 43, 47, 63, 64, 68, 75, 77, 80, 84, 86, 87, 88, 90, 91, 97, 98, 99, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 127, 128, 130, 144, 148, 150, 161, 170, 175, 176, 177, 184, 188, 189, 190, 193, 197, 244, 245, 253, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 276, 284, 314, 357, 365, 381, 383, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 403, 404, 405, 406, 407, 412, 413, 416, 458, 461], "timedelta": 402, "timepoint": 22, "timeshift": [114, 314], "timestamp": [5, 17, 20, 25, 42, 46, 75, 91, 114, 314, 393, 397, 413], "timezon": [5, 114, 402, 405, 445], "timl": 97, "tip": [10, 13, 396, 401], "titl": [0, 5, 7, 9, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 33, 41, 42, 46, 47, 58, 67, 75, 76, 77, 91, 93, 101, 102, 104, 110, 114, 135, 140, 146, 167, 185, 202, 207, 214, 228, 231, 235, 236, 237, 243, 294, 301, 388, 389, 390, 391, 392, 393, 394, 397, 400, 401, 402, 404, 406, 407, 409, 411, 413, 416, 417, 419, 460], "tk": [405, 431], "to_arrai": 114, "to_base_unit": [101, 114, 124, 199, 200, 201, 357], "to_compact": 124, "to_csv": 9, "to_datetim": 9, "to_dict": [98, 99, 102, 104, 105, 107, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244, 253, 288], "to_pref": 124, "to_reduced_unit": [101, 114, 124, 199, 200, 201, 357], "to_root_unit": 124, "to_xarrai": 114, "todo": [1, 80, 114, 119, 146, 294, 304, 314, 389, 392, 397, 402, 413], "togeth": [3, 10, 29, 36, 101, 114, 122, 224, 383, 391, 394, 397, 406], "token": 87, "tol": [26, 98, 99, 105, 113, 114, 117, 120, 122, 127, 144, 244, 245, 253, 388, 390, 459], "toler": [97, 98, 99, 105, 113, 114, 117, 120, 122, 144, 244, 245, 253], "too": [9, 17, 25, 36, 41, 75, 76, 101, 388, 389, 392, 405, 411, 425], "tool": [7, 15, 85, 92, 95, 400, 409], "toolchain": 7, "top": [5, 95, 114, 176, 214, 392, 404, 405], "topic": [6, 10, 117], "topspin": [1, 114, 266, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 350, 396, 407, 421], "topspin_1d": [49, 63, 64, 404, 407, 409], "topspin_2d": [49, 76, 402, 404], "torr": [20, 42, 91], "tort": 2, "toshift": [114, 159, 275, 280, 327], "total": [2, 27, 29, 30, 34, 37, 39, 44, 52, 56, 59, 61, 65, 69, 72, 78, 81, 82, 101, 112, 113, 114, 118, 122, 383, 386, 394], "toto": [87, 123, 395], "touch": [6, 89, 114, 148, 256], "toward": [2, 416], "tqdm": 442, "tr": 404, "trace": [54, 92], "traceback": [101, 114, 357, 395, 404, 467], "track": [6, 95, 385], "tracker": [14, 93], "trademark": 2, "train": [29, 98, 99, 104, 105, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244, 253, 394], "trait": [119, 411], "traitement": [95, 385], "traitlet": [98, 99, 104, 105, 107, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 197, 244, 253, 288, 405], "transfer": 2, "transfere": 2, "transform": [17, 18, 19, 22, 23, 24, 25, 43, 46, 75, 80, 98, 99, 104, 105, 107, 110, 113, 114, 117, 119, 120, 122, 124, 127, 128, 130, 148, 150, 159, 170, 175, 176, 179, 180, 184, 188, 189, 190, 191, 193, 203, 204, 209, 225, 226, 244, 249, 250, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 288, 327, 329, 350, 365, 383, 388, 390, 391, 397, 400, 407, 410, 411, 412, 414, 459], "transit": 459, "translat": [2, 92], "transmiss": 2, "transmit": 2, "transmitt": [43, 114, 312, 415, 444, 446], "transpar": [122, 388, 402, 405], "transport": 85, "transpos": [23, 75, 76, 104, 105, 114, 128, 229, 232, 233, 238, 335, 355, 390, 411, 416, 466], "transposit": [220, 241, 397, 412], "transpositon": 391, "trapezoid": [114, 160, 343, 344, 354, 364, 393], "trapz": [114, 343, 354, 363, 393, 421, 438], "trapzoid": 393, "travel": [33, 389], "travert": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 88, 90, 91, 95, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "travi": 428, "treat": [97, 124, 130, 392, 397, 414], "treatment": [95, 390, 391], "trend": [80, 98, 99, 114, 144, 149, 165, 186, 244, 245, 246, 247, 248, 251, 252, 253, 330, 348], "triang": [114, 148, 170, 184, 188, 256, 258, 259, 260, 263, 264, 265, 266, 300, 345, 346, 350], "triangular": [114, 148, 256, 267, 365, 414], "trick": 10, "tricki": 9, "trigger": [6, 100, 110, 388, 395], "trigonometr": 412, "trim": [98, 99, 244, 253], "trivial": [6, 89], "true": [2, 9, 20, 25, 32, 33, 36, 42, 49, 50, 63, 64, 75, 76, 80, 91, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 130, 135, 136, 137, 138, 139, 146, 148, 150, 153, 158, 159, 160, 168, 170, 175, 176, 179, 180, 184, 185, 188, 189, 190, 193, 197, 198, 199, 202, 207, 209, 210, 212, 213, 214, 221, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 294, 295, 296, 297, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 335, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 362, 365, 366, 379, 380, 381, 382, 388, 389, 390, 391, 392, 393, 397, 402, 404, 405, 406, 407, 409, 410, 411, 415, 416, 442], "true_divid": 411, "truediv": [402, 407], "truli": 392, "trunc": [101, 114, 143, 328], "truncat": [120, 411], "trust": 92, "truth": [7, 411], "try": [6, 7, 9, 10, 20, 36, 43, 46, 80, 85, 86, 97, 103, 114, 124, 130, 171, 172, 181, 182, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 377, 378, 388, 389, 395, 396, 400, 402, 405, 406, 411, 414, 416, 463], "tspan": 97, "tune": [68, 75, 114, 251, 330, 383, 395, 408, 414], "tupl": [9, 97, 98, 99, 101, 102, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 135, 137, 138, 139, 147, 149, 169, 171, 177, 186, 210, 213, 214, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 246, 248, 253, 301, 310, 311, 351, 383, 402, 405, 468], "turnhout": [95, 385], "tutori": [6, 10, 11, 41, 88, 90, 92, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 405, 409, 413, 414, 421, 465], "twin": [114, 228, 231, 235, 236, 237], "twinx": [114, 228, 229, 231, 232, 233, 235, 236, 237, 238], "two": [2, 9, 10, 12, 18, 20, 25, 36, 42, 58, 68, 75, 76, 95, 101, 102, 110, 114, 117, 120, 124, 137, 138, 140, 163, 168, 175, 176, 193, 210, 213, 268, 270, 283, 286, 297, 304, 335, 344, 355, 362, 380, 383, 384, 388, 389, 390, 391, 392, 395, 396, 397, 401, 402, 405, 408, 411, 413, 459], "txt": [50, 54, 67, 68, 71, 80, 88, 90, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 396, 408, 414, 421, 442], "type": [2, 4, 5, 6, 7, 20, 21, 43, 51, 75, 80, 88, 89, 90, 96, 97, 100, 101, 107, 112, 114, 118, 120, 122, 123, 130, 133, 134, 137, 140, 145, 147, 160, 167, 168, 171, 172, 174, 177, 178, 181, 182, 183, 185, 192, 202, 207, 208, 210, 212, 214, 215, 217, 218, 219, 221, 222, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 288, 289, 291, 297, 302, 312, 313, 317, 319, 320, 333, 342, 347, 353, 354, 366, 367, 370, 377, 378, 388, 392, 395, 396, 397, 399, 400, 401, 409, 411, 414], "type1cm": 405, "typecod": [101, 114], "typeerror": [4, 114, 147, 404], "typewrit": 405, "typic": [7, 92, 96, 98, 99, 114, 144, 244, 245, 253, 266, 314, 350, 383, 388, 392, 407], "typograph": 122, "tz": 402, "tzinfo": 114, "u": [6, 7, 10, 14, 17, 25, 26, 41, 43, 46, 48, 63, 75, 77, 91, 92, 101, 102, 112, 114, 118, 122, 124, 128, 146, 147, 160, 170, 188, 197, 212, 225, 226, 258, 260, 273, 274, 294, 296, 302, 303, 312, 313, 317, 318, 319, 320, 324, 343, 344, 352, 353, 354, 363, 364, 366, 377, 383, 388, 389, 392, 393, 396, 397, 400, 402, 405, 407, 413, 416], "u_": 122, "u_i": 122, "ub": 75, "ubic": 388, "ubuntu": [6, 89], "ufunc": [402, 412, 453], "umasked_data": [101, 114], "un": [6, 105, 411], "unabl": 87, "unalign": 406, "unamed_script": 129, "unari": 412, "unavoid": 7, "unbias": [114, 353, 366], "unchang": [101, 114, 143, 328, 407], "uncom": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 96, 404], "uncommit": 6, "unconstrain": [98, 99, 114, 144, 244, 245, 253], "uncorrel": 120, "undefin": [402, 405], "under": [2, 9, 92, 93, 96, 387, 430], "underli": [101, 105, 114, 383, 388, 392], "underscor": [75, 77, 389, 401, 404, 405], "understand": [2, 9, 10, 11, 95, 385, 400, 459], "understood": 2, "undertak": 2, "undesir": 416, "unexpect": [114, 176], "unexplain": [26, 127], "unfortun": 6, "unicod": [105, 113, 405], "unidimension": 403, "unifi": [11, 87], "uniform": [9, 101, 114, 207, 301, 414], "uniformli": [101, 114, 207], "unimod": [113, 383, 390, 449], "unimodconc": [113, 390], "unimodconcmod": 113, "unimodconctol": 113, "unimodmod": 449, "unimodspec": 113, "unimodspecmod": 113, "unimodspectol": 113, "unimodtol": [113, 449], "uniniti": [114, 171, 172, 181, 182, 221, 222, 377, 378], "union": [114, 135, 243, 406], "uniqu": [114, 129, 306, 401, 402], "unit": [5, 9, 18, 19, 20, 26, 29, 33, 40, 41, 42, 47, 60, 63, 75, 77, 83, 91, 93, 96, 97, 101, 102, 103, 105, 112, 114, 118, 120, 124, 135, 140, 153, 167, 170, 171, 172, 173, 174, 176, 177, 178, 181, 182, 185, 188, 192, 198, 199, 200, 201, 202, 207, 221, 222, 225, 243, 258, 260, 273, 295, 296, 301, 302, 312, 338, 352, 357, 359, 360, 377, 378, 388, 389, 390, 391, 393, 394, 397, 403, 405, 407, 409, 410, 412, 431, 444, 446, 467], "unit_item": 124, "unitari": 128, "unitless": [5, 46, 58, 101, 114, 124, 158, 174, 181, 182, 221, 304, 310, 311, 377, 402, 412], "unitregistri": 124, "units1": 103, "units2": 103, "unitsa": 397, "unitscm": [389, 392], "unitscontain": 124, "unitsmin": 397, "unitss": 397, "univari": 110, "univers": [22, 95, 114, 412], "universit": 95, "universiteit": 22, "unix": [6, 89, 114, 223, 302, 312, 313, 396, 397], "unless": [2, 7, 9, 98, 99, 101, 114, 136, 139, 185, 202, 207, 244, 253, 301, 463], "unlik": [86, 114, 171, 402], "unlink": [114, 115, 116, 123], "unmask": 416, "unmodifi": 2, "unpack": 85, "unread": 396, "unresolv": 400, "unrest": 2, "unstack": 9, "until": [114, 176, 228, 231, 235, 236, 237, 392, 401, 458], "untitl": 7, "unus": 7, "unusu": 97, "unwant": 416, "unweight": 414, "up": [6, 7, 9, 10, 14, 84, 89, 92, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 373, 389, 395, 396, 405], "upb": 389, "updat": [2, 7, 13, 87, 88, 90, 102, 113, 114, 117, 123, 338, 418, 421, 428, 437, 440, 445, 448, 457, 460], "upgrad": [88, 90, 418], "upload": [9, 17, 46, 86, 100, 114, 169, 206, 461], "upon": [2, 84], "upper": [87, 114, 151, 174, 388, 405, 414], "upstream": [6, 7, 89], "ur": [43, 63, 77, 101, 114, 171, 172, 181, 182, 221, 222, 338, 377, 378, 389, 402, 407, 410], "ureg": 124, "url": [0, 46, 87, 95, 114, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 395, 401, 461], "us": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 38, 41, 42, 43, 46, 51, 53, 58, 64, 67, 68, 71, 75, 76, 77, 80, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 135, 137, 138, 140, 144, 145, 146, 147, 149, 160, 166, 171, 172, 176, 183, 185, 186, 188, 193, 197, 202, 203, 207, 208, 210, 212, 213, 214, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 260, 266, 268, 270, 286, 287, 288, 289, 291, 292, 294, 297, 301, 303, 304, 305, 307, 308, 310, 314, 315, 316, 317, 318, 319, 320, 324, 330, 333, 338, 342, 343, 344, 347, 349, 353, 354, 363, 364, 366, 367, 369, 370, 371, 373, 383, 385, 387, 391, 392, 393, 394, 395, 397, 398, 400, 401, 403, 404, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 428, 435, 452, 453, 459, 461, 463, 465, 467], "usabl": 92, "usag": [4, 7, 9, 10, 197, 396, 402, 412], "use_coord": [114, 176], "use_jac": 97, "use_list": [77, 114, 321], "use_plotli": [114, 228, 229, 231, 232, 233, 235, 236, 237, 238, 405], "used_compon": 461, "used_rang": [98, 99, 244, 253, 388], "uselabel_x": [114, 228, 231, 235, 236, 237], "useless": [42, 392], "useoffset": 405, "usepackag": 405, "user": [2, 4, 6, 7, 9, 10, 11, 12, 21, 22, 87, 88, 90, 91, 92, 95, 96, 100, 101, 111, 114, 119, 123, 171, 174, 192, 314, 384, 388, 390, 391, 392, 393, 396, 397, 399, 402, 403, 405, 413, 414, 445, 451, 467], "userguid": [5, 10, 397, 404, 467], "usermodel": [75, 77, 119], "usernam": 397, "userwarn": [18, 26, 49, 51, 75, 397, 402, 404, 411, 415], "usetex": 405, "usual": [21, 36, 41, 54, 80, 86, 92, 100, 107, 114, 148, 150, 159, 163, 170, 175, 179, 180, 184, 188, 189, 190, 193, 209, 225, 226, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 327, 329, 333, 347, 350, 365, 369, 390, 391, 392, 395, 402, 404, 405], "utc": [114, 312, 397, 402, 405, 445], "utf": 401, "util": [7, 223, 404, 428, 451], "uv": [21, 22, 95, 390, 391], "v": [6, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 77, 80, 87, 88, 89, 90, 91, 95, 97, 101, 102, 112, 114, 118, 122, 128, 166, 177, 292, 369, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 425], "v0_8": 405, "v_1": [102, 402], "vacuum": [114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 438], "vaidulych": 95, "vajda": 95, "val": [102, 389, 397], "valentin": 95, "valid": [2, 9, 10, 19, 29, 68, 92, 100, 102, 114, 117, 119, 153, 176, 295, 296, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 352, 394, 408, 465], "validate_docstr": 10, "valtchev": 95, "valtera": 95, "valu": [2, 7, 9, 17, 18, 20, 22, 23, 24, 25, 26, 29, 32, 46, 54, 63, 64, 68, 71, 75, 76, 77, 91, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 124, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 151, 160, 164, 165, 168, 171, 172, 174, 176, 177, 179, 180, 181, 182, 185, 197, 198, 202, 207, 210, 212, 213, 221, 222, 228, 229, 230, 232, 233, 238, 239, 240, 243, 244, 245, 247, 253, 266, 267, 277, 278, 287, 288, 289, 291, 294, 297, 299, 301, 305, 307, 315, 316, 320, 328, 333, 347, 349, 350, 353, 354, 362, 365, 366, 377, 378, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 409, 411, 413, 414, 416, 421, 450, 463, 466, 467], "valueerror": [114, 124, 135, 243, 351, 402], "van": [22, 95, 385], "var": [114, 212, 353, 389], "vardiff": [114, 146, 294], "vari": 9, "variabl": [9, 32, 75, 76, 77, 96, 97, 105, 110, 111, 113, 114, 122, 127, 149, 186, 197, 246, 248, 353, 366, 383, 384, 389, 394, 395, 396, 400, 405], "varianc": [24, 25, 26, 105, 114, 120, 127, 128, 146, 163, 212, 286, 294, 353, 366, 383, 390, 391, 408, 467], "variant": 92, "variat": [36, 101, 388, 389, 466], "variou": [5, 76, 80, 84, 93, 98, 107, 114, 123, 135, 205, 243, 244, 288, 289, 291, 292, 333, 347, 369, 383, 388, 392, 395, 396, 400, 402, 404, 414, 465], "vast": 414, "vdlist": [77, 114, 321, 467], "ve": 6, "vector": [76, 98, 99, 113, 114, 120, 122, 128, 165, 197, 244, 247, 253, 292, 369, 383, 388, 391, 405, 411], "vegg": 95, "vei": 75, "vel": 397, "velopp": [95, 385], "venv": [88, 90], "verb": 9, "verbos": [9, 19, 21, 23, 449], "veri": [6, 7, 9, 10, 14, 22, 80, 84, 86, 89, 92, 387, 388, 389, 390, 392, 397, 405, 410, 416], "verifi": [2, 4, 7], "versa": 9, "versicolor": 24, "version": [0, 2, 7, 10, 12, 14, 26, 51, 77, 84, 85, 87, 88, 90, 91, 92, 104, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 147, 166, 272, 298, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 341, 395, 399, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "versu": [7, 33, 389], "vertic": [54, 114, 176, 214, 228, 231, 234, 235, 236, 237, 388, 392, 405], "vi": [2, 22], "via": [7, 88, 90, 95, 114, 120, 191, 197, 269, 385], "vibrat": [145, 389], "vice": 9, "view": [6, 49, 54, 89, 114, 124, 166, 383, 402, 405, 414], "view_init": 24, "viginica": 24, "vijaysekhar": 95, "vilmin": 388, "vimont": 95, "vincent": 95, "violat": 23, "violet": [54, 76], "virginica": 24, "viridi": [120, 122, 405, 406], "virtual": [88, 90, 396, 400], "virtualmachineplatform": 87, "viru": 2, "visibl": [95, 214, 405, 406], "visual": [6, 9, 23, 92, 93, 124, 391, 393, 394, 416], "vladimir": 95, "vmax": [122, 405], "vmin": [122, 405], "vogt": 95, "void": 392, "voigt": [145, 367, 389], "voigtmodel": [76, 145, 389], "vollmer": 95, "volt": [43, 114, 312], "voluceau": 2, "volum": [87, 121], "vscode": 15, "vshift": [114, 228, 231, 235, 236, 237], "vt": 128, "vz0466": [25, 46, 91, 393, 416], "vz0467": [46, 91, 393, 416], "vz0471": 25, "vz0512": 25, "vz0517": 25, "vz0520": [46, 91, 393, 416], "vz0521": [46, 91, 393, 416], "w": [18, 75, 95, 101, 112, 114, 117, 118, 122, 124, 148, 184, 189, 190, 229, 230, 232, 233, 238, 239, 240, 256, 259, 261, 262, 392, 395, 404], "w1": [112, 118], "w3c": 92, "w_init": 105, "wa": [2, 6, 22, 42, 92, 97, 102, 114, 168, 297, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 390, 395, 397, 400, 416, 421, 424, 425, 429, 459, 463, 464, 466, 467], "waal": 95, "wai": [0, 6, 7, 9, 10, 11, 12, 42, 58, 86, 88, 89, 90, 93, 95, 102, 114, 182, 223, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 384, 388, 395, 399, 400, 402, 405, 408, 416, 445, 465], "waiver": 2, "walczak": 95, "wang": 95, "want": [5, 6, 7, 9, 10, 29, 41, 42, 71, 85, 86, 87, 88, 90, 92, 96, 98, 99, 101, 114, 122, 135, 146, 165, 188, 198, 243, 244, 247, 253, 260, 266, 294, 350, 357, 388, 389, 393, 397, 399, 400, 401, 402, 405, 406, 407, 408, 414, 416], "war": 2, "warg": 102, "warm_start": [98, 99, 104, 105, 110, 112, 113, 117, 118, 119, 120, 122, 127, 128, 244, 253], "warn": [7, 18, 23, 24, 26, 46, 49, 51, 75, 80, 91, 98, 99, 104, 105, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 163, 176, 244, 253, 286, 288, 289, 291, 292, 333, 337, 347, 361, 368, 369, 388, 390, 395, 396, 397, 401, 402, 404, 405, 407, 410, 411, 413, 415, 424, 430, 452, 457, 458], "warrant": [2, 392], "warranti": 2, "wassim": 95, "water": 2, "waterfal": [114, 230, 239, 240, 405, 421], "watt": 124, "wavelength": [5, 18, 19, 21, 22, 26, 29, 42, 43, 96, 114, 312, 383, 388, 390, 391, 394], "wavelet": [114, 176], "wavenumb": [17, 20, 36, 41, 42, 43, 46, 51, 91, 96, 100, 101, 114, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 312, 388, 389, 392, 393, 397, 402, 405, 413, 414, 416], "wdf": [51, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 466], "we": [3, 4, 5, 6, 7, 9, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 71, 75, 76, 80, 83, 84, 85, 88, 89, 90, 91, 92, 101, 114, 135, 146, 148, 150, 152, 159, 167, 170, 175, 179, 180, 184, 188, 189, 190, 193, 198, 209, 225, 226, 228, 229, 231, 232, 233, 235, 236, 237, 238, 243, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 294, 302, 312, 313, 327, 329, 335, 338, 350, 357, 365, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 440], "web": [6, 10, 92, 401, 405], "webbook": [114, 169, 443], "websit": [2, 22, 46, 86], "weckhuysen": 95, "wed": [25, 46, 91, 393, 416], "weight": [36, 112, 113, 114, 118, 122, 147, 212, 383, 405, 414], "welcom": [6, 12, 14], "weleas": 396, "well": [2, 6, 10, 14, 21, 47, 88, 89, 90, 114, 122, 176, 390, 391, 396, 405], "were": [2, 6, 33, 110, 113, 114, 119, 128, 176, 197, 389, 397, 405, 415, 429, 464, 466], "wert": [114, 292, 369, 414], "wh": 117, "whan": 383, "what": [3, 6, 9, 10, 14, 54, 76, 88, 91, 114, 166, 384, 388, 389, 397, 412, 416, 418], "whatev": [6, 11, 87, 88, 90, 96, 114, 400], "whatsnew": 454, "whatsoev": 2, "when": [0, 2, 5, 6, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 68, 75, 76, 77, 80, 84, 85, 87, 97, 98, 99, 101, 103, 104, 105, 106, 107, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 128, 135, 140, 147, 164, 165, 176, 177, 185, 202, 207, 214, 224, 243, 244, 247, 253, 266, 287, 288, 289, 291, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 335, 347, 350, 383, 388, 389, 390, 392, 395, 396, 397, 401, 402, 405, 407, 409, 413, 414, 416, 423, 427, 431, 445, 450, 452, 459, 461, 466, 467], "whenev": [4, 5, 114, 122, 135, 243, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 406], "where": [2, 5, 6, 7, 9, 11, 15, 36, 50, 51, 75, 76, 77, 80, 87, 90, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 140, 148, 149, 151, 170, 174, 177, 183, 184, 186, 188, 189, 190, 197, 202, 208, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 246, 248, 256, 258, 259, 260, 261, 262, 266, 288, 289, 291, 292, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 347, 350, 353, 366, 369, 370, 371, 373, 383, 384, 388, 389, 393, 396, 402, 403, 405, 407, 410, 411, 415], "wherebi": 390, "whether": [2, 6, 84, 89, 97, 98, 99, 101, 102, 110, 112, 113, 114, 118, 119, 122, 128, 136, 139, 166, 168, 176, 197, 202, 244, 253, 297, 314, 321, 390, 391, 405, 413], "which": [2, 4, 5, 6, 9, 10, 12, 17, 22, 24, 36, 43, 58, 64, 75, 76, 80, 84, 86, 88, 89, 91, 92, 93, 96, 97, 98, 99, 101, 102, 104, 105, 107, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 127, 128, 135, 136, 137, 138, 139, 146, 147, 148, 150, 152, 153, 154, 155, 158, 159, 160, 163, 167, 170, 172, 175, 176, 177, 178, 179, 180, 182, 184, 185, 188, 189, 190, 191, 193, 198, 207, 209, 210, 212, 213, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 289, 291, 292, 294, 295, 299, 301, 327, 329, 331, 333, 343, 344, 347, 349, 350, 353, 354, 363, 364, 365, 366, 369, 378, 383, 384, 388, 389, 390, 391, 392, 394, 396, 397, 399, 400, 402, 405, 406, 408, 411, 413, 414, 416, 440, 461, 463, 464, 465], "while": [9, 10, 24, 84, 87, 92, 97, 112, 113, 114, 118, 176, 383, 388, 390, 391, 394, 396, 397, 405, 414], "whitak": [68, 95, 114, 164, 287, 408, 417, 419, 460], "white": [214, 405], "whitegrid": 405, "whiten": [105, 120, 467], "whiten_solv": 105, "whitespac": [197, 405], "whittak": [70, 73, 83, 107, 114, 288, 289, 291, 302, 333, 347, 412, 465], "whnever": [114, 370, 371, 373], "who": [2, 399], "whole": [2, 46, 76, 86, 114, 168, 297, 388, 389, 392], "whose": [2, 105, 110, 113, 114, 117, 119, 120, 122, 127, 128, 174, 176, 212, 366], "why": [4, 6, 7, 9, 14, 89, 93, 389, 440], "wich": [23, 24], "wide": [92, 114, 176], "widget": [86, 100, 405, 417, 419, 443, 448, 460], "width": [24, 32, 54, 75, 76, 80, 95, 98, 99, 114, 145, 176, 183, 188, 208, 214, 228, 231, 234, 235, 236, 237, 244, 252, 253, 260, 348, 367, 385, 389, 404, 405], "width_height": [75, 114, 176, 392], "wiggl": 405, "wiki": [7, 405], "wikipedia": [405, 414], "wild": 400, "wilei": 95, "wilk": [95, 114, 308, 397], "wilson": 95, "windig": [95, 127], "window": [6, 7, 62, 73, 80, 83, 84, 86, 88, 89, 91, 93, 98, 99, 107, 114, 148, 164, 170, 176, 184, 188, 189, 190, 223, 244, 252, 253, 256, 258, 259, 260, 261, 262, 263, 265, 266, 287, 288, 289, 291, 292, 300, 302, 312, 313, 321, 333, 346, 347, 348, 350, 369, 370, 392, 396, 397, 399, 408, 410, 412, 430, 435, 444], "window_length": [91, 107, 114, 176, 288, 289, 291, 333, 347], "wire": [45, 60, 83, 114, 120, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 466], "wise": [101, 114, 120, 133, 134, 137, 138, 210, 213, 411], "wish": [114, 166, 399], "with_transpos": [214, 220, 241], "within": [2, 4, 101, 114, 140, 314, 390, 392, 400, 401], "without": [2, 7, 9, 50, 86, 92, 100, 107, 114, 159, 171, 175, 176, 193, 209, 268, 270, 275, 279, 281, 288, 289, 302, 304, 312, 313, 329, 333, 383, 384, 388, 390, 392, 395, 400, 405, 406, 413, 440], "wittaker_smooth_licens": [114, 292, 369], "wl": 392, "wlen": [75, 114, 176, 392], "wodger": [43, 114, 115, 116, 123, 312, 358, 396], "won": [6, 24, 84, 392], "word": [2, 9, 105, 110, 113, 117, 119, 120, 122, 127, 128, 401], "wordpress": 390, "work": [0, 1, 2, 7, 11, 13, 20, 36, 42, 46, 58, 76, 83, 84, 86, 87, 88, 90, 92, 98, 114, 119, 144, 163, 168, 197, 227, 228, 231, 235, 236, 237, 244, 245, 286, 292, 297, 369, 387, 396, 397, 399, 400, 402, 404, 405, 412, 414, 417, 419, 421, 423, 424, 426, 431, 434, 440, 444, 445, 451, 458, 463, 466, 467], "workflow": [6, 7, 10, 93, 428, 433], "workspac": [90, 399], "worldwid": 2, "wors": [112, 118, 122], "worth": [7, 10, 14, 392, 397, 405], "worthwhil": 400, "would": [7, 9, 20, 23, 33, 36, 42, 71, 105, 110, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 168, 297, 388, 390, 392, 413, 414, 459], "wp": [46, 112, 118, 461], "wr": 392, "wrap": [9, 107, 114, 122, 124, 288, 289, 291, 333, 347], "wrapper": [100, 105, 114, 176, 289, 333, 343, 344, 363, 364, 397, 411, 414], "wrapper1": 404, "write": [2, 5, 6, 10, 13, 87, 92, 114, 115, 116, 123, 166, 223, 371, 373, 388, 389, 396, 397, 399, 407, 411, 442, 459], "write_csv": [114, 438, 467], "write_excel": [114, 376], "write_jcamp": [114, 397], "write_jdx": 397, "write_mat": 114, "write_matlab": [114, 374], "write_xl": 114, "writer": [397, 405, 421], "written": [2, 10, 128, 397, 400], "wrong": [14, 395, 455], "wrongli": [424, 464], "wrt": [112, 118, 395], "wsl": 87, "wsl2": 87, "wspace": 214, "www": [0, 10, 29, 46, 88, 90, 95, 114, 373, 388, 394, 395, 397, 400], "x": [1, 5, 7, 18, 19, 20, 21, 22, 24, 25, 26, 29, 33, 41, 42, 43, 46, 48, 54, 68, 71, 75, 76, 77, 80, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 127, 128, 135, 146, 147, 148, 150, 153, 154, 155, 159, 160, 163, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 192, 193, 208, 209, 212, 214, 222, 225, 226, 228, 231, 235, 236, 237, 242, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 286, 288, 294, 295, 296, 302, 303, 304, 310, 311, 312, 313, 314, 317, 318, 319, 320, 324, 327, 329, 342, 343, 344, 350, 352, 353, 354, 357, 363, 364, 365, 366, 373, 377, 378, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 396, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 438, 439, 459, 466], "x1": [68, 388, 411], "x11": 92, "x2": [68, 388, 390, 397, 411], "x3": [68, 388], "x4": [68, 388], "x5": 388, "x6": 388, "x64": 87, "x7": 388, "x8": 388, "x9b": 22, "x_": [20, 42, 394], "x_bckg_yyybg": [114, 303], "x_hat": [22, 104, 105, 110, 113, 117, 119, 120, 122, 127, 128], "x_hat_a": 19, "x_hat_b": 19, "x_load": 394, "x_origin": [105, 110, 113, 117, 119, 120, 122, 127, 128], "x_revers": [114, 229, 230, 232, 233, 238, 239, 240], "x_samplename_yyi": [114, 303], "x_score": [122, 394], "x_test": [29, 394], "x_train": [29, 394], "x_transform": [105, 110, 113, 117, 119, 120, 122, 127, 128], "xand": 117, "xarg": 7, "xarrai": [3, 114, 361], "xavier": 95, "xaxi": [114, 312, 464], "xc": [80, 388], "xcm": 80, "xcode": [6, 89], "xcorr": 393, "xcp": 80, "xdist": 7, "xfail": 7, "xhan": 414, "xiang": 95, "xl": 93, "xlabel": [17, 18, 20, 26, 33, 41, 54, 64, 114, 228, 231, 235, 236, 237, 389, 391, 393, 394], "xlim": [75, 77, 114, 228, 231, 235, 236, 237, 407, 409, 410, 414, 415], "xm": [71, 414], "xn": 414, "xsg": 414, "xsm": 414, "xsm2": 414, "xtick_bottom": 405, "xtick_color": 405, "xtick_direct": 405, "xtick_labels": 405, "xtick_major_bottom": 405, "xtick_major_pad": 405, "xtick_major_s": 405, "xtick_major_top": 405, "xtick_major_width": 405, "xtick_minor_bottom": 405, "xtick_minor_pad": 405, "xtick_minor_s": 405, "xtick_minor_top": 405, "xtick_minor_vis": 405, "xtick_minor_width": 405, "xtick_top": 405, "xw": 414, "xwhit": 414, "xx": [114, 169, 405], "xxx": 5, "xxxx": [114, 169], "xxxxxxx": [114, 169], "xy": [51, 75, 76, 392, 405], "xytext": [75, 76, 392, 405], "y": [5, 6, 17, 19, 20, 22, 24, 25, 26, 29, 32, 33, 41, 42, 46, 47, 48, 75, 76, 77, 91, 95, 97, 100, 101, 102, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 127, 128, 146, 147, 160, 167, 171, 174, 176, 177, 181, 212, 214, 222, 294, 296, 302, 303, 304, 310, 311, 312, 313, 314, 317, 318, 319, 320, 324, 352, 353, 354, 357, 366, 377, 378, 383, 385, 389, 390, 391, 392, 393, 394, 396, 402, 404, 405, 406, 411, 413, 414, 416, 423, 452, 467], "y_event": 97, "y_hat": 122, "y_load": 394, "y_pred": [112, 118, 122], "y_revers": [114, 230, 239, 240, 405], "y_score": [122, 394], "y_std": 394, "y_test": [29, 394], "y_test_hat": 394, "y_train": [29, 394], "y_transform": [113, 122], "y_true": [112, 118, 122], "yaml": 6, "ye": 90, "year": 0, "yellow": 401, "yet": [6, 15, 87, 89, 92, 114, 349, 397, 399, 400, 402, 406], "yield": [7, 392, 395], "ylabel": [17, 18, 20, 26, 33, 41, 54, 64, 114, 228, 231, 235, 236, 237, 389, 391, 393, 394], "ylim": [75, 76, 114, 120, 228, 231, 235, 236, 237, 389, 392, 414], "yml": [6, 89, 421], "yonesi": [95, 385], "you": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 43, 46, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 105, 114, 122, 165, 166, 197, 244, 247, 253, 384, 387, 389, 393, 396, 397, 399, 400, 401, 402, 405, 410, 413, 415, 416, 424, 455], "your": [0, 7, 8, 10, 13, 15, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 105, 114, 335, 388, 396, 397, 399, 400, 401, 402, 410], "youranacondafold": 90, "yourdefaultpath": 90, "yournam": 6, "yourself": [6, 7], "yourworkingfold": 90, "yscale": [17, 18], "ytick_color": 405, "ytick_direct": 405, "ytick_labels": 405, "ytick_left": 405, "ytick_major_left": 405, "ytick_major_pad": 405, "ytick_major_right": 405, "ytick_major_s": 405, "ytick_major_width": 405, "ytick_minor_left": 405, "ytick_minor_pad": 405, "ytick_minor_right": 405, "ytick_minor_s": 405, "ytick_minor_vis": 405, "ytick_minor_width": 405, "ytick_right": 405, "yu": 95, "yukihiro": 95, "yukiteru": 95, "yyi": [114, 303], "z": [41, 48, 51, 95, 101, 102, 114, 177, 214, 296, 352, 385, 397, 402, 405, 411], "z2": 397, "z3": 397, "zapf": 405, "zden\u011bk": 95, "zenodo": [0, 95, 385], "zeolit": [23, 95, 385], "zeorslik": [114, 378], "zero": [18, 114, 117, 136, 147, 148, 159, 171, 172, 174, 181, 182, 209, 221, 222, 225, 226, 228, 231, 235, 236, 237, 256, 273, 274, 275, 279, 281, 282, 283, 284, 285, 329, 353, 366, 378, 379, 380, 381, 382, 393, 402, 410, 412], "zerodivisionerror": [114, 147], "zeros_lik": [114, 171, 172, 181, 182, 221, 222, 377], "zeroto": 117, "zeynep": 95, "zf": [114, 410], "zf_auto": 114, "zf_doubl": 114, "zf_size": [114, 409], "zhang": 95, "zholobenko": [95, 383], "zip": [46, 114, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 421, 461], "zlabel": [114, 228, 231, 235, 236, 237], "zlim": [63, 64, 114, 228, 231, 235, 236, 237, 405, 407], "zoom": [75, 392, 405, 410, 414], "zo\u00e9": 95, "zpd": 410, "zscore": [114, 164, 287], "zshrc": 88, "zuberbuehl": [95, 104, 383], "\u00b5": [64, 75, 77, 404, 407, 409], "\u00b9": [20, 42, 46, 75, 91, 114, 147, 212, 392, 393, 397, 402, 410, 413, 416], "\u00e0": 95, "\u00e1": 95, "\u00e7": 95, "\u00e9": 95, "\u00e9chantillon": 397, "\u00ecncrement": 101, "\u00f3": 95, "\u00f8": 95, "\u0161tefan": 95, "\u03bb": 414, "\u2075": 402}, "titles": ["Citing  <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Acknowledgments", "SpectroChempy License", "See also", "SpectroChemPy code style guide", "Adding a Reader", "Contributing to SpectroChemPy", "Contributing to the code", "Contributing to specific parts of the code", "SpectroChemPy Docstring Guide", "Contributing to the documentation", "Building Docker images", "Adding your examples to the gallery", "Developer\u2019s Guide", "Reporting Issues", "Editors", "Decomposition", "EFA example", "EFA (Keller and Massart original example)", "FastICA example", "2D-IRIS analysis example", "MCR-ALS example (adapted from Jaumot et al. 2005)", "MCR-ALS with kinetic constraints", "NMF analysis example", "PCA example (iris dataset)", "PCA analysis example", "SIMPLISMA example", "Computation times", "Cross-decomposition", "PLS regression example", "Computation times", "Curvefitting", "Fitting 1D dataset", "Solve a linear equation using LSTSQ", "Computation times", "Baseline", "NDDataset baseline correction", "Computation times", "Analysis NDDataset", "Computation times", "How to use NDDataset", "NDDataset creation and plotting example", "NDDataset coordinates example", "Units manipulation examples", "Computation times", "Import / Export", "Reading datasets", "Loading an IR (omnic SPG) experimental file", "Loading Bruker OPUS files", "Loading of experimental 1D NMR data", "Loading RAMAN experimental file", "Reading Renishaw WiRE files", "Computation times", "Plotting datasets", "Using plot_multiple to plot several datasets on the same figure", "Introduction to the plotting librairie", "Computation times", "Project Management", "Project creation", "Computation times", "Core functionalities", "Computation times", "Apodization", "Exponential window multiplication", "Sine bell and squared Sine bell window multiplication", "Computation times", "Denoising", "Denoising a 2D Raman spectrum", "Removing cosmic ray spikes from a Raman spectrum", "Computation times", "filtering", "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum", "Computation times", "Processing NDDataset", "Processing NMR datasets", "Analysis CP NMR spectra", "Import API", "Processing Relaxation measurement", "Computation times", "Processing Raman datasets", "Processing RAMAN spectra", "Computation times", "Computation times", "Example\u2019s gallery", "Installation guide", "Install optional dependencies", "Install in Google Colaboratory (Colab)", "Install a Docker container", "Installation Guide for Mac OSX", "Installation from sources (master or develop versions)", "Installation Guide for Windows", "Overview", "Why <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>  ?", "Processing, analyzing and modeling spectroscopic data", "&lt;no title&gt;", "Bibliography", "Frequently asked questions (FAQ)", "spectrochempy.ActionMassKinetics", "spectrochempy.Baseline", "spectrochempy.BaselineCorrection", "spectrochempy.BaselineCorrector", "spectrochempy.Coord", "spectrochempy.CoordSet", "spectrochempy.DimensionalityError", "spectrochempy.EFA", "spectrochempy.FastICA", "spectrochempy.FileSelector", "spectrochempy.Filter", "spectrochempy.II", "spectrochempy.IR", "spectrochempy.IRIS", "spectrochempy.IrisKernel", "spectrochempy.LSTSQ", "spectrochempy.MCRALS", "spectrochempy.NDDataset", "spectrochempy.NDDataset.save", "spectrochempy.NDDataset.save_as", "spectrochempy.NMF", "spectrochempy.NNLS", "spectrochempy.Optimize", "spectrochempy.PCA", "spectrochempy.PFR", "spectrochempy.PLSRegression", "spectrochempy.Project", "spectrochempy.Quantity", "spectrochempy.RI", "spectrochempy.RR", "spectrochempy.SIMPLISMA", "spectrochempy.SVD", "spectrochempy.Script", "spectrochempy.Unit", "spectrochempy.ab", "spectrochempy.abc", "spectrochempy.abs", "spectrochempy.absolute", "spectrochempy.align", "spectrochempy.all", "spectrochempy.amax", "spectrochempy.amin", "spectrochempy.any", "spectrochempy.arange", "spectrochempy.argmax", "spectrochempy.argmin", "spectrochempy.around", "spectrochempy.asls", "spectrochempy.asymmetricvoigtmodel", "spectrochempy.autosub", "spectrochempy.average", "spectrochempy.bartlett", "spectrochempy.basc", "spectrochempy.blackmanharris", "spectrochempy.clip", "spectrochempy.component", "spectrochempy.concatenate", "spectrochempy.conj", "spectrochempy.conjugate", "spectrochempy.coordmax", "spectrochempy.coordmin", "spectrochempy.copy", "spectrochempy.cs", "spectrochempy.cumsum", "spectrochempy.dc", "spectrochempy.debug_", "spectrochempy.denoise", "spectrochempy.despike", "spectrochempy.detrend", "spectrochempy.diag", "spectrochempy.diagonal", "spectrochempy.dot", "spectrochempy.download_nist_ir", "spectrochempy.em", "spectrochempy.empty", "spectrochempy.empty_like", "spectrochempy.error_", "spectrochempy.eye", "spectrochempy.fft", "spectrochempy.find_peaks", "spectrochempy.fromfunction", "spectrochempy.fromiter", "spectrochempy.fsh", "spectrochempy.fsh2", "spectrochempy.full", "spectrochempy.full_like", "spectrochempy.gaussianmodel", "spectrochempy.general_hamming", "spectrochempy.geomspace", "spectrochempy.get_baseline", "spectrochempy.get_loglevel", "spectrochempy.gm", "spectrochempy.hamming", "spectrochempy.hann", "spectrochempy.ht", "spectrochempy.identity", "spectrochempy.ifft", "spectrochempy.imag", "spectrochempy.info_", "spectrochempy.interpolate", "spectrochempy.ipython.magics.SpectroChemPyMagics", "spectrochempy.is_units_compatible", "spectrochempy.ito", "spectrochempy.ito_base_units", "spectrochempy.ito_reduced_units", "spectrochempy.linspace", "spectrochempy.lls", "spectrochempy.lls_inv", "spectrochempy.load", "spectrochempy.load_iris", "spectrochempy.logspace", "spectrochempy.lorentzianmodel", "spectrochempy.ls", "spectrochempy.max", "spectrochempy.mc", "spectrochempy.mean", "spectrochempy.min", "spectrochempy.multiplot", "spectrochempy.multiplot_image", "spectrochempy.multiplot_lines", "spectrochempy.multiplot_map", "spectrochempy.multiplot_scatter", "spectrochempy.multiplot_stack", "spectrochempy.multiplot_with_transposed", "spectrochempy.ones", "spectrochempy.ones_like", "spectrochempy.pathclean", "spectrochempy.pipe", "spectrochempy.pk", "spectrochempy.pk_exp", "spectrochempy.plot", "spectrochempy.plot_1D", "spectrochempy.plot_2D", "spectrochempy.plot_3D", "spectrochempy.plot_bar", "spectrochempy.plot_image", "spectrochempy.plot_map", "spectrochempy.plot_multiple", "spectrochempy.plot_pen", "spectrochempy.plot_scatter", "spectrochempy.plot_scatter_pen", "spectrochempy.plot_stack", "spectrochempy.plot_surface", "spectrochempy.plot_waterfall", "spectrochempy.plot_with_transposed", "spectrochempy.polynomialbaseline", "spectrochempy.processing.alignement.align.align", "spectrochempy.processing.baselineprocessing.baseline.Baseline", "spectrochempy.processing.baselineprocessing.baseline.asls", "spectrochempy.processing.baselineprocessing.baseline.basc", "spectrochempy.processing.baselineprocessing.baseline.detrend", "spectrochempy.processing.baselineprocessing.baseline.get_baseline", "spectrochempy.processing.baselineprocessing.baseline.lls", "spectrochempy.processing.baselineprocessing.baseline.lls_inv", "spectrochempy.processing.baselineprocessing.baseline.rubberband", "spectrochempy.processing.baselineprocessing.baseline.snip", "spectrochempy.processing.baselineprocessing.baseline_deprecated.BaselineCorrection", "spectrochempy.processing.baselineprocessing.baseline_deprecated.ab", "spectrochempy.processing.baselineprocessing.baseline_deprecated.abc", "spectrochempy.processing.fft.apodization.bartlett", "spectrochempy.processing.fft.apodization.blackmanharris", "spectrochempy.processing.fft.apodization.em", "spectrochempy.processing.fft.apodization.general_hamming", "spectrochempy.processing.fft.apodization.gm", "spectrochempy.processing.fft.apodization.hamming", "spectrochempy.processing.fft.apodization.hann", "spectrochempy.processing.fft.apodization.qsin", "spectrochempy.processing.fft.apodization.sine", "spectrochempy.processing.fft.apodization.sinm", "spectrochempy.processing.fft.apodization.sp", "spectrochempy.processing.fft.apodization.triang", "spectrochempy.processing.fft.fft.fft", "spectrochempy.processing.fft.fft.ht", "spectrochempy.processing.fft.fft.ifft", "spectrochempy.processing.fft.fft.mc", "spectrochempy.processing.fft.fft.ps", "spectrochempy.processing.fft.phasing.pk", "spectrochempy.processing.fft.phasing.pk_exp", "spectrochempy.processing.fft.shift.cs", "spectrochempy.processing.fft.shift.dc", "spectrochempy.processing.fft.shift.fsh", "spectrochempy.processing.fft.shift.fsh2", "spectrochempy.processing.fft.shift.ls", "spectrochempy.processing.fft.shift.roll", "spectrochempy.processing.fft.shift.rs", "spectrochempy.processing.fft.zero_filling.zf", "spectrochempy.processing.fft.zero_filling.zf_auto", "spectrochempy.processing.fft.zero_filling.zf_double", "spectrochempy.processing.fft.zero_filling.zf_size", "spectrochempy.processing.filter.denoise.denoise", "spectrochempy.processing.filter.denoise.despike", "spectrochempy.processing.filter.filter.Filter", "spectrochempy.processing.filter.filter.savgol", "spectrochempy.processing.filter.filter.savgol_filter", "spectrochempy.processing.filter.filter.smooth", "spectrochempy.processing.filter.filter.whittaker", "spectrochempy.processing.interpolation.interpolate.interpolate", "spectrochempy.processing.transformation.autosub.autosub", "spectrochempy.processing.transformation.concatenate.concatenate", "spectrochempy.processing.transformation.concatenate.stack", "spectrochempy.processing.transformation.npy.dot", "spectrochempy.ps", "spectrochempy.ptp", "spectrochempy.qsin", "spectrochempy.random", "spectrochempy.read", "spectrochempy.read_carroucell", "spectrochempy.read_csv", "spectrochempy.read_ddr", "spectrochempy.read_dir", "spectrochempy.read_hdr", "spectrochempy.read_jcamp", "spectrochempy.read_labspec", "spectrochempy.read_mat", "spectrochempy.read_matlab", "spectrochempy.read_omnic", "spectrochempy.read_opus", "spectrochempy.read_quadera", "spectrochempy.read_sdr", "spectrochempy.read_soc", "spectrochempy.read_spa", "spectrochempy.read_spc", "spectrochempy.read_spg", "spectrochempy.read_srs", "spectrochempy.read_topspin", "spectrochempy.read_wdf", "spectrochempy.read_wire", "spectrochempy.read_zip", "spectrochempy.real", "spectrochempy.remove_masks", "spectrochempy.roll", "spectrochempy.round", "spectrochempy.rs", "spectrochempy.rubberband", "spectrochempy.run_all_scripts", "spectrochempy.run_script", "spectrochempy.savgol", "spectrochempy.savgol_filter", "spectrochempy.set_complex", "spectrochempy.set_hypercomplex", "spectrochempy.set_loglevel", "spectrochempy.set_nmr_context", "spectrochempy.set_quaternion", "spectrochempy.show", "spectrochempy.show_versions", "spectrochempy.sigmoidmodel", "spectrochempy.simps", "spectrochempy.simpson", "spectrochempy.sine", "spectrochempy.sinm", "spectrochempy.smooth", "spectrochempy.snip", "spectrochempy.sort", "spectrochempy.sp", "spectrochempy.squeeze", "spectrochempy.stack", "spectrochempy.std", "spectrochempy.sum", "spectrochempy.swapdims", "spectrochempy.take", "spectrochempy.to", "spectrochempy.to_array", "spectrochempy.to_base_units", "spectrochempy.to_reduced_units", "spectrochempy.to_xarray", "spectrochempy.transpose", "spectrochempy.trapezoid", "spectrochempy.trapz", "spectrochempy.triang", "spectrochempy.var", "spectrochempy.voigtmodel", "spectrochempy.warning_", "spectrochempy.whittaker", "spectrochempy.write", "spectrochempy.write_csv", "spectrochempy.write_excel", "spectrochempy.write_jcamp", "spectrochempy.write_mat", "spectrochempy.write_matlab", "spectrochempy.write_xls", "spectrochempy.zeros", "spectrochempy.zeros_like", "spectrochempy.zf", "spectrochempy.zf_auto", "spectrochempy.zf_double", "spectrochempy.zf_size", "Glossary", "Public API reference", "Papers citing <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Computation times", "Analysis", "Baseline corrections", "Fitting", "MCR ALS", "Principal Component Analysis", "Peak Maxima Finding", "Peak integration", "Partial Least Squares Regression (PLSRegression)", "API Configuration", "Import Data", "Import IR Data", "Import &amp; Export", "Starting Jupyter lab", "Introduction", "Markdown Cheat Sheet", "The NDDataset object", "Core objects", "Project management", "Plotting", "Alignment of datasets", "Apodization", "Denoising", "One-dimensional (1D) Fourier transformation", "FTIR interferogram processing", "Mathematical operations", "Processing", "Slicing NDDatasets", "Filtering, Smoothing and Denoising", "Time domain baseline correction (NMR)", "Basic transformations", "What\u2019s new in revision", "Release notes", "What\u2019s new in revision 0.6.11.dev", "Revisions 0.1.0 to 0.1.19", "What\u2019s new in revision 0.2.0", "What\u2019s new in revision 0.2.10 [2021-02-14]", "What\u2019s new in revision 0.2.11 [2021-02-17]", "What\u2019s new in revision 0.2.12 [2021-02-23]", "What\u2019s new in revision 0.2.13 [2021-02-23]", "What\u2019s new in revision 0.2.14 [2021-02-25]", "What\u2019s new in revision 0.2.15 [2021-03-29]", "What\u2019s new in revision 0.2.16 [2021-11-11]", "What\u2019s new in revision 0.2.17 [2021-11-29]", "What\u2019s new in revision 0.2.18 [2022-01-05]", "What\u2019s new in revision 0.2.21 [2022-01-09]", "What\u2019s new in revision 0.2.22 [2022-01-10]", "What\u2019s new in revision 0.2.23 [2022-01-16]", "What\u2019s new in revision 0.2.4", "What\u2019s new in revision 0.2.5", "What\u2019s new in revision 0.2.6", "What\u2019s new in revision 0.2.7", "What\u2019s new in revision 0.2.8", "What\u2019s new in revision 0.2.9 [2021-11-29]", "What\u2019s new in revision 0.3.0 [2022-01-20]", "What\u2019s new in revision 0.3.1 [2022-01-21]", "What\u2019s new in revision 0.3.2 [2022-01-31]", "What\u2019s new in revision 0.3.3 [2022-03-9]", "What\u2019s new in revision 0.4.1 [2022-03-14]", "What\u2019s new in revision 0.4.10 [2023-01-07]", "What\u2019s new in revision 0.4.2 [2022-03-16]", "What\u2019s new in revision 0.4.3 [2022-03-20]", "What\u2019s new in revision 0.4.4 [2022-03-22]", "What\u2019s new in revision 0.4.5 [2022-04-09]", "What\u2019s new in revision 0.4.6 [2022-05-16]", "What\u2019s new in revision 0.4.7 [2022-05-16]", "What\u2019s new in revision 0.4.9 [2023-01-05]", "What\u2019s new in revision 0.5.0 [2023-01-11]", "What\u2019s new in revision 0.5.1", "What\u2019s new in revision 0.5.2", "What\u2019s new in revision 0.5.3", "What\u2019s new in revision 0.5.4", "What\u2019s new in revision 0.5.5", "What\u2019s new in revision 0.6.1", "What\u2019s new in revision 0.6.10", "What\u2019s new in revision 0.6.2", "What\u2019s new in revision 0.6.3", "What\u2019s new in revision 0.6.4", "What\u2019s new in revision 0.6.5", "What\u2019s new in revision 0.6.6", "What\u2019s new in revision 0.6.7", "What\u2019s new in revision 0.6.8", "What\u2019s new in revision 0.6.9"], "titleterms": {"": [13, 83, 93, 96, 400, 404, 411, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "0": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "01": [430, 431, 432, 433, 440, 441, 442, 445, 452, 453], "02": [422, 423, 424, 425, 426], "03": [427, 443, 444, 446, 447, 448], "04": 449, "05": [430, 450, 451, 452], "07": 445, "09": [431, 449], "1": [5, 9, 18, 402, 418, 420, 441, 444, 454, 459], "10": [422, 432, 445, 460], "11": [419, 423, 428, 429, 439, 453], "12": 424, "13": 425, "14": [422, 426, 444], "15": 427, "16": [428, 433, 446, 450, 451], "17": [423, 429], "18": 430, "19": 420, "1d": [32, 49, 80, 402, 405, 409], "2": [5, 9, 18, 402, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 446, 455, 461], "20": [440, 447], "2005": 21, "2021": [385, 422, 423, 424, 425, 426, 427, 428, 429, 439], "2022": [385, 430, 431, 432, 433, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451], "2023": [385, 445, 452, 453], "2024": 385, "2025": 385, "21": [431, 441], "22": [432, 448], "23": [424, 425, 433], "25": 426, "29": [427, 429, 439], "2d": [20, 67, 76, 77, 80, 408], "3": [5, 9, 18, 418, 440, 441, 442, 443, 447, 456, 462], "31": 442, "4": [5, 9, 18, 418, 434, 444, 445, 446, 447, 448, 449, 450, 451, 452, 457, 463], "5": [9, 418, 435, 449, 453, 454, 455, 456, 457, 458, 464], "6": [9, 418, 419, 436, 450, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "7": [9, 437, 451, 466], "8": [438, 467], "9": [439, 443, 452, 468], "A": [390, 392, 396], "Be": 6, "NOT": 92, "One": 409, "The": [384, 388, 390, 397, 402, 414], "To": 390, "With": 20, "ab": [131, 133, 254, 411], "abc": [132, 255], "about": [9, 10, 390, 400, 402], "abscissa": 96, "absolut": [134, 411], "absorpt": 18, "acknowledg": 1, "acquisit": 397, "actionmasskinet": 97, "ad": [5, 12, 402, 405], "adapt": 21, "add": [5, 411], "addit": 87, "advanc": 388, "affect": 411, "al": [21, 22, 390], "algebra": 384, "alia": [5, 411], "align": [135, 243, 384, 406], "all": 136, "along": 406, "also": [3, 9, 411], "altern": 384, "amax": 137, "ambigu": 390, "amin": 138, "an": [47, 92, 392, 404], "analys": [76, 77], "analysi": [18, 20, 23, 25, 38, 75, 83, 91, 384, 387, 391], "analyz": 93, "angl": 411, "ani": 139, "annot": 405, "anoth": 396, "api": [75, 76, 77, 384, 388, 395, 400, 405, 414], "apod": [62, 73, 83, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 384, 407], "applic": 399, "approach": 388, "ar": 96, "arang": 140, "arcco": 411, "arccosh": 411, "arcsin": 411, "arcsinh": 411, "arctan": 411, "arctanh": 411, "argmax": 141, "argmin": 142, "aris": 400, "arithmet": 411, "around": 143, "arrai": 411, "ascend": 96, "ask": 96, "asl": [144, 245], "aspect": 405, "assess": 390, "asymmetr": 80, "asymmetricvoigtmodel": 145, "attribut": 402, "augment": 390, "autom": 392, "automat": [6, 20], "autosub": [146, 294], "averag": [147, 414], "axi": 397, "b": 397, "backward": 7, "bartlett": [148, 256], "basc": [149, 246, 388], "baselin": [35, 36, 38, 80, 83, 91, 98, 244, 245, 246, 247, 248, 249, 250, 251, 252, 384, 388, 389, 409, 415], "baseline_deprec": [253, 254, 255], "baselinecorrect": [99, 253], "baselinecorrector": 100, "baselineprocess": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "basic": [384, 390, 416], "behaviour": 392, "bell": 64, "between": [43, 402], "bibliographi": 95, "binari": 411, "black": 7, "blackmanharri": [150, 257], "box": [396, 401], "branch": [6, 10], "break": [401, 417, 419, 444, 453, 459, 460, 461, 463, 467], "broaden": 409, "browser": 399, "bruker": [48, 397], "bug": [417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468], "build": [10, 11], "bullet": 401, "c": [159, 275], "calcul": 409, "cantera": 85, "case": 390, "cbrt": 411, "ceil": 411, "chang": [6, 7, 384, 405, 416, 417, 419, 444, 453, 459, 460, 461, 463, 467], "cheat": [399, 401], "check": [88, 90], "chromatogram": 18, "cite": [0, 385], "client": 6, "clip": [151, 384], "clone": 89, "co": 411, "code": [4, 5, 6, 7, 8, 96, 388, 392], "colab": 86, "colaboratori": 86, "color": 401, "commit": [6, 7], "comparison": 410, "compat": 7, "complet": 5, "complex": [384, 411], "compon": [152, 384, 391], "comput": [27, 30, 34, 37, 39, 44, 52, 56, 59, 61, 65, 69, 72, 78, 81, 82, 386], "concaten": [153, 295, 296], "concentr": 390, "conda": [88, 89, 90], "configur": [15, 390, 395, 405], "conj": 154, "conjug": 155, "constant": 388, "constraint": [22, 389], "constructor": 402, "contain": [11, 87], "content": [4, 5, 6, 7, 83, 96, 384], "continu": 7, "contribut": [6, 7, 8, 10, 93], "control": [6, 15], "convent": 9, "convers": 411, "convert": 43, "convolut": 414, "coord": 101, "coordin": [20, 41, 42, 96, 384, 402, 413], "coordmax": 156, "coordmin": 157, "coordset": 102, "copi": [158, 402], "core": [60, 83, 403], "correct": [36, 80, 91, 384, 388, 389, 409, 415], "cosh": 411, "cosmic": [68, 408], "cp": 75, "creat": [5, 6, 11, 19, 21, 23, 43, 89, 384, 399, 402, 405], "creation": [41, 58, 384, 404], "credit": 93, "cross": [28, 38, 83], "cumsum": 160, "curv": 384, "curvefit": [31, 38, 83], "data": [5, 18, 41, 49, 77, 85, 86, 93, 384, 388, 396, 397, 405, 407, 411, 416], "datadir": 396, "dataset": [18, 19, 20, 21, 23, 24, 32, 41, 42, 43, 46, 53, 54, 60, 73, 74, 76, 79, 83, 91, 384, 390, 391, 392, 394, 402, 405, 406, 411], "date": [397, 402], "dc": [161, 276], "debug_": 162, "decomposit": [16, 28, 38, 83, 384], "default": [392, 396, 405], "definit": 389, "deg2rad": 411, "delet": 6, "denois": [66, 67, 73, 80, 83, 163, 286, 287, 384, 408, 414], "depend": [7, 85, 417, 419], "deprec": [417, 419, 446, 450, 459, 460, 461, 463, 465], "descend": 96, "design": 92, "despik": [164, 287, 408], "determin": 390, "detrend": [80, 165, 247, 388], "dev": 419, "develop": [6, 7, 13, 89], "diag": 166, "diagon": 167, "dialog": 396, "differ": [384, 390], "dimens": [384, 402, 406], "dimension": 409, "dimensionalityerror": 103, "dimensionless": 411, "directori": 396, "displai": [91, 392], "divid": 411, "do": [4, 400], "docker": [11, 87], "docstr": [9, 10], "doctest": 9, "document": [7, 10], "domain": [384, 409, 415], "dot": [168, 297], "download_nist_ir": 169, "driven": 7, "dx": 397, "edit": 15, "editor": 15, "efa": [17, 18, 104, 390], "eiler": [71, 414], "element": 404, "em": [170, 258], "emphasi": 401, "empti": 171, "empty_lik": 172, "environ": [6, 11, 89], "equat": [33, 389], "error": [6, 395], "error_": 173, "estim": 390, "et": 21, "evolv": [18, 384], "exampl": [9, 12, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 41, 42, 43, 83, 85, 153, 163, 164, 165, 168, 170, 173, 175, 195, 206, 225, 227, 234, 238, 300, 302, 309, 311, 312, 313, 321, 322, 323, 332, 337, 346, 348, 350, 388, 406], "execut": [11, 87, 400], "exist": [384, 402], "exp": 411, "exp2": 411, "experiment": [47, 49, 50, 392], "explicit": 396, "expm1": 411, "exponenti": [63, 407], "export": [45, 60, 83, 384, 397, 398], "extend": 9, "extern": [384, 401, 402], "ey": 174, "fab": 411, "factor": [18, 23, 384], "fail": 4, "faq": 96, "fastica": [19, 105], "featur": [417, 419, 421, 422, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467], "fft": [175, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 409], "figur": [54, 405], "file": [5, 46, 47, 48, 50, 51, 86, 96, 384, 396, 397], "fileselector": 106, "filetyp": 5, "fill": [384, 409], "filter": [70, 73, 83, 107, 286, 287, 288, 289, 290, 291, 292, 384, 408, 414], "find": [384, 389, 392], "find_peak": [176, 392], "first": 406, "fit": [19, 21, 23, 32, 76, 77, 384, 389], "fix": [6, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468], "float": 411, "floor": 411, "floor_divid": 411, "font": 401, "fork": 6, "format": [5, 6, 397], "fourier": [384, 409], "frequent": 96, "from": [21, 46, 68, 89, 96, 384, 402, 404, 408], "fromfunct": 177, "fromit": 178, "fsh": [179, 277], "fsh2": [180, 278], "ftir": 410, "full": 181, "full_lik": 182, "function": [60, 83, 384, 402, 407, 411], "galleri": [12, 83], "gaussian": 407, "gaussianmodel": 183, "gener": [5, 6, 9, 18, 96, 395], "general_ham": [184, 259], "geometr": 401, "geomspac": 185, "get": [9, 19, 93, 96, 390, 400, 404], "get_baselin": [186, 248], "get_loglevel": 187, "git": [6, 89], "github": 6, "glossari": 383, "gm": [188, 260], "go": 400, "golai": [71, 414], "good": 396, "googl": 86, "graphic": 401, "guess": 390, "gui": 6, "guid": [4, 9, 13, 84, 88, 90, 93, 400], "guidelin": 5, "ham": [189, 261], "handl": 395, "hann": [190, 262], "head": 401, "help": 390, "histori": 402, "horizont": 401, "how": [10, 40, 60, 83, 96, 388, 400], "ht": [191, 269], "hyperbol": 411, "hypercomplex": 411, "i": 413, "ident": 192, "ifft": [193, 270], "ii": 108, "illustr": 390, "imag": [11, 194], "imaginari": 407, "import": [45, 46, 60, 75, 76, 77, 80, 83, 384, 396, 397, 398, 402], "indent": 401, "independ": [384, 388], "index": [96, 384, 413], "influenc": 414, "info_": 195, "inform": [91, 390, 395], "initi": 390, "inner": 406, "input": 411, "insight": 402, "inspect": 392, "instal": [6, 11, 15, 84, 85, 86, 87, 88, 89, 90], "integ": 384, "integr": [7, 384, 393], "interact": 384, "interferogram": 410, "intern": 401, "interpol": [196, 293, 384], "introduct": [55, 390, 391, 394, 400, 407], "invers": 384, "ipython": 197, "ir": [47, 109, 397], "iri": [20, 24, 91, 110], "iriskernel": 111, "is_units_compat": 198, "isfinit": 411, "isinf": 411, "isnan": 411, "issu": 14, "ito": 199, "ito_base_unit": 200, "ito_reduced_unit": 201, "jaumot": 21, "jcamp": 397, "join": 384, "jupyt": 399, "keep": 411, "keller": 18, "kinet": [22, 384], "l": [209, 279], "lab": 399, "label": 402, "last": 406, "least": [80, 384, 389, 394], "librairi": 55, "licenc": 1, "licens": 2, "like": [384, 402], "line": [401, 409], "linear": [33, 384, 388, 389], "lineshap": 384, "link": 401, "linspac": 202, "list": [401, 411], "ll": [203, 249], "lls_inv": [204, 250], "load": [19, 21, 22, 47, 48, 49, 50, 86, 205, 384, 391, 392, 394, 400, 404, 405], "load_iri": 206, "local": [11, 46, 89], "log": [7, 384, 411], "log10": 411, "log1p": 411, "log2": 411, "logic": 384, "loglevel": 395, "logspac": 207, "lorentzian": 407, "lorentzianmodel": 208, "lstsq": [33, 112, 389], "mac": 88, "magic": 197, "magnitud": [409, 411], "main": [91, 405], "make": [5, 6], "manag": [57, 60, 83, 384, 404], "manipul": [43, 384], "manual": [20, 392], "mark": 4, "markdown": [399, 401], "mask": [384, 416], "massart": 18, "master": [10, 89], "math": 91, "mathemat": [384, 401, 411], "matplotlib": 405, "matrix": [18, 384], "max": 210, "maxima": 392, "maximum": 384, "mc": [211, 271], "mcr": [21, 22, 390], "mcral": [113, 390], "mean": 212, "measur": 77, "median": 408, "merg": 6, "metadata": 5, "method": [384, 388, 389, 392, 402, 406, 408, 414], "min": 213, "minim": 390, "minimum": 384, "misc": 384, "miscellan": 384, "mix": 19, "mixtur": 384, "model": [21, 23, 77, 93, 384, 388, 389], "modul": 396, "monospac": 401, "more": [390, 392, 402], "move": 414, "multidimension": 402, "multipl": [63, 64, 407], "multipli": 411, "multiplot": 214, "multiplot_imag": 215, "multiplot_lin": 216, "multiplot_map": 217, "multiplot_scatt": 218, "multiplot_stack": 219, "multiplot_with_transpos": 220, "multivari": [384, 388], "nd": [41, 402], "ndataset": 384, "nddataset": [22, 36, 38, 40, 41, 42, 60, 73, 83, 91, 114, 115, 116, 384, 388, 389, 402, 403, 405, 411, 413, 414], "neg": [384, 389, 411], "new": [20, 42, 399, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "next": 400, "nmd": 76, "nmf": [23, 117], "nmr": [49, 73, 74, 75, 76, 77, 83, 409, 415], "nnl": [118, 389], "non": [384, 389], "note": [9, 401, 418], "notebook": 399, "npy": 297, "number": [384, 390, 401, 411], "numer": 384, "numpi": [402, 411], "o": 396, "object": [19, 21, 23, 91, 384, 402, 403, 411], "offset": 384, "omnic": [47, 397, 410], "ones": 221, "ones_lik": 222, "onli": 411, "open": 92, "oper": [384, 411], "optim": [119, 384, 390], "optimis": 389, "option": [6, 7, 85, 392], "opu": [48, 397], "order": [96, 397], "origin": [18, 407], "osx": 88, "other": [2, 388, 407], "output": 405, "overview": [91, 388, 405], "own": 405, "p": [272, 298], "paper": 385, "paramet": [9, 389, 390, 405], "part": 8, "parti": 1, "partial": [384, 394], "pass": 9, "path": 396, "pathclean": 223, "pathlib": 396, "pathnam": 396, "pca": [24, 25, 120, 390, 391], "peak": [76, 384, 389, 392, 393], "pep8": 7, "pfr": 121, "phase": [273, 274, 384], "pick": 76, "pip": [86, 88, 90], "pipe": 224, "pk": [225, 273], "pk_exp": [226, 274], "pl": 29, "platform": 92, "plot": [9, 19, 21, 23, 41, 53, 54, 55, 60, 83, 91, 96, 227, 384, 392, 405, 407], "plot_1d": 228, "plot_2d": 229, "plot_3d": 230, "plot_bar": 231, "plot_imag": 232, "plot_map": 233, "plot_multipl": [54, 234], "plot_pen": 235, "plot_scatt": 236, "plot_scatter_pen": 237, "plot_stack": 238, "plot_surfac": 239, "plot_waterfal": 240, "plot_with_transpos": 241, "plsregress": [122, 394], "polish": 5, "polynomi": 388, "polynomialbaselin": 242, "power": [92, 409], "pr": 6, "practic": 396, "pre": 7, "prefer": [96, 405], "prepar": [6, 19, 23, 405], "preprocess": 409, "prerequisit": 84, "princip": [384, 391], "principl": 6, "process": [73, 74, 77, 79, 80, 83, 91, 93, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 384, 410, 412], "processor": [388, 414], "profil": [19, 390], "project": [57, 58, 60, 83, 123, 384, 403, 404], "promin": 392, "properti": 392, "pseudo": 77, "ptp": 299, "public": 384, "pull": [5, 6], "pure": 390, "push": 6, "py": 5, "pytest": [4, 7], "python": [6, 7, 92], "qsin": [263, 300], "qt": 85, "quantiti": [43, 124], "question": [96, 400], "r": [281, 329], "rad2deg": 411, "radian": 411, "rai": [68, 408], "raman": [50, 67, 68, 71, 73, 79, 80, 83, 408], "random": 301, "rang": 384, "read": [46, 51, 302], "read_carroucel": 303, "read_csv": 304, "read_ddr": 305, "read_dir": 306, "read_hdr": 307, "read_jcamp": 308, "read_labspec": 309, "read_mat": 310, "read_matlab": 311, "read_omn": 312, "read_opu": 313, "read_quadera": 314, "read_sdr": 315, "read_soc": 316, "read_spa": 317, "read_spc": 318, "read_spg": 319, "read_sr": 320, "read_topspin": 321, "read_wdf": 322, "read_wir": 323, "read_zip": 324, "reader": 5, "reader_xxx": 5, "real": [325, 407, 409], "reciproc": 411, "reconstruct": 19, "refer": [93, 384], "regress": [29, 384, 394], "regular": 20, "rel": 396, "relat": 384, "relax": 77, "releas": 418, "remot": 46, "remov": [68, 404, 408], "remove_mask": 326, "renishaw": 51, "report": 14, "repositori": [6, 89], "request": [5, 6], "requir": [10, 411], "resolut": 384, "result": [21, 23], "return": [9, 411], "review": 6, "revis": [417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "ri": 125, "rint": 411, "roll": [280, 327, 384], "rotat": 390, "round": [328, 384], "rr": 126, "rubberband": [251, 330, 388], "rule": 9, "run": [7, 391, 394], "run_all_script": 331, "run_script": 332, "same": [54, 405], "sampl": 5, "save": [96, 115, 404], "save_a": 116, "savgol": [289, 333, 414], "savgol_filt": [290, 334], "savitki": 71, "savitzki": 414, "scienc": 92, "script": [129, 384, 389, 400, 403], "search": [20, 396], "section": 9, "see": [3, 9], "segment": 388, "select": [384, 405], "self": 384, "seri": 80, "set": [20, 42, 402], "set_complex": 335, "set_coordset": 402, "set_hypercomplex": 336, "set_loglevel": 337, "set_nmr_context": 338, "set_quaternion": 339, "sever": [54, 388, 402, 405, 406], "shape": 401, "share": 402, "sheet": [399, 401, 405], "shift": [275, 276, 277, 278, 279, 280, 281, 407], "short": 9, "show": 340, "show_vers": 341, "sigmoidmodel": 342, "sign": 411, "signbit": 411, "simp": 343, "simpl": 384, "simplisma": [26, 127], "simpson": 344, "simul": 18, "sin": 411, "sine": [64, 264, 345, 407], "singl": 402, "singular": 384, "sinh": 411, "sinm": [265, 346], "size": 414, "slice": [91, 413], "smooth": [71, 80, 91, 291, 347, 384, 414], "snip": [252, 348], "snippet": [388, 392], "softwar": 92, "solut": 390, "solv": [33, 389], "solver": 384, "sort": [349, 384], "sourc": [15, 19, 89, 92, 384], "sp": [266, 350], "spa": 397, "speci": 390, "specif": 8, "specifi": 96, "spectra": [18, 75, 76, 77, 80, 397, 408, 409], "spectral": [19, 390], "spectrochempi": [0, 2, 4, 6, 9, 10, 84, 86, 87, 89, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 400], "spectrochempymag": 197, "spectroscop": [93, 384], "spectrum": [67, 68, 71, 409], "spg": [47, 397], "spike": [68, 408], "split": 384, "sqrt": 411, "squar": [64, 80, 384, 389, 394, 411], "squeez": 351, "stack": [296, 352], "standard": [7, 9], "start": [15, 93, 399, 400], "statist": 384, "std": 353, "step": 87, "studio": 15, "style": [4, 405], "subtract": 411, "success": 6, "suit": 7, "sum": [354, 384], "summari": [9, 402], "support": 397, "svd": 128, "swapdim": 355, "symbol": 401, "syntax": [389, 402], "system": 19, "tabl": [4, 5, 6, 7, 83, 96, 384], "take": 356, "tan": 411, "tanh": 411, "test": [4, 5, 7, 18, 85], "thi": [89, 400], "third": 1, "time": [27, 30, 34, 37, 39, 44, 52, 56, 59, 61, 65, 69, 72, 78, 81, 82, 384, 386, 402, 409, 415], "tip": [6, 9], "titl": 405, "to_arrai": 358, "to_base_unit": 359, "to_reduced_unit": 360, "to_xarrai": 361, "todo": 403, "transform": [294, 295, 296, 297, 384, 409, 416], "transpos": [362, 384], "transposit": 416, "trapezoid": 363, "trapz": 364, "trend": 388, "triang": [267, 365], "trigonometr": 411, "trunc": 411, "tutori": 93, "type": [9, 384, 405], "ufunc": 411, "unari": 411, "unidimension": 402, "unit": [43, 130, 384, 402, 411, 416], "unitless": 411, "univers": 411, "updat": [6, 10, 89, 417, 419], "upload": [20, 42], "us": [4, 7, 33, 40, 54, 60, 83, 88, 90, 153, 163, 164, 165, 168, 170, 173, 175, 195, 206, 225, 227, 234, 238, 300, 302, 309, 311, 312, 313, 321, 322, 323, 332, 337, 346, 348, 350, 384, 388, 389, 390, 396, 399, 402, 405, 407, 414], "usag": [96, 411], "user": [93, 400], "util": 384, "valu": 384, "var": 366, "version": [6, 89, 418], "visual": 15, "voigtmodel": 367, "warning_": 368, "web": 399, "what": [400, 413, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "where": [96, 400], "whittak": [71, 292, 369, 414], "why": 92, "width": 392, "window": [63, 64, 87, 90, 405, 407, 414], "wire": 51, "without": 20, "work": [6, 388, 411], "write": [7, 9, 370, 400], "write_csv": 371, "write_excel": 372, "write_jcamp": 373, "write_mat": 374, "write_matlab": 375, "write_xl": 376, "xfail": 4, "y": 397, "yield": 9, "your": [5, 6, 9, 12, 405], "zero": [377, 384, 409], "zero_fil": [282, 283, 284, 285], "zeros_lik": 378, "zf": [282, 379], "zf_auto": [283, 380], "zf_doubl": [284, 381], "zf_size": [285, 382]}})