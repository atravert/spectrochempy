
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/auto_examples/analysis/plot_efa.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_auto_examples_analysis_plot_efa.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_auto_examples_analysis_plot_efa.py:


EFA example
===========

In this example, we perform the Evolving Factor Analysis

.. GENERATED FROM PYTHON SOURCE LINES 16-17

sphinx_gallery_thumbnail_number = 2

.. GENERATED FROM PYTHON SOURCE LINES 19-23

.. code-block:: default

    import os

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Upload and preprocess a dataset

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default

    datadir = scp.preferences.datadir
    dataset = scp.read_omnic(os.path.join(datadir, "irdata", "nh4y-activation.spg"))








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Change the time origin

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: default

    dataset.y -= dataset.y[0]








.. GENERATED FROM PYTHON SOURCE LINES 33-34

columns masking

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default

    dataset[:, 1230.0:920.0] = scp.MASKED  # do not forget to use float in slicing
    dataset[:, 5997.0:5993.0] = scp.MASKED








.. GENERATED FROM PYTHON SOURCE LINES 38-40

difference spectra
dataset -= dataset[-1]

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: default

    dataset.plot_stack(title="NH4_Y activation dataset")




.. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_001.png
   :alt: NH4_Y activation dataset
   :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <_Axes: title={'center': 'NH4_Y activation dataset'}, xlabel='wavenumbers $\\mathrm{/\\ \\mathrm{cm}^{-1}}$', ylabel='absorbance $\\mathrm{/\\ \\mathrm{a.u.}}$'>



.. GENERATED FROM PYTHON SOURCE LINES 43-44

Evolving Factor Analysis

.. GENERATED FROM PYTHON SOURCE LINES 44-47

.. code-block:: default

    efa1 = scp.EFA()
    _ = efa1.fit(dataset)








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Forward evolution of the 5 first components

.. GENERATED FROM PYTHON SOURCE LINES 49-56

.. code-block:: default

    f = efa1.f_ev[:, :5]
    f.T.plot(yscale="log", legend=f.x.labels)

    # Backward evolution
    b = efa1.b_ev[:, :5]
    b.T[:5].plot(yscale="log", legend=b.x.labels)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_002.png
         :alt: plot efa
         :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_003.png
         :alt: plot efa
         :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <_Axes: xlabel='acquisition timestamp (GMT) $\\mathrm{/\\ \\mathrm{s}}$', ylabel='absorbance $\\mathrm{}$'>



.. GENERATED FROM PYTHON SOURCE LINES 57-60

Show results with 3 components (which seems to already explain a large part of the dataset)
we use the magnitude of the 4th component for the cut-off value (assuming it
corresponds mostly to noise)

.. GENERATED FROM PYTHON SOURCE LINES 60-67

.. code-block:: default

    efa1.n_components = 3
    efa1.cutoff = efa1.f_ev[:, 3].max()

    # get concentration
    C1 = efa1.transform()
    C1.T.plot(title="EFA determined concentrations", legend=C1.x.labels)




.. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_004.png
   :alt: EFA determined concentrations
   :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <_Axes: title={'center': 'EFA determined concentrations'}, xlabel='acquisition timestamp (GMT) $\\mathrm{/\\ \\mathrm{s}}$', ylabel='values $\\mathrm{}$'>



.. GENERATED FROM PYTHON SOURCE LINES 68-71

Fit transform : Get the concentration in too commands
The number of desired components can be passed to the EFA model,
followed by the fit_transform method:

.. GENERATED FROM PYTHON SOURCE LINES 71-76

.. code-block:: default


    efa2 = scp.EFA(n_components=3)
    C2 = efa2.fit_transform(dataset)
    assert C1 == C2








.. GENERATED FROM PYTHON SOURCE LINES 77-79

Get components


.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: default

    St = efa2.get_components()
    St.plot(title="components", legend=St.y.labels)




.. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_005.png
   :alt: components
   :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <_Axes: title={'center': 'components'}, xlabel='wavenumbers $\\mathrm{/\\ \\mathrm{cm}^{-1}}$', ylabel='values $\\mathrm{}$'>



.. GENERATED FROM PYTHON SOURCE LINES 83-84

Compare with PCA

.. GENERATED FROM PYTHON SOURCE LINES 84-87

.. code-block:: default

    pca = scp.PCA(n_components=3)
    C3 = pca.fit_transform(dataset)








.. GENERATED FROM PYTHON SOURCE LINES 88-90

.. code-block:: default

    C3.T.plot(title="PCA scores")




.. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_006.png
   :alt: PCA scores
   :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <_Axes: title={'center': 'PCA scores'}, xlabel='acquisition timestamp (GMT) $\\mathrm{/\\ \\mathrm{s}}$', ylabel='values $\\mathrm{}$'>



.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: default

    LT = pca.loadings
    LT.plot(title="PCA components", legend=LT.y.labels)




.. image-sg:: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_007.png
   :alt: PCA components
   :srcset: /gallery/auto_examples/analysis/images/sphx_glr_plot_efa_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <_Axes: title={'center': 'PCA components'}, xlabel='wavenumbers $\\mathrm{/\\ \\mathrm{cm}^{-1}}$', ylabel='values $\\mathrm{}$'>



.. GENERATED FROM PYTHON SOURCE LINES 95-97

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script

.. GENERATED FROM PYTHON SOURCE LINES 99-101

.. code-block:: default


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.981 seconds)


.. _sphx_glr_download_gallery_auto_examples_analysis_plot_efa.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_efa.py <plot_efa.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_efa.ipynb <plot_efa.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
